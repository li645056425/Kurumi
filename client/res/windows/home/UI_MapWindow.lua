--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
result['Scene']=cc.Node:create()
result['Scene']:setName("Scene")

--Create Panel_Content
result['Panel_Content'] = ccui.Layout:create()
result['Panel_Content']:ignoreContentAdaptWithSize(false)
result['Panel_Content']:setClippingEnabled(false)
result['Panel_Content']:setBackGroundColorType(1)
result['Panel_Content']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_Content']:setBackGroundColorOpacity(102)
result['Panel_Content']:setLayoutComponentEnabled(true)
result['Panel_Content']:setName("Panel_Content")
result['Panel_Content']:setTag(145)
result['Panel_Content']:setCascadeColorEnabled(true)
result['Panel_Content']:setCascadeOpacityEnabled(true)
result['Panel_Content']:setAnchorPoint(0.5000, 0.5000)
result['Panel_Content']:setPosition(568.0000, 320.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_Content'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
result['Scene']:addChild(result['Panel_Content'])

--Create PageView
result['PageView'] = ccui.PageView:create()
result['PageView']:ignoreContentAdaptWithSize(false)
result['PageView']:setClippingEnabled(true)
result['PageView']:setBackGroundColorOpacity(102)
result['PageView']:setTouchEnabled(false);
result['PageView']:setLayoutComponentEnabled(true)
result['PageView']:setName("PageView")
result['PageView']:setTag(142)
result['PageView']:setCascadeColorEnabled(true)
result['PageView']:setCascadeOpacityEnabled(true)
result['PageView']:setAnchorPoint(0.5000, 0.5000)
result['PageView']:setPosition(568.0000, 320.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['PageView'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
result['Panel_Content']:addChild(result['PageView'])

--Create Panel_Page
result['Panel_Page'] = ccui.Layout:create()
result['Panel_Page']:ignoreContentAdaptWithSize(false)
result['Panel_Page']:setClippingEnabled(false)
result['Panel_Page']:setBackGroundColorOpacity(102)
result['Panel_Page']:setLayoutComponentEnabled(true)
result['Panel_Page']:setName("Panel_Page")
result['Panel_Page']:setTag(146)
result['Panel_Page']:setCascadeColorEnabled(true)
result['Panel_Page']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_Page'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
result['PageView']:addPage(result['Panel_Page'])

--Create Image_bg
result['Image_bg'] = ccui.ImageView:create()
result['Image_bg']:ignoreContentAdaptWithSize(false)
result['Image_bg']:loadTexture("plist/ui/fragment/fbmap01.png",0)
result['Image_bg']:setLayoutComponentEnabled(true)
result['Image_bg']:setName("Image_bg")
result['Image_bg']:setTag(147)
result['Image_bg']:setCascadeColorEnabled(true)
result['Image_bg']:setCascadeOpacityEnabled(true)
result['Image_bg']:setPosition(568.0000, 320.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Image_bg'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
result['Panel_Page']:addChild(result['Image_bg'])

--Create Button_Map1
result['Button_Map1'] = ccui.Button:create()
result['Button_Map1']:ignoreContentAdaptWithSize(false)
result['Button_Map1']:loadTextureNormal("plist/ui/fragment/fbxmap1.png",0)
result['Button_Map1']:loadTextureDisabled("Default/Button_Disable.png",0)
result['Button_Map1']:setTitleFontSize(14)
result['Button_Map1']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Map1']:setScale9Enabled(true)
result['Button_Map1']:setCapInsets({x = 15, y = 11, width = 157, height = 84})
result['Button_Map1']:setLayoutComponentEnabled(true)
result['Button_Map1']:setName("Button_Map1")
result['Button_Map1']:setTag(194)
result['Button_Map1']:setCascadeColorEnabled(true)
result['Button_Map1']:setCascadeOpacityEnabled(true)
result['Button_Map1']:setPosition(216.6944, 177.6897)
if callBackProvider~=nil then
      result['Button_Map1']:addClickEventListener(callBackProvider("UI_MapWindow.lua", result['Button_Map1'], "onClickSelectMap"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Map1'])
layout:setPositionPercentX(0.1908)
layout:setPositionPercentY(0.2776)
layout:setPercentWidth(0.1646)
layout:setPercentHeight(0.1656)
layout:setSize({width = 187.0000, height = 106.0000})
layout:setLeftMargin(123.1944)
layout:setRightMargin(825.8056)
layout:setTopMargin(409.3103)
layout:setBottomMargin(124.6897)
result['Panel_Page']:addChild(result['Button_Map1'])

--Create Text
result['Text'] = ccui.Text:create()
result['Text']:ignoreContentAdaptWithSize(true)
result['Text']:setTextAreaSize({width = 0, height = 0})
result['Text']:setFontSize(25)
result['Text']:setString([[副本1-1]])
result['Text']:setLayoutComponentEnabled(true)
result['Text']:setName("Text")
result['Text']:setTag(150)
result['Text']:setCascadeColorEnabled(true)
result['Text']:setCascadeOpacityEnabled(true)
result['Text']:setAnchorPoint(0.0000, 0.5000)
result['Text']:setPosition(18.7000, 81.9062)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Text'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.1000)
layout:setPositionPercentY(0.7727)
layout:setPercentWidth(0.4759)
layout:setPercentHeight(0.2358)
layout:setSize({width = 89.0000, height = 25.0000})
layout:setLeftMargin(18.7000)
layout:setRightMargin(79.3000)
layout:setTopMargin(11.5938)
layout:setBottomMargin(69.4062)
result['Button_Map1']:addChild(result['Text'])

--Create Button_Map2
result['Button_Map2'] = ccui.Button:create()
result['Button_Map2']:ignoreContentAdaptWithSize(false)
result['Button_Map2']:loadTextureNormal("plist/ui/fragment/fbxmap1.png",0)
result['Button_Map2']:loadTextureDisabled("Default/Button_Disable.png",0)
result['Button_Map2']:setTitleFontSize(14)
result['Button_Map2']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Map2']:setScale9Enabled(true)
result['Button_Map2']:setCapInsets({x = 15, y = 11, width = 157, height = 84})
result['Button_Map2']:setLayoutComponentEnabled(true)
result['Button_Map2']:setName("Button_Map2")
result['Button_Map2']:setTag(195)
result['Button_Map2']:setCascadeColorEnabled(true)
result['Button_Map2']:setCascadeOpacityEnabled(true)
result['Button_Map2']:setPosition(540.9020, 320.4590)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Map2'])
layout:setPositionPercentX(0.4761)
layout:setPositionPercentY(0.5007)
layout:setPercentWidth(0.1646)
layout:setPercentHeight(0.1656)
layout:setSize({width = 187.0000, height = 106.0000})
layout:setLeftMargin(447.4020)
layout:setRightMargin(501.5980)
layout:setTopMargin(266.5410)
layout:setBottomMargin(267.4590)
result['Panel_Page']:addChild(result['Button_Map2'])

--Create Text
result['Text'] = ccui.Text:create()
result['Text']:ignoreContentAdaptWithSize(true)
result['Text']:setTextAreaSize({width = 0, height = 0})
result['Text']:setFontSize(25)
result['Text']:setString([[副本1-1]])
result['Text']:setLayoutComponentEnabled(true)
result['Text']:setName("Text")
result['Text']:setTag(196)
result['Text']:setCascadeColorEnabled(true)
result['Text']:setCascadeOpacityEnabled(true)
result['Text']:setAnchorPoint(0.0000, 0.5000)
result['Text']:setPosition(18.7000, 81.9062)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Text'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.1000)
layout:setPositionPercentY(0.7727)
layout:setPercentWidth(0.4759)
layout:setPercentHeight(0.2358)
layout:setSize({width = 89.0000, height = 25.0000})
layout:setLeftMargin(18.7000)
layout:setRightMargin(79.3000)
layout:setTopMargin(11.5938)
layout:setBottomMargin(69.4062)
result['Button_Map2']:addChild(result['Text'])

--Create Button_Map3
result['Button_Map3'] = ccui.Button:create()
result['Button_Map3']:ignoreContentAdaptWithSize(false)
result['Button_Map3']:loadTextureNormal("plist/ui/fragment/fbxmap1.png",0)
result['Button_Map3']:loadTextureDisabled("Default/Button_Disable.png",0)
result['Button_Map3']:setTitleFontSize(14)
result['Button_Map3']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Map3']:setScale9Enabled(true)
result['Button_Map3']:setCapInsets({x = 15, y = 11, width = 157, height = 84})
result['Button_Map3']:setLayoutComponentEnabled(true)
result['Button_Map3']:setName("Button_Map3")
result['Button_Map3']:setTag(197)
result['Button_Map3']:setCascadeColorEnabled(true)
result['Button_Map3']:setCascadeOpacityEnabled(true)
result['Button_Map3']:setPosition(880.2784, 490.3156)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Map3'])
layout:setPositionPercentX(0.7749)
layout:setPositionPercentY(0.7661)
layout:setPercentWidth(0.1646)
layout:setPercentHeight(0.1656)
layout:setSize({width = 187.0000, height = 106.0000})
layout:setLeftMargin(786.7784)
layout:setRightMargin(162.2216)
layout:setTopMargin(96.6844)
layout:setBottomMargin(437.3156)
result['Panel_Page']:addChild(result['Button_Map3'])

--Create Text
result['Text'] = ccui.Text:create()
result['Text']:ignoreContentAdaptWithSize(true)
result['Text']:setTextAreaSize({width = 0, height = 0})
result['Text']:setFontSize(25)
result['Text']:setString([[副本1-1]])
result['Text']:setLayoutComponentEnabled(true)
result['Text']:setName("Text")
result['Text']:setTag(198)
result['Text']:setCascadeColorEnabled(true)
result['Text']:setCascadeOpacityEnabled(true)
result['Text']:setAnchorPoint(0.0000, 0.5000)
result['Text']:setPosition(18.7000, 81.9062)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Text'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.1000)
layout:setPositionPercentY(0.7727)
layout:setPercentWidth(0.4759)
layout:setPercentHeight(0.2358)
layout:setSize({width = 89.0000, height = 25.0000})
layout:setLeftMargin(18.7000)
layout:setRightMargin(79.3000)
layout:setTopMargin(11.5938)
layout:setBottomMargin(69.4062)
result['Button_Map3']:addChild(result['Text'])

--Create Node_Yun
result['Node_Yun']=cc.Node:create()
result['Node_Yun']:setName("Node_Yun")
result['Node_Yun']:setTag(139)
result['Node_Yun']:setCascadeColorEnabled(true)
result['Node_Yun']:setCascadeOpacityEnabled(true)
result['Node_Yun']:setPosition(1136.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Node_Yun'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(1.0000)
layout:setLeftMargin(1136.0000)
layout:setTopMargin(640.0000)
result['Panel_Content']:addChild(result['Node_Yun'])

--Create ArmatureNode_Yun
result['ArmatureNode_Yun'] = ccs.Armature:create()
result['ArmatureNode_Yun']:setName("ArmatureNode_Yun")
result['ArmatureNode_Yun']:setTag(1)
result['ArmatureNode_Yun']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun']:setPosition(-95.9999, 527.2726)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun'])
layout:setLeftMargin(-95.9999)
layout:setRightMargin(95.9999)
layout:setTopMargin(-527.2726)
layout:setBottomMargin(527.2726)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun']:init("fbylz")
result['ArmatureNode_Yun']:getAnimation():play("fbyc01",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun'])

--Create ArmatureNode_Yun_0
result['ArmatureNode_Yun_0'] = ccs.Armature:create()
result['ArmatureNode_Yun_0']:setName("ArmatureNode_Yun_0")
result['ArmatureNode_Yun_0']:setTag(80)
result['ArmatureNode_Yun_0']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun_0']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun_0']:setPosition(-88.1792, 134.8570)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun_0'])
layout:setLeftMargin(-88.1792)
layout:setRightMargin(88.1792)
layout:setTopMargin(-134.8570)
layout:setBottomMargin(134.8570)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun_0']:init("fbylz")
result['ArmatureNode_Yun_0']:getAnimation():play("fbyc02",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun_0'])

--Create ArmatureNode_Yun_1
result['ArmatureNode_Yun_1'] = ccs.Armature:create()
result['ArmatureNode_Yun_1']:setName("ArmatureNode_Yun_1")
result['ArmatureNode_Yun_1']:setTag(81)
result['ArmatureNode_Yun_1']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun_1']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun_1']:setPosition(-121.4190, 281.5761)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun_1'])
layout:setLeftMargin(-121.4190)
layout:setRightMargin(121.4190)
layout:setTopMargin(-281.5761)
layout:setBottomMargin(281.5761)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun_1']:init("fbylz")
result['ArmatureNode_Yun_1']:getAnimation():play("fbya02",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun_1'])

--Create ArmatureNode_Yun_2
result['ArmatureNode_Yun_2'] = ccs.Armature:create()
result['ArmatureNode_Yun_2']:setName("ArmatureNode_Yun_2")
result['ArmatureNode_Yun_2']:setTag(82)
result['ArmatureNode_Yun_2']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun_2']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun_2']:setPosition(-94.0950, 183.9130)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun_2'])
layout:setLeftMargin(-94.0950)
layout:setRightMargin(94.0950)
layout:setTopMargin(-183.9130)
layout:setBottomMargin(183.9130)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun_2']:init("fbylz")
result['ArmatureNode_Yun_2']:getAnimation():play("fbyb02",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun_2'])

--Create ArmatureNode_Yun_3
result['ArmatureNode_Yun_3'] = ccs.Armature:create()
result['ArmatureNode_Yun_3']:setName("ArmatureNode_Yun_3")
result['ArmatureNode_Yun_3']:setTag(83)
result['ArmatureNode_Yun_3']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun_3']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun_3']:setPosition(-48.5907, 440.1068)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun_3'])
layout:setLeftMargin(-48.5907)
layout:setRightMargin(48.5907)
layout:setTopMargin(-440.1068)
layout:setBottomMargin(440.1068)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun_3']:init("fbylz")
result['ArmatureNode_Yun_3']:getAnimation():play("fbya03",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun_3'])

--Create ArmatureNode_Yun_4
result['ArmatureNode_Yun_4'] = ccs.Armature:create()
result['ArmatureNode_Yun_4']:setName("ArmatureNode_Yun_4")
result['ArmatureNode_Yun_4']:setTag(84)
result['ArmatureNode_Yun_4']:setCascadeColorEnabled(true)
result['ArmatureNode_Yun_4']:setCascadeOpacityEnabled(true)
result['ArmatureNode_Yun_4']:setPosition(-32.5121, 67.6394)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ArmatureNode_Yun_4'])
layout:setLeftMargin(-32.5121)
layout:setRightMargin(32.5121)
layout:setTopMargin(-67.6394)
layout:setBottomMargin(67.6394)
ccs.ArmatureDataManager:getInstance():addArmatureFileInfo("plist/uianimation/fbylz.ExportJson")
result['ArmatureNode_Yun_4']:init("fbylz")
result['ArmatureNode_Yun_4']:getAnimation():play("fbya01",-1, 1)
result['Node_Yun']:addChild(result['ArmatureNode_Yun_4'])

--Create Button_Left
result['Button_Left'] = ccui.Button:create()
result['Button_Left']:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("plist/ui/ui1.plist")
result['Button_Left']:loadTextureNormal("vipui04.png",1)
result['Button_Left']:setTitleFontSize(14)
result['Button_Left']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Left']:setScale9Enabled(true)
result['Button_Left']:setCapInsets({x = 15, y = 11, width = 36, height = 74})
result['Button_Left']:setLayoutComponentEnabled(true)
result['Button_Left']:setName("Button_Left")
result['Button_Left']:setTag(153)
result['Button_Left']:setCascadeColorEnabled(true)
result['Button_Left']:setCascadeOpacityEnabled(true)
result['Button_Left']:setPosition(82.3876, 320.0000)
if callBackProvider~=nil then
      result['Button_Left']:addClickEventListener(callBackProvider("UI_MapWindow.lua", result['Button_Left'], "onClickLeft"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Left'])
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.0725)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.0616)
layout:setPercentHeight(0.1563)
layout:setSize({width = 70.0000, height = 100.0000})
layout:setLeftMargin(47.3876)
layout:setRightMargin(1018.6120)
layout:setTopMargin(270.0000)
layout:setBottomMargin(270.0000)
result['Panel_Content']:addChild(result['Button_Left'])

--Create Button_Right
result['Button_Right'] = ccui.Button:create()
result['Button_Right']:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("plist/ui/ui1.plist")
result['Button_Right']:loadTextureNormal("vipui04.png",1)
result['Button_Right']:setTitleFontSize(14)
result['Button_Right']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Right']:setFlippedX(true)
result['Button_Right']:setScale9Enabled(true)
result['Button_Right']:setCapInsets({x = 15, y = 11, width = 36, height = 74})
result['Button_Right']:setLayoutComponentEnabled(true)
result['Button_Right']:setName("Button_Right")
result['Button_Right']:setTag(154)
result['Button_Right']:setCascadeColorEnabled(true)
result['Button_Right']:setCascadeOpacityEnabled(true)
result['Button_Right']:setPosition(1039.1150, 320.0000)
if callBackProvider~=nil then
      result['Button_Right']:addClickEventListener(callBackProvider("UI_MapWindow.lua", result['Button_Right'], "onClickRight"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Right'])
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.9147)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.0616)
layout:setPercentHeight(0.1563)
layout:setSize({width = 70.0000, height = 100.0000})
layout:setLeftMargin(1004.1150)
layout:setRightMargin(61.8845)
layout:setTopMargin(270.0000)
layout:setBottomMargin(270.0000)
result['Panel_Content']:addChild(result['Button_Right'])

--Create Button_2
result['Button_2'] = ccui.Button:create()
result['Button_2']:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("plist/ui/ui2.plist")
result['Button_2']:loadTextureNormal("fbjmt01.png",1)
result['Button_2']:setTitleFontSize(14)
result['Button_2']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_2']:setScale9Enabled(true)
result['Button_2']:setCapInsets({x = 15, y = 11, width = 34, height = 42})
result['Button_2']:setLayoutComponentEnabled(true)
result['Button_2']:setName("Button_2")
result['Button_2']:setTag(32)
result['Button_2']:setCascadeColorEnabled(true)
result['Button_2']:setCascadeOpacityEnabled(true)
result['Button_2']:setPosition(1084.4680, 583.5734)
if callBackProvider~=nil then
      result['Button_2']:addClickEventListener(callBackProvider("UI_MapWindow.lua", result['Button_2'], "onClickBack"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_2'])
layout:setPositionPercentX(0.9546)
layout:setPositionPercentY(0.9118)
layout:setPercentWidth(0.0563)
layout:setPercentHeight(0.1000)
layout:setSize({width = 64.0000, height = 64.0000})
layout:setLeftMargin(1052.4680)
layout:setRightMargin(19.5316)
layout:setTopMargin(24.4266)
layout:setBottomMargin(551.5734)
result['Panel_Content']:addChild(result['Button_2'])

--Create ListView_1
result['ListView_1'] = ccui.ListView:create()
result['ListView_1']:setDirection(1)
result['ListView_1']:setGravity(0)
result['ListView_1']:ignoreContentAdaptWithSize(false)
result['ListView_1']:setClippingEnabled(true)
result['ListView_1']:setBackGroundColorType(1)
result['ListView_1']:setBackGroundColor({r = 150, g = 150, b = 255})
result['ListView_1']:setBackGroundColorOpacity(102)
result['ListView_1']:setLayoutComponentEnabled(true)
result['ListView_1']:setName("ListView_1")
result['ListView_1']:setTag(64)
result['ListView_1']:setCascadeColorEnabled(true)
result['ListView_1']:setCascadeOpacityEnabled(true)
result['ListView_1']:setPosition(97.4513, 38.4009)
layout = ccui.LayoutComponent:bindLayoutComponent(result['ListView_1'])
layout:setPositionPercentX(0.0858)
layout:setPositionPercentY(0.0600)
layout:setPercentWidth(0.6162)
layout:setPercentHeight(0.8952)
layout:setSize({width = 700.0000, height = 572.9125})
layout:setLeftMargin(97.4513)
layout:setRightMargin(338.5487)
layout:setTopMargin(28.6867)
layout:setBottomMargin(38.4009)
result['Panel_Content']:addChild(result['ListView_1'])

--Create Panel_1
result['Panel_1'] = ccui.Layout:create()
result['Panel_1']:ignoreContentAdaptWithSize(false)
result['Panel_1']:setClippingEnabled(false)
result['Panel_1']:setBackGroundColorType(1)
result['Panel_1']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1']:setBackGroundColorOpacity(102)
result['Panel_1']:setTouchEnabled(true);
result['Panel_1']:setLayoutComponentEnabled(true)
result['Panel_1']:setName("Panel_1")
result['Panel_1']:setTag(150)
result['Panel_1']:setCascadeColorEnabled(true)
result['Panel_1']:setCascadeOpacityEnabled(true)
result['Panel_1']:setPosition(0.0000, 1300.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1'])
layout:setPositionPercentY(0.8333)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setBottomMargin(500.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(151)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1']:addChild(result['FileNode_2'])

--Create Panel_1_0
result['Panel_1_0'] = ccui.Layout:create()
result['Panel_1_0']:ignoreContentAdaptWithSize(false)
result['Panel_1_0']:setClippingEnabled(false)
result['Panel_1_0']:setBackGroundColorType(1)
result['Panel_1_0']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_0']:setBackGroundColorOpacity(102)
result['Panel_1_0']:setTouchEnabled(true);
result['Panel_1_0']:setLayoutComponentEnabled(true)
result['Panel_1_0']:setName("Panel_1_0")
result['Panel_1_0']:setLocalZOrder(1)
result['Panel_1_0']:setTag(225)
result['Panel_1_0']:setCascadeColorEnabled(true)
result['Panel_1_0']:setCascadeOpacityEnabled(true)
result['Panel_1_0']:setPosition(0.0000, 1200.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_0'])
layout:setPositionPercentY(0.6667)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(100.0000)
layout:setBottomMargin(400.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_0'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(226)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_0']:addChild(result['FileNode_2'])

--Create Panel_1_1
result['Panel_1_1'] = ccui.Layout:create()
result['Panel_1_1']:ignoreContentAdaptWithSize(false)
result['Panel_1_1']:setClippingEnabled(false)
result['Panel_1_1']:setBackGroundColorType(1)
result['Panel_1_1']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_1']:setBackGroundColorOpacity(102)
result['Panel_1_1']:setTouchEnabled(true);
result['Panel_1_1']:setLayoutComponentEnabled(true)
result['Panel_1_1']:setName("Panel_1_1")
result['Panel_1_1']:setLocalZOrder(2)
result['Panel_1_1']:setTag(300)
result['Panel_1_1']:setCascadeColorEnabled(true)
result['Panel_1_1']:setCascadeOpacityEnabled(true)
result['Panel_1_1']:setPosition(0.0000, 1100.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_1'])
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(200.0000)
layout:setBottomMargin(300.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_1'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(301)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_1']:addChild(result['FileNode_2'])

--Create Panel_1_2
result['Panel_1_2'] = ccui.Layout:create()
result['Panel_1_2']:ignoreContentAdaptWithSize(false)
result['Panel_1_2']:setClippingEnabled(false)
result['Panel_1_2']:setBackGroundColorType(1)
result['Panel_1_2']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_2']:setBackGroundColorOpacity(102)
result['Panel_1_2']:setTouchEnabled(true);
result['Panel_1_2']:setLayoutComponentEnabled(true)
result['Panel_1_2']:setName("Panel_1_2")
result['Panel_1_2']:setLocalZOrder(3)
result['Panel_1_2']:setTag(375)
result['Panel_1_2']:setCascadeColorEnabled(true)
result['Panel_1_2']:setCascadeOpacityEnabled(true)
result['Panel_1_2']:setPosition(0.0000, 1000.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_2'])
layout:setPositionPercentY(0.3333)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(300.0000)
layout:setBottomMargin(200.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_2'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(376)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_2']:addChild(result['FileNode_2'])

--Create Panel_1_3
result['Panel_1_3'] = ccui.Layout:create()
result['Panel_1_3']:ignoreContentAdaptWithSize(false)
result['Panel_1_3']:setClippingEnabled(false)
result['Panel_1_3']:setBackGroundColorType(1)
result['Panel_1_3']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_3']:setBackGroundColorOpacity(102)
result['Panel_1_3']:setTouchEnabled(true);
result['Panel_1_3']:setLayoutComponentEnabled(true)
result['Panel_1_3']:setName("Panel_1_3")
result['Panel_1_3']:setLocalZOrder(4)
result['Panel_1_3']:setTag(450)
result['Panel_1_3']:setCascadeColorEnabled(true)
result['Panel_1_3']:setCascadeOpacityEnabled(true)
result['Panel_1_3']:setPosition(0.0000, 900.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_3'])
layout:setPositionPercentY(0.1667)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(400.0000)
layout:setBottomMargin(100.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_3'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(451)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_3']:addChild(result['FileNode_2'])

--Create Panel_1_4
result['Panel_1_4'] = ccui.Layout:create()
result['Panel_1_4']:ignoreContentAdaptWithSize(false)
result['Panel_1_4']:setClippingEnabled(false)
result['Panel_1_4']:setBackGroundColorType(1)
result['Panel_1_4']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_4']:setBackGroundColorOpacity(102)
result['Panel_1_4']:setTouchEnabled(true);
result['Panel_1_4']:setLayoutComponentEnabled(true)
result['Panel_1_4']:setName("Panel_1_4")
result['Panel_1_4']:setLocalZOrder(5)
result['Panel_1_4']:setTag(525)
result['Panel_1_4']:setCascadeColorEnabled(true)
result['Panel_1_4']:setCascadeOpacityEnabled(true)
result['Panel_1_4']:setPosition(0.0000, 800.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_4'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1667)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(500.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_4'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(526)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_4']:addChild(result['FileNode_2'])

--Create Panel_1_5
result['Panel_1_5'] = ccui.Layout:create()
result['Panel_1_5']:ignoreContentAdaptWithSize(false)
result['Panel_1_5']:setClippingEnabled(false)
result['Panel_1_5']:setBackGroundColorType(1)
result['Panel_1_5']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_5']:setBackGroundColorOpacity(102)
result['Panel_1_5']:setTouchEnabled(true);
result['Panel_1_5']:setLayoutComponentEnabled(true)
result['Panel_1_5']:setName("Panel_1_5")
result['Panel_1_5']:setLocalZOrder(6)
result['Panel_1_5']:setTag(1758)
result['Panel_1_5']:setCascadeColorEnabled(true)
result['Panel_1_5']:setCascadeOpacityEnabled(true)
result['Panel_1_5']:setPosition(0.0000, 700.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_5'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1429)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(600.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_5'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(1759)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_5']:addChild(result['FileNode_2'])

--Create Panel_1_6
result['Panel_1_6'] = ccui.Layout:create()
result['Panel_1_6']:ignoreContentAdaptWithSize(false)
result['Panel_1_6']:setClippingEnabled(false)
result['Panel_1_6']:setBackGroundColorType(1)
result['Panel_1_6']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_6']:setBackGroundColorOpacity(102)
result['Panel_1_6']:setTouchEnabled(true);
result['Panel_1_6']:setLayoutComponentEnabled(true)
result['Panel_1_6']:setName("Panel_1_6")
result['Panel_1_6']:setLocalZOrder(7)
result['Panel_1_6']:setTag(1869)
result['Panel_1_6']:setCascadeColorEnabled(true)
result['Panel_1_6']:setCascadeOpacityEnabled(true)
result['Panel_1_6']:setPosition(0.0000, 600.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_6'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1250)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(700.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_6'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(1870)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_6']:addChild(result['FileNode_2'])

--Create Panel_1_7
result['Panel_1_7'] = ccui.Layout:create()
result['Panel_1_7']:ignoreContentAdaptWithSize(false)
result['Panel_1_7']:setClippingEnabled(false)
result['Panel_1_7']:setBackGroundColorType(1)
result['Panel_1_7']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_7']:setBackGroundColorOpacity(102)
result['Panel_1_7']:setTouchEnabled(true);
result['Panel_1_7']:setLayoutComponentEnabled(true)
result['Panel_1_7']:setName("Panel_1_7")
result['Panel_1_7']:setLocalZOrder(8)
result['Panel_1_7']:setTag(1980)
result['Panel_1_7']:setCascadeColorEnabled(true)
result['Panel_1_7']:setCascadeOpacityEnabled(true)
result['Panel_1_7']:setPosition(0.0000, 500.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_7'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1111)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(800.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_7'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(1981)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_7']:addChild(result['FileNode_2'])

--Create Panel_1_8
result['Panel_1_8'] = ccui.Layout:create()
result['Panel_1_8']:ignoreContentAdaptWithSize(false)
result['Panel_1_8']:setClippingEnabled(false)
result['Panel_1_8']:setBackGroundColorType(1)
result['Panel_1_8']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_8']:setBackGroundColorOpacity(102)
result['Panel_1_8']:setTouchEnabled(true);
result['Panel_1_8']:setLayoutComponentEnabled(true)
result['Panel_1_8']:setName("Panel_1_8")
result['Panel_1_8']:setLocalZOrder(9)
result['Panel_1_8']:setTag(2091)
result['Panel_1_8']:setCascadeColorEnabled(true)
result['Panel_1_8']:setCascadeOpacityEnabled(true)
result['Panel_1_8']:setPosition(0.0000, 400.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_8'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.1000)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(900.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_8'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(2092)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_8']:addChild(result['FileNode_2'])

--Create Panel_1_9
result['Panel_1_9'] = ccui.Layout:create()
result['Panel_1_9']:ignoreContentAdaptWithSize(false)
result['Panel_1_9']:setClippingEnabled(false)
result['Panel_1_9']:setBackGroundColorType(1)
result['Panel_1_9']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_9']:setBackGroundColorOpacity(102)
result['Panel_1_9']:setTouchEnabled(true);
result['Panel_1_9']:setLayoutComponentEnabled(true)
result['Panel_1_9']:setName("Panel_1_9")
result['Panel_1_9']:setLocalZOrder(10)
result['Panel_1_9']:setTag(2202)
result['Panel_1_9']:setCascadeColorEnabled(true)
result['Panel_1_9']:setCascadeOpacityEnabled(true)
result['Panel_1_9']:setPosition(0.0000, 300.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_9'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0909)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(1000.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_9'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(2203)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_9']:addChild(result['FileNode_2'])

--Create Panel_1_10
result['Panel_1_10'] = ccui.Layout:create()
result['Panel_1_10']:ignoreContentAdaptWithSize(false)
result['Panel_1_10']:setClippingEnabled(false)
result['Panel_1_10']:setBackGroundColorType(1)
result['Panel_1_10']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_10']:setBackGroundColorOpacity(102)
result['Panel_1_10']:setTouchEnabled(true);
result['Panel_1_10']:setLayoutComponentEnabled(true)
result['Panel_1_10']:setName("Panel_1_10")
result['Panel_1_10']:setLocalZOrder(11)
result['Panel_1_10']:setTag(2313)
result['Panel_1_10']:setCascadeColorEnabled(true)
result['Panel_1_10']:setCascadeOpacityEnabled(true)
result['Panel_1_10']:setPosition(0.0000, 200.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_10'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0833)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(1100.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_10'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(2314)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_10']:addChild(result['FileNode_2'])

--Create Panel_1_11
result['Panel_1_11'] = ccui.Layout:create()
result['Panel_1_11']:ignoreContentAdaptWithSize(false)
result['Panel_1_11']:setClippingEnabled(false)
result['Panel_1_11']:setBackGroundColorType(1)
result['Panel_1_11']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_11']:setBackGroundColorOpacity(102)
result['Panel_1_11']:setTouchEnabled(true);
result['Panel_1_11']:setLayoutComponentEnabled(true)
result['Panel_1_11']:setName("Panel_1_11")
result['Panel_1_11']:setLocalZOrder(12)
result['Panel_1_11']:setTag(2424)
result['Panel_1_11']:setCascadeColorEnabled(true)
result['Panel_1_11']:setCascadeOpacityEnabled(true)
result['Panel_1_11']:setPosition(0.0000, 100.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_11'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0769)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(1200.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_11'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(2425)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_11']:addChild(result['FileNode_2'])

--Create Panel_1_12
result['Panel_1_12'] = ccui.Layout:create()
result['Panel_1_12']:ignoreContentAdaptWithSize(false)
result['Panel_1_12']:setClippingEnabled(false)
result['Panel_1_12']:setBackGroundColorType(1)
result['Panel_1_12']:setBackGroundColor({r = 150, g = 200, b = 255})
result['Panel_1_12']:setBackGroundColorOpacity(102)
result['Panel_1_12']:setTouchEnabled(true);
result['Panel_1_12']:setLayoutComponentEnabled(true)
result['Panel_1_12']:setName("Panel_1_12")
result['Panel_1_12']:setLocalZOrder(13)
result['Panel_1_12']:setTag(2535)
result['Panel_1_12']:setCascadeColorEnabled(true)
result['Panel_1_12']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_1_12'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0714)
layout:setSize({width = 700.0000, height = 100.0000})
layout:setTopMargin(1300.0000)
result['ListView_1']:pushBackCustomItem(result['Panel_1_12'])

--Create FileNode_2
innerCSD = require("windows.home.Layer")
innerProject = innerCSD.create(callBackProvider)
result['FileNode_2'] = innerProject.root
result['FileNode_2'].animation = innerProject.animation
result['FileNode_2']:setName("FileNode_2")
result['FileNode_2']:setTag(2536)
result['FileNode_2']:setCascadeColorEnabled(true)
result['FileNode_2']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['FileNode_2'])
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 700.0000, height = 100.0000})
innerProject.animation:setTimeSpeed(1.0000)
result['FileNode_2']:runAction(innerProject.animation)
result['Panel_1_12']:addChild(result['FileNode_2'])

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = result['Scene']
return result;
end

return Result

