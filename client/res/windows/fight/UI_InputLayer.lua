--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
result['Scene']=cc.Node:create()
result['Scene']:setName("Scene")

--Create Panel_Content
result['Panel_Content'] = ccui.Layout:create()
result['Panel_Content']:ignoreContentAdaptWithSize(false)
result['Panel_Content']:setClippingEnabled(false)
result['Panel_Content']:setBackGroundColorOpacity(102)
result['Panel_Content']:setLayoutComponentEnabled(true)
result['Panel_Content']:setName("Panel_Content")
result['Panel_Content']:setTag(170)
result['Panel_Content']:setCascadeColorEnabled(true)
result['Panel_Content']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Panel_Content'])
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
result['Scene']:addChild(result['Panel_Content'])

--Create sprite_BG
result['sprite_BG'] = cc.Sprite:create("plist/cont/adui10.png")
result['sprite_BG']:setName("sprite_BG")
result['sprite_BG']:setTag(234)
result['sprite_BG']:setCascadeColorEnabled(true)
result['sprite_BG']:setCascadeOpacityEnabled(true)
result['sprite_BG']:setPosition(182.1176, 161.8839)
layout = ccui.LayoutComponent:bindLayoutComponent(result['sprite_BG'])
layout:setPositionPercentX(0.1603)
layout:setPositionPercentY(0.2529)
layout:setPercentWidth(0.4930)
layout:setPercentHeight(0.8750)
layout:setSize({width = 560.0000, height = 560.0000})
layout:setLeftMargin(-97.8824)
layout:setRightMargin(673.8824)
layout:setTopMargin(198.1161)
layout:setBottomMargin(-118.1161)
result['sprite_BG']:setBlendFunc({src = 1, dst = 771})
result['Panel_Content']:addChild(result['sprite_BG'])

--Create sprite_Ori
result['sprite_Ori'] = cc.Sprite:create("plist/cont/adui10_2.png")
result['sprite_Ori']:setName("sprite_Ori")
result['sprite_Ori']:setTag(235)
result['sprite_Ori']:setCascadeColorEnabled(true)
result['sprite_Ori']:setCascadeOpacityEnabled(true)
result['sprite_Ori']:setPosition(280.0000, 280.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['sprite_Ori'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.3946)
layout:setPercentHeight(0.3946)
layout:setSize({width = 221.0000, height = 221.0000})
layout:setLeftMargin(169.5000)
layout:setRightMargin(169.5000)
layout:setTopMargin(169.5000)
layout:setBottomMargin(169.5000)
result['sprite_Ori']:setBlendFunc({src = 1, dst = 771})
result['sprite_BG']:addChild(result['sprite_Ori'])

--Create sprite_Red
result['sprite_Red'] = cc.Sprite:create("plist/cont/adui35.png")
result['sprite_Red']:setName("sprite_Red")
result['sprite_Red']:setTag(236)
result['sprite_Red']:setCascadeColorEnabled(true)
result['sprite_Red']:setCascadeOpacityEnabled(true)
result['sprite_Red']:setPosition(280.0000, 280.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['sprite_Red'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.3946)
layout:setPercentHeight(0.3946)
layout:setSize({width = 221.0000, height = 221.0000})
layout:setLeftMargin(169.5000)
layout:setRightMargin(169.5000)
layout:setTopMargin(169.5000)
layout:setBottomMargin(169.5000)
result['sprite_Red']:setBlendFunc({src = 1, dst = 771})
result['sprite_BG']:addChild(result['sprite_Red'])

--Create sprite_Move
result['sprite_Move'] = cc.Sprite:create("plist/cont/joyk2.png")
result['sprite_Move']:setName("sprite_Move")
result['sprite_Move']:setTag(233)
result['sprite_Move']:setCascadeColorEnabled(true)
result['sprite_Move']:setCascadeOpacityEnabled(true)
result['sprite_Move']:setPosition(182.1193, 161.8858)
layout = ccui.LayoutComponent:bindLayoutComponent(result['sprite_Move'])
layout:setPositionPercentX(0.1603)
layout:setPositionPercentY(0.2529)
layout:setPercentWidth(0.5282)
layout:setPercentHeight(0.9375)
layout:setSize({width = 600.0000, height = 600.0000})
layout:setLeftMargin(-117.8807)
layout:setRightMargin(653.8807)
layout:setTopMargin(178.1142)
layout:setBottomMargin(-138.1142)
result['sprite_Move']:setBlendFunc({src = 1, dst = 771})
result['Panel_Content']:addChild(result['sprite_Move'])

--Create Button_ChangeWeapon
result['Button_ChangeWeapon'] = ccui.Button:create()
result['Button_ChangeWeapon']:ignoreContentAdaptWithSize(false)
result['Button_ChangeWeapon']:loadTextureNormal("plist/cont/icon2_2.png",0)
result['Button_ChangeWeapon']:loadTexturePressed("plist/cont/icon2_1.png",0)
result['Button_ChangeWeapon']:setTitleFontSize(14)
result['Button_ChangeWeapon']:setTitleText("Button")
result['Button_ChangeWeapon']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_ChangeWeapon']:setScale9Enabled(true)
result['Button_ChangeWeapon']:setCapInsets({x = 15, y = 11, width = 80, height = 88})
result['Button_ChangeWeapon']:setBright(false)
result['Button_ChangeWeapon']:setTouchEnabled(false);
result['Button_ChangeWeapon']:setLayoutComponentEnabled(true)
result['Button_ChangeWeapon']:setName("Button_ChangeWeapon")
result['Button_ChangeWeapon']:setTag(249)
result['Button_ChangeWeapon']:setCascadeColorEnabled(true)
result['Button_ChangeWeapon']:setCascadeOpacityEnabled(true)
result['Button_ChangeWeapon']:setVisible(false)
result['Button_ChangeWeapon']:setPosition(695.8053, 88.5668)
if callBackProvider~=nil then
      result['Button_ChangeWeapon']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_ChangeWeapon'], "onClickChangeWeapon"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_ChangeWeapon'])
layout:setPositionPercentX(0.6125)
layout:setPositionPercentY(0.1384)
layout:setPercentWidth(0.0968)
layout:setPercentHeight(0.1719)
layout:setSize({width = 110.0000, height = 110.0000})
layout:setLeftMargin(640.8053)
layout:setRightMargin(385.1947)
layout:setTopMargin(496.4332)
layout:setBottomMargin(33.5668)
result['Panel_Content']:addChild(result['Button_ChangeWeapon'])

--Create Button_1
result['Button_1'] = ccui.Button:create()
result['Button_1']:ignoreContentAdaptWithSize(false)
result['Button_1']:loadTextureNormal("plist/cont/atk_but.png",0)
result['Button_1']:setTitleFontSize(14)
result['Button_1']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_1']:setScale9Enabled(true)
result['Button_1']:setCapInsets({x = 15, y = 11, width = 100, height = 108})
result['Button_1']:setLayoutComponentEnabled(true)
result['Button_1']:setName("Button_1")
result['Button_1']:setTag(19)
result['Button_1']:setCascadeColorEnabled(true)
result['Button_1']:setCascadeOpacityEnabled(true)
result['Button_1']:setPosition(1013.3350, 105.6456)
if callBackProvider~=nil then
      result['Button_1']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_1'], "onClickAttack"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_1'])
layout:setPositionPercentX(0.8920)
layout:setPositionPercentY(0.1651)
layout:setPercentWidth(0.1144)
layout:setPercentHeight(0.2031)
layout:setSize({width = 130.0000, height = 130.0000})
layout:setLeftMargin(948.3350)
layout:setRightMargin(57.6650)
layout:setTopMargin(469.3544)
layout:setBottomMargin(40.6456)
result['Panel_Content']:addChild(result['Button_1'])

--Create Button_2
result['Button_2'] = ccui.Button:create()
result['Button_2']:ignoreContentAdaptWithSize(false)
result['Button_2']:loadTextureNormal("Default/Button_Normal.png",0)
result['Button_2']:loadTexturePressed("Default/Button_Press.png",0)
result['Button_2']:loadTextureDisabled("Default/Button_Disable.png",0)
result['Button_2']:setTitleFontSize(14)
result['Button_2']:setTitleText("Button")
result['Button_2']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_2']:setScale9Enabled(true)
result['Button_2']:setCapInsets({x = 15, y = 11, width = 16, height = 14})
result['Button_2']:setLayoutComponentEnabled(true)
result['Button_2']:setName("Button_2")
result['Button_2']:setTag(68)
result['Button_2']:setCascadeColorEnabled(true)
result['Button_2']:setCascadeOpacityEnabled(true)
result['Button_2']:setPosition(84.3111, 583.7205)
if callBackProvider~=nil then
      result['Button_2']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_2'], "onClickOpenDebug"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_2'])
layout:setPositionPercentX(0.0742)
layout:setPositionPercentY(0.9121)
layout:setPercentWidth(0.0630)
layout:setPercentHeight(0.0642)
layout:setSize({width = 71.5457, height = 41.1091})
layout:setLeftMargin(48.5383)
layout:setRightMargin(1015.9160)
layout:setTopMargin(35.7249)
layout:setBottomMargin(563.1660)
result['Panel_Content']:addChild(result['Button_2'])

--Create Node_Skill_1
result['Node_Skill_1']=cc.Node:create()
result['Node_Skill_1']:setName("Node_Skill_1")
result['Node_Skill_1']:setTag(22)
result['Node_Skill_1']:setCascadeColorEnabled(true)
result['Node_Skill_1']:setCascadeOpacityEnabled(true)
result['Node_Skill_1']:setPosition(864.7178, 67.6351)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Node_Skill_1'])
layout:setPositionPercentX(0.7612)
layout:setPositionPercentY(0.1057)
layout:setLeftMargin(864.7178)
layout:setRightMargin(271.2822)
layout:setTopMargin(572.3649)
layout:setBottomMargin(67.6351)
result['Panel_Content']:addChild(result['Node_Skill_1'])

--Create Image
result['Image'] = ccui.ImageView:create()
result['Image']:ignoreContentAdaptWithSize(false)
result['Image']:loadTexture("plist/cont/ay02.png",0)
result['Image']:setLayoutComponentEnabled(true)
result['Image']:setName("Image")
result['Image']:setTag(21)
result['Image']:setCascadeColorEnabled(true)
result['Image']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Image'])
layout:setSize({width = 70.0000, height = 71.0000})
layout:setLeftMargin(-35.0000)
layout:setRightMargin(-35.0000)
layout:setTopMargin(-35.5000)
layout:setBottomMargin(-35.5000)
result['Node_Skill_1']:addChild(result['Image'])

--Create Button_Skill
result['Button_Skill'] = ccui.Button:create()
result['Button_Skill']:ignoreContentAdaptWithSize(false)
result['Button_Skill']:loadTextureNormal("plist/cont/c_but_1.png",0)
result['Button_Skill']:loadTexturePressed("plist/cont/c_but_2.png",0)
result['Button_Skill']:setTitleFontSize(14)
result['Button_Skill']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Skill']:setScale9Enabled(true)
result['Button_Skill']:setCapInsets({x = 15, y = 11, width = 54, height = 62})
result['Button_Skill']:setLayoutComponentEnabled(true)
result['Button_Skill']:setName("Button_Skill")
result['Button_Skill']:setTag(42)
result['Button_Skill']:setCascadeColorEnabled(true)
result['Button_Skill']:setCascadeOpacityEnabled(true)
result['Button_Skill'].UserData = {}
result['Button_Skill'].UserData[1] = [==========[1]==========]
if callBackProvider~=nil then
      result['Button_Skill']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_Skill'], "onClickSkill"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Skill'])
layout:setSize({width = 84.0000, height = 84.0000})
layout:setLeftMargin(-42.0000)
layout:setRightMargin(-42.0000)
layout:setTopMargin(-42.0000)
layout:setBottomMargin(-42.0000)
result['Node_Skill_1']:addChild(result['Button_Skill'])

--Create Node_Skill_2
result['Node_Skill_2']=cc.Node:create()
result['Node_Skill_2']:setName("Node_Skill_2")
result['Node_Skill_2']:setTag(23)
result['Node_Skill_2']:setCascadeColorEnabled(true)
result['Node_Skill_2']:setCascadeOpacityEnabled(true)
result['Node_Skill_2']:setPosition(895.5136, 167.6803)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Node_Skill_2'])
layout:setPositionPercentX(0.7883)
layout:setPositionPercentY(0.2620)
layout:setLeftMargin(895.5136)
layout:setRightMargin(240.4864)
layout:setTopMargin(472.3197)
layout:setBottomMargin(167.6803)
result['Panel_Content']:addChild(result['Node_Skill_2'])

--Create Image
result['Image'] = ccui.ImageView:create()
result['Image']:ignoreContentAdaptWithSize(false)
result['Image']:loadTexture("plist/cont/xiazhan.png",0)
result['Image']:setLayoutComponentEnabled(true)
result['Image']:setName("Image")
result['Image']:setTag(24)
result['Image']:setCascadeColorEnabled(true)
result['Image']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Image'])
layout:setSize({width = 71.0000, height = 71.0000})
layout:setLeftMargin(-35.5000)
layout:setRightMargin(-35.5000)
layout:setTopMargin(-35.5000)
layout:setBottomMargin(-35.5000)
result['Node_Skill_2']:addChild(result['Image'])

--Create Button_Skill
result['Button_Skill'] = ccui.Button:create()
result['Button_Skill']:ignoreContentAdaptWithSize(false)
result['Button_Skill']:loadTextureNormal("plist/cont/c_but_1.png",0)
result['Button_Skill']:loadTexturePressed("plist/cont/c_but_2.png",0)
result['Button_Skill']:setTitleFontSize(14)
result['Button_Skill']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Skill']:setScale9Enabled(true)
result['Button_Skill']:setCapInsets({x = 15, y = 11, width = 54, height = 62})
result['Button_Skill']:setLayoutComponentEnabled(true)
result['Button_Skill']:setName("Button_Skill")
result['Button_Skill']:setTag(25)
result['Button_Skill']:setCascadeColorEnabled(true)
result['Button_Skill']:setCascadeOpacityEnabled(true)
result['Button_Skill'].UserData = {}
result['Button_Skill'].UserData[1] = [==========[2]==========]
if callBackProvider~=nil then
      result['Button_Skill']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_Skill'], "onClickSkill"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Skill'])
layout:setSize({width = 84.0000, height = 84.0000})
layout:setLeftMargin(-42.0000)
layout:setRightMargin(-42.0000)
layout:setTopMargin(-42.0000)
layout:setBottomMargin(-42.0000)
result['Node_Skill_2']:addChild(result['Button_Skill'])

--Create Node_Skill_3
result['Node_Skill_3']=cc.Node:create()
result['Node_Skill_3']:setName("Node_Skill_3")
result['Node_Skill_3']:setTag(26)
result['Node_Skill_3']:setCascadeColorEnabled(true)
result['Node_Skill_3']:setCascadeOpacityEnabled(true)
result['Node_Skill_3']:setPosition(1068.4180, 274.6567)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Node_Skill_3'])
layout:setPositionPercentX(0.9405)
layout:setPositionPercentY(0.4292)
layout:setLeftMargin(1068.4180)
layout:setRightMargin(67.5823)
layout:setTopMargin(365.3433)
layout:setBottomMargin(274.6567)
result['Panel_Content']:addChild(result['Node_Skill_3'])

--Create Image
result['Image'] = ccui.ImageView:create()
result['Image']:ignoreContentAdaptWithSize(false)
result['Image']:loadTexture("plist/cont/xulizhan.png",0)
result['Image']:setLayoutComponentEnabled(true)
result['Image']:setName("Image")
result['Image']:setTag(27)
result['Image']:setCascadeColorEnabled(true)
result['Image']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Image'])
layout:setSize({width = 71.0000, height = 71.0000})
layout:setLeftMargin(-35.5000)
layout:setRightMargin(-35.5000)
layout:setTopMargin(-35.5000)
layout:setBottomMargin(-35.5000)
result['Node_Skill_3']:addChild(result['Image'])

--Create Button_Skill
result['Button_Skill'] = ccui.Button:create()
result['Button_Skill']:ignoreContentAdaptWithSize(false)
result['Button_Skill']:loadTextureNormal("plist/cont/c_but_1.png",0)
result['Button_Skill']:loadTexturePressed("plist/cont/c_but_2.png",0)
result['Button_Skill']:setTitleFontSize(14)
result['Button_Skill']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Skill']:setScale9Enabled(true)
result['Button_Skill']:setCapInsets({x = 15, y = 11, width = 54, height = 62})
result['Button_Skill']:setLayoutComponentEnabled(true)
result['Button_Skill']:setName("Button_Skill")
result['Button_Skill']:setTag(28)
result['Button_Skill']:setCascadeColorEnabled(true)
result['Button_Skill']:setCascadeOpacityEnabled(true)
result['Button_Skill'].UserData = {}
result['Button_Skill'].UserData[1] = [==========[4]==========]
if callBackProvider~=nil then
      result['Button_Skill']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_Skill'], "onClickSkill"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Skill'])
layout:setSize({width = 84.0000, height = 84.0000})
layout:setLeftMargin(-42.0000)
layout:setRightMargin(-42.0000)
layout:setTopMargin(-42.0000)
layout:setBottomMargin(-42.0000)
result['Node_Skill_3']:addChild(result['Button_Skill'])

--Create Node_Skill_4
result['Node_Skill_4']=cc.Node:create()
result['Node_Skill_4']:setName("Node_Skill_4")
result['Node_Skill_4']:setTag(29)
result['Node_Skill_4']:setCascadeColorEnabled(true)
result['Node_Skill_4']:setCascadeOpacityEnabled(true)
result['Node_Skill_4']:setPosition(970.9692, 238.6622)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Node_Skill_4'])
layout:setPositionPercentX(0.8547)
layout:setPositionPercentY(0.3729)
layout:setLeftMargin(970.9692)
layout:setRightMargin(165.0308)
layout:setTopMargin(401.3378)
layout:setBottomMargin(238.6622)
result['Panel_Content']:addChild(result['Node_Skill_4'])

--Create Image
result['Image'] = ccui.ImageView:create()
result['Image']:ignoreContentAdaptWithSize(false)
result['Image']:loadTexture("plist/cont/ay01.png",0)
result['Image']:setLayoutComponentEnabled(true)
result['Image']:setName("Image")
result['Image']:setTag(30)
result['Image']:setCascadeColorEnabled(true)
result['Image']:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(result['Image'])
layout:setSize({width = 70.0000, height = 71.0000})
layout:setLeftMargin(-35.0000)
layout:setRightMargin(-35.0000)
layout:setTopMargin(-35.5000)
layout:setBottomMargin(-35.5000)
result['Node_Skill_4']:addChild(result['Image'])

--Create Button_Skill
result['Button_Skill'] = ccui.Button:create()
result['Button_Skill']:ignoreContentAdaptWithSize(false)
result['Button_Skill']:loadTextureNormal("plist/cont/c_but_1.png",0)
result['Button_Skill']:loadTexturePressed("plist/cont/c_but_2.png",0)
result['Button_Skill']:setTitleFontSize(14)
result['Button_Skill']:setTitleColor({r = 65, g = 65, b = 70})
result['Button_Skill']:setScale9Enabled(true)
result['Button_Skill']:setCapInsets({x = 15, y = 11, width = 54, height = 62})
result['Button_Skill']:setLayoutComponentEnabled(true)
result['Button_Skill']:setName("Button_Skill")
result['Button_Skill']:setTag(31)
result['Button_Skill']:setCascadeColorEnabled(true)
result['Button_Skill']:setCascadeOpacityEnabled(true)
result['Button_Skill'].UserData = {}
result['Button_Skill'].UserData[1] = [==========[3]==========]
if callBackProvider~=nil then
      result['Button_Skill']:addClickEventListener(callBackProvider("UI_InputLayer.lua", result['Button_Skill'], "onClickSkill"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(result['Button_Skill'])
layout:setSize({width = 84.0000, height = 84.0000})
layout:setLeftMargin(-42.0000)
layout:setRightMargin(-42.0000)
layout:setTopMargin(-42.0000)
layout:setBottomMargin(-42.0000)
result['Node_Skill_4']:addChild(result['Button_Skill'])

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = result['Scene']
return result;
end

return Result

