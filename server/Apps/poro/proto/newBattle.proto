syntax = "proto2";

import "common.proto";
package protobuf.newBattle;

option java_package = "xag.idgo.core.proto";
option java_outer_classname = "NewBattleProto";

//战斗


	 //更新刷新时间，在客户端检测到到跟新时间了，可以调用此指令，获取下发最新的信息。
	message FreshReplyInfo {
	required int32 type = 1; //请求更新的数据类型。
	//活动副本
	repeated protobuf.common.KVint3232 carbonDayCnt = 2; //活动副本的次数<攻击次数，购买次数>
	//勇者试炼
	optional bool isOpenBrave = 3; //是否已经开启了勇者试炼
	//剩余时间，统一用这个记录时间。
	optional int64 nextFreshTime = 4; //下次刷新的时间。
  }
	message iconinfo {
	required int32 level = 1;//
	required string name = 2;//
	required string head = 3;// 头像
	optional string guildName = 4; //公会名称，或爬塔层数。
	optional string serverName = 5; //服务器名称。
	optional string playerid = 6;//玩家id。
	optional int32 power = 7; //战斗力
	optional int32 headFrame = 8;// 头像框
	optional bool isEnemy = 9;//是敌人
 }
 
  //阵容模板
  message SetLineupTemplate{
	repeated protobuf.common.LineupTemplate lineup=1;//阵容
  }
  
 //战斗统计数据
 message BattleStatistics{
	repeated ArenaRecord data = 1;//统计数据
 }
 
  //战斗记录 统计数据
  message ArenaRecord{
	repeated BattleData battleData = 1;//战斗结算数据
	repeated protobuf.common.LineupDetail selfLineup=2;//自己详细阵容（迷宫情况下使用）
	repeated protobuf.common.LineupDetail enemyLineup=3;//敌人详细阵容（迷宫情况下使用）
	optional int32 score = 4;//自己积分变动
	optional int64 recordTime = 5;//记录时间
	repeated iconinfo playerInfo = 6;//玩家信息
	optional int32 recordNumber = 7;//编号
  }
  
  //客户端上传战斗结果
  message BattleResults{
	optional int32 type = 1;//类型
	optional bool result = 2; //战斗结果
	repeated BattleData battleData = 3;//战斗结算数据
	optional string arenaPlayerId = 4;//敌人id
	repeated protobuf.common.LineupDetail selfLineup=5;//自己详细阵容（迷宫情况下使用）
	repeated protobuf.common.LineupDetail enemyLineup=6;//敌人详细阵容（迷宫情况下使用）
	optional int32 mapId =7;//阵容地图id(时光之巅地图id)
	optional bool isRevenge = 8;//复仇
  }
  
 //战斗展示请求
 message BattleRequest {
	required int32 type = 1; //战斗类型
	optional string beAttackId = 2; //参数是string的被攻击者id
	optional bool needLineup = 3; //是否需要下发布阵信息，需要下发布阵的战斗才会用。
	optional int32 mapId = 4; //时光之巅地图id
 }
 
 //战斗展示下发对象
 message BattleInfo {
	required int32 type = 1; //战斗类型 或勇者试炼的请求类型。
	optional string enemyid = 3; //副本id。试炼id，玩家id
	optional string teamName = 4;//队伍名字、试炼名字
	repeated protobuf.common.LineupDetail enemylinup = 5; //对方的详细阵营
	repeated iconinfo showinfo = 6; //队员信息，pvp用
	repeated protobuf.common.KVint3264 enemyblood = 7; //队伍剩余血量，pve的boss用 (勇者试练 目前自己上阵队伍的血量)
	repeated protobuf.common.LineupTemplate lineupTemplate = 8; //对方的简略阵营
 }

 //单场战斗开始请求
 message BattleStart {
	required int32 type = 1; //战斗类型
	required string enemyId = 2; //对方id
	optional int32 lineupindex = 3; //我的阵营索引
	repeated protobuf.common.Id32 lineupIds = 4; //上阵英雄唯一id(按站位顺序，空位传0)
	optional int32 lineuppet = 5; //勇者试炼，宠物id。
	optional int32 attackCnt = 6; //扫荡次数。
	optional bool isSkip = 7; //是否跳过。
	optional int32 suspectIslandId = 8; //悬空岛，时光之巅id
	optional string guidev = 10;//新手引导标示
 }
 //战斗结束请求
 message BattleEnd {
	required int32 type = 1; //战斗类型
	required string enemyId = 2; //对方id
	repeated bool victory = 3; //攻击方是否胜利
	repeated protobuf.common.KVint3232 rewards = 4; //获取的物品奖励。
	repeated string points = 5; //竞技场积分<我的积分变化，对方积分变化>
	required string sign = 6; //战斗记录MD5签名
	required int32 len = 7; //战斗记录总长度
	repeated BattleData data = 8;//统计数据
	optional int64 damage = 9;//总伤害伤害（如果是多场战斗就是总和）
	optional int32 suspectIslandId = 10; //悬空岛id
	optional int32 isSp = 11; //是否遭遇特殊的（限时副本在用）
	repeated protobuf.common.KVint3232 spRewards = 12; //加成物品奖励。（限时副本在用）
 }
 //战斗记录
 message BattleRecord {
	required string record = 1; //战斗记录字符串
	required int32 len = 2; //剩余长度
 }
 //战斗录像
    message BattleVideo{
	required int32 atPetId = 1;//攻击方上阵的宠物id。
	repeated protobuf.common.Pet atPet = 2; //攻击方所有宠物信息
	required int32 dePetId = 3;//防守方上阵的宠物id。
	repeated protobuf.common.Pet dePet = 4; //防守方所有宠物信息
	required string sign = 5; //战斗记录MD5签名
	required int32 len = 6; //战斗记录总长度
	repeated bool victory = 7;//进攻方是否胜利
	required int32 type = 8; //战斗类型
  }
   //战斗统计数据
 message BattleData{
	required int32 index = 1;//站位（1-6--英雄，7--宠物，攻击方为正）
	required int32 id = 2;//英雄或者宠物配置id。
	required int32 lv = 3;//英雄或者宠物等级。
	required int32 damage = 4;//伤害
	required int32 heal = 5; //治疗
	required int32 receiveDamage = 6; //受到伤害
	optional string playerId = 7;//所属玩家id
 }
     //多场战斗开始请求（田忌赛马+组队竞技+世界boss）
 message NewBattleStartM {
	required int32 type = 1; //战斗类型
	required string enemyId = 2; //对方id
	repeated protobuf.common.LineupTemplate perLineup = 3; //单场进攻阵营
	repeated protobuf.common.Id32 lineupIds = 4; //上阵英雄唯一id(按站位顺序，空位传0)
	optional int32 attackCnt = 5; //扫荡次数。
	optional bool isSkip = 6; //是否跳过。
 }
    //单场战斗统计数据
 message OneBattleData{
	repeated BattleData data = 1;//统计数据
 }