syntax = "proto2";

import "common.proto";
package protobuf.town;

option java_package = "xag.idgo.core.proto";
option java_outer_classname = "TownProto";

//幻境至塔



	 //更新刷新时间，在客户端检测到到跟新时间了，可以调用此指令，获取下发最新的信息。
 message FreshReplyInfo {
	required int32 type = 1; //请求更新的数据类型。
	optional int32 extid = 2; //额外参数使用，幻境之塔的层数。
	//幻境之塔
	optional int32 carbonTowerh2ocount = 3; //小水滴的数量。
	//剩余时间，统一用这个记录时间。
	optional int64 nextFreshTime = 4; //下次刷新的时间。
  }
   message iconinfo {
	required int32 level = 1;//
	required string name = 2;//
	required string head = 3;// 头像
	optional string guildName = 4; //爬塔层数。
	optional int32 headFrame = 5;// 头像框
	optional string playerId = 6;//玩家id
	optional int32 serverId = 7;//服务器id
	
 }
 //玩家列表信息
 message playerInfoList {
	repeated iconinfo showinfo = 1; //就这样子
 }

  //战斗录像（单场记录+多场的田忌赛马记录）
 message BattleHistory {
	required string attackName = 1;//进攻方名字
	required int32 attackLvl = 2;//等级
	required string attackHead = 3;//头像
	optional protobuf.common.LineupDetail attacker = 4; //单场进攻的阵营
	required string attackId = 5; //攻击者id
	optional int32 defineid = 6; //单场pve防守的id
	required int64 seed = 7; //随机种子
	required int32 battletype = 8; //战斗类型。
	required bool victory = 9;//进攻方是否胜利
	required int64 time = 10; //时间戳
	optional int32 headFrame = 11;// 头像框
	
 }
 message BattleHistoryList {
	repeated BattleHistory battles = 1;
 }
  //战斗录像（只是展示信息，不包括阵容)
  message NewBattleHistory {
	required string attackName = 1;//进攻方名字
	required int32 attackLvl = 2;//等级
	required string attackHead = 3;//头像
	required string id = 4;//战斗ID
	required string attackId = 5; //攻击者id
	required int32 battletype = 6; //战斗类型。
	required bool victory = 7;//进攻方是否胜利
	required int64 time = 8; //时间戳
	required int32 defineid = 9; //单场pve防守的id
	optional int32 headFrame = 10;// 头像框
 }
 message NewBattleHistoryList {
	repeated NewBattleHistory battles = 1;
 }