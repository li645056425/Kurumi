// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dungeon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace dungeon {

namespace {

const ::google::protobuf::Descriptor* enterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  enterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* getBoxInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getBoxInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dungeon_2eproto() {
  protobuf_AddDesc_dungeon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dungeon.proto");
  GOOGLE_CHECK(file != NULL);
  enterInfo_descriptor_ = file->message_type(0);
  static const int enterInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, passed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, dungeonid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, dungeontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, last_),
  };
  enterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      enterInfo_descriptor_,
      enterInfo::default_instance_,
      enterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(enterInfo));
  getBoxInfo_descriptor_ = file->message_type(1);
  static const int getBoxInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getBoxInfo, gotbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getBoxInfo, items_),
  };
  getBoxInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getBoxInfo_descriptor_,
      getBoxInfo::default_instance_,
      getBoxInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getBoxInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getBoxInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getBoxInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dungeon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    enterInfo_descriptor_, &enterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getBoxInfo_descriptor_, &getBoxInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dungeon_2eproto() {
  delete enterInfo::default_instance_;
  delete enterInfo_reflection_;
  delete getBoxInfo::default_instance_;
  delete getBoxInfo_reflection_;
}

void protobuf_AddDesc_dungeon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf::common::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdungeon.proto\022\020protobuf.dungeon\032\014commo"
    "n.proto\"\213\001\n\tenterInfo\022\016\n\006passed\030\001 \002(\005\022)\n"
    "\005items\030\002 \003(\0132\032.protobuf.common.KVint3232"
    "\022\r\n\005boxid\030\003 \002(\005\022\021\n\tdungeonid\030\004 \002(\005\022\023\n\013du"
    "ngeontime\030\005 \002(\003\022\014\n\004last\030\006 \001(\005\"G\n\ngetBoxI"
    "nfo\022\016\n\006gotbox\030\001 \002(\005\022)\n\005items\030\002 \003(\0132\032.pro"
    "tobuf.common.KVint3232B#\n\023xag.idgo.core."
    "protoB\014DungeonProto", 299);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dungeon.proto", &protobuf_RegisterTypes);
  enterInfo::default_instance_ = new enterInfo();
  getBoxInfo::default_instance_ = new getBoxInfo();
  enterInfo::default_instance_->InitAsDefaultInstance();
  getBoxInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dungeon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dungeon_2eproto {
  StaticDescriptorInitializer_dungeon_2eproto() {
    protobuf_AddDesc_dungeon_2eproto();
  }
} static_descriptor_initializer_dungeon_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int enterInfo::kPassedFieldNumber;
const int enterInfo::kItemsFieldNumber;
const int enterInfo::kBoxidFieldNumber;
const int enterInfo::kDungeonidFieldNumber;
const int enterInfo::kDungeontimeFieldNumber;
const int enterInfo::kLastFieldNumber;
#endif  // !_MSC_VER

enterInfo::enterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void enterInfo::InitAsDefaultInstance() {
}

enterInfo::enterInfo(const enterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void enterInfo::SharedCtor() {
  _cached_size_ = 0;
  passed_ = 0;
  boxid_ = 0;
  dungeonid_ = 0;
  dungeontime_ = GOOGLE_LONGLONG(0);
  last_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

enterInfo::~enterInfo() {
  SharedDtor();
}

void enterInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void enterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* enterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enterInfo_descriptor_;
}

const enterInfo& enterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dungeon_2eproto();  return *default_instance_;
}

enterInfo* enterInfo::default_instance_ = NULL;

enterInfo* enterInfo::New() const {
  return new enterInfo;
}

void enterInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passed_ = 0;
    boxid_ = 0;
    dungeonid_ = 0;
    dungeontime_ = GOOGLE_LONGLONG(0);
    last_ = 0;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool enterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 passed = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passed_)));
          set_has_passed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }
      
      // repeated .protobuf.common.KVint3232 items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectTag(24)) goto parse_boxid;
        break;
      }
      
      // required int32 boxid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dungeonid;
        break;
      }
      
      // required int32 dungeonid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dungeonid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dungeonid_)));
          set_has_dungeonid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_dungeontime;
        break;
      }
      
      // required int64 dungeontime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dungeontime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dungeontime_)));
          set_has_dungeontime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_last;
        break;
      }
      
      // optional int32 last = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void enterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 passed = 1;
  if (has_passed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->passed(), output);
  }
  
  // repeated .protobuf.common.KVint3232 items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }
  
  // required int32 boxid = 3;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->boxid(), output);
  }
  
  // required int32 dungeonid = 4;
  if (has_dungeonid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dungeonid(), output);
  }
  
  // required int64 dungeontime = 5;
  if (has_dungeontime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->dungeontime(), output);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->last(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* enterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 passed = 1;
  if (has_passed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->passed(), target);
  }
  
  // repeated .protobuf.common.KVint3232 items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }
  
  // required int32 boxid = 3;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->boxid(), target);
  }
  
  // required int32 dungeonid = 4;
  if (has_dungeonid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dungeonid(), target);
  }
  
  // required int64 dungeontime = 5;
  if (has_dungeontime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->dungeontime(), target);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->last(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int enterInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 passed = 1;
    if (has_passed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passed());
    }
    
    // required int32 boxid = 3;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxid());
    }
    
    // required int32 dungeonid = 4;
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dungeonid());
    }
    
    // required int64 dungeontime = 5;
    if (has_dungeontime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dungeontime());
    }
    
    // optional int32 last = 6;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
  }
  // repeated .protobuf.common.KVint3232 items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void enterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const enterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const enterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void enterInfo::MergeFrom(const enterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passed()) {
      set_passed(from.passed());
    }
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_dungeonid()) {
      set_dungeonid(from.dungeonid());
    }
    if (from.has_dungeontime()) {
      set_dungeontime(from.dungeontime());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void enterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void enterInfo::CopyFrom(const enterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool enterInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;
  
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void enterInfo::Swap(enterInfo* other) {
  if (other != this) {
    std::swap(passed_, other->passed_);
    items_.Swap(&other->items_);
    std::swap(boxid_, other->boxid_);
    std::swap(dungeonid_, other->dungeonid_);
    std::swap(dungeontime_, other->dungeontime_);
    std::swap(last_, other->last_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata enterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = enterInfo_descriptor_;
  metadata.reflection = enterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getBoxInfo::kGotboxFieldNumber;
const int getBoxInfo::kItemsFieldNumber;
#endif  // !_MSC_VER

getBoxInfo::getBoxInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getBoxInfo::InitAsDefaultInstance() {
}

getBoxInfo::getBoxInfo(const getBoxInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getBoxInfo::SharedCtor() {
  _cached_size_ = 0;
  gotbox_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getBoxInfo::~getBoxInfo() {
  SharedDtor();
}

void getBoxInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getBoxInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getBoxInfo_descriptor_;
}

const getBoxInfo& getBoxInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dungeon_2eproto();  return *default_instance_;
}

getBoxInfo* getBoxInfo::default_instance_ = NULL;

getBoxInfo* getBoxInfo::New() const {
  return new getBoxInfo;
}

void getBoxInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gotbox_ = 0;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 gotbox = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gotbox_)));
          set_has_gotbox();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }
      
      // repeated .protobuf.common.KVint3232 items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 gotbox = 1;
  if (has_gotbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gotbox(), output);
  }
  
  // repeated .protobuf.common.KVint3232 items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getBoxInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 gotbox = 1;
  if (has_gotbox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gotbox(), target);
  }
  
  // repeated .protobuf.common.KVint3232 items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getBoxInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 gotbox = 1;
    if (has_gotbox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gotbox());
    }
    
  }
  // repeated .protobuf.common.KVint3232 items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getBoxInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getBoxInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getBoxInfo::MergeFrom(const getBoxInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gotbox()) {
      set_gotbox(from.gotbox());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getBoxInfo::CopyFrom(const getBoxInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getBoxInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void getBoxInfo::Swap(getBoxInfo* other) {
  if (other != this) {
    std::swap(gotbox_, other->gotbox_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getBoxInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getBoxInfo_descriptor_;
  metadata.reflection = getBoxInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dungeon
}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
