// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tavern.proto

#ifndef PROTOBUF_tavern_2eproto__INCLUDED
#define PROTOBUF_tavern_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace tavern {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tavern_2eproto();
void protobuf_AssignDesc_tavern_2eproto();
void protobuf_ShutdownFile_tavern_2eproto();

class TavernList;
class TaskEnd;
class Tavern;
class TavernHero;
class StartTavern;

// ===================================================================

class TavernList : public ::google::protobuf::Message {
 public:
  TavernList();
  virtual ~TavernList();
  
  TavernList(const TavernList& from);
  
  inline TavernList& operator=(const TavernList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TavernList& default_instance();
  
  void Swap(TavernList* other);
  
  // implements Message ----------------------------------------------
  
  TavernList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TavernList& from);
  void MergeFrom(const TavernList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.tavern.Tavern tavern = 1;
  inline int tavern_size() const;
  inline void clear_tavern();
  static const int kTavernFieldNumber = 1;
  inline const ::protobuf::tavern::Tavern& tavern(int index) const;
  inline ::protobuf::tavern::Tavern* mutable_tavern(int index);
  inline ::protobuf::tavern::Tavern* add_tavern();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::Tavern >&
      tavern() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::Tavern >*
      mutable_tavern();
  
  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
  // repeated .protobuf.tavern.TaskEnd playerTaskNum = 3;
  inline int playertasknum_size() const;
  inline void clear_playertasknum();
  static const int kPlayerTaskNumFieldNumber = 3;
  inline const ::protobuf::tavern::TaskEnd& playertasknum(int index) const;
  inline ::protobuf::tavern::TaskEnd* mutable_playertasknum(int index);
  inline ::protobuf::tavern::TaskEnd* add_playertasknum();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >&
      playertasknum() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >*
      mutable_playertasknum();
  
  // repeated .protobuf.tavern.TaskEnd groupTaskNum = 4;
  inline int grouptasknum_size() const;
  inline void clear_grouptasknum();
  static const int kGroupTaskNumFieldNumber = 4;
  inline const ::protobuf::tavern::TaskEnd& grouptasknum(int index) const;
  inline ::protobuf::tavern::TaskEnd* mutable_grouptasknum(int index);
  inline ::protobuf::tavern::TaskEnd* add_grouptasknum();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >&
      grouptasknum() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >*
      mutable_grouptasknum();
  
  // optional int32 tavernLv = 5;
  inline bool has_tavernlv() const;
  inline void clear_tavernlv();
  static const int kTavernLvFieldNumber = 5;
  inline ::google::protobuf::int32 tavernlv() const;
  inline void set_tavernlv(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.tavern.TavernList)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_tavernlv();
  inline void clear_has_tavernlv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::Tavern > tavern_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd > playertasknum_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd > grouptasknum_;
  ::google::protobuf::int32 tavernlv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_tavern_2eproto();
  friend void protobuf_AssignDesc_tavern_2eproto();
  friend void protobuf_ShutdownFile_tavern_2eproto();
  
  void InitAsDefaultInstance();
  static TavernList* default_instance_;
};
// -------------------------------------------------------------------

class TaskEnd : public ::google::protobuf::Message {
 public:
  TaskEnd();
  virtual ~TaskEnd();
  
  TaskEnd(const TaskEnd& from);
  
  inline TaskEnd& operator=(const TaskEnd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskEnd& default_instance();
  
  void Swap(TaskEnd* other);
  
  // implements Message ----------------------------------------------
  
  TaskEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskEnd& from);
  void MergeFrom(const TaskEnd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 taskStarNum = 1;
  inline bool has_taskstarnum() const;
  inline void clear_taskstarnum();
  static const int kTaskStarNumFieldNumber = 1;
  inline ::google::protobuf::int32 taskstarnum() const;
  inline void set_taskstarnum(::google::protobuf::int32 value);
  
  // optional int32 endTaskNum = 2;
  inline bool has_endtasknum() const;
  inline void clear_endtasknum();
  static const int kEndTaskNumFieldNumber = 2;
  inline ::google::protobuf::int32 endtasknum() const;
  inline void set_endtasknum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.tavern.TaskEnd)
 private:
  inline void set_has_taskstarnum();
  inline void clear_has_taskstarnum();
  inline void set_has_endtasknum();
  inline void clear_has_endtasknum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 taskstarnum_;
  ::google::protobuf::int32 endtasknum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tavern_2eproto();
  friend void protobuf_AssignDesc_tavern_2eproto();
  friend void protobuf_ShutdownFile_tavern_2eproto();
  
  void InitAsDefaultInstance();
  static TaskEnd* default_instance_;
};
// -------------------------------------------------------------------

class Tavern : public ::google::protobuf::Message {
 public:
  Tavern();
  virtual ~Tavern();
  
  Tavern(const Tavern& from);
  
  inline Tavern& operator=(const Tavern& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tavern& default_instance();
  
  void Swap(Tavern* other);
  
  // implements Message ----------------------------------------------
  
  Tavern* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tavern& from);
  void MergeFrom(const Tavern& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // required int64 finishTime = 3;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishTimeFieldNumber = 3;
  inline ::google::protobuf::int64 finishtime() const;
  inline void set_finishtime(::google::protobuf::int64 value);
  
  // required int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3264 items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // repeated .protobuf.tavern.TavernHero hero = 6;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 6;
  inline const ::protobuf::tavern::TavernHero& hero(int index) const;
  inline ::protobuf::tavern::TavernHero* mutable_hero(int index);
  inline ::protobuf::tavern::TavernHero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >*
      mutable_hero();
  
  // optional int32 name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);
  
  // required int32 index = 8;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 8;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // repeated int32 camp = 9;
  inline int camp_size() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 9;
  inline ::google::protobuf::int32 camp(int index) const;
  inline void set_camp(int index, ::google::protobuf::int32 value);
  inline void add_camp(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      camp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_camp();
  
  // @@protoc_insertion_point(class_scope:protobuf.tavern.Tavern)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 finishtime_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero > hero_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > camp_;
  ::google::protobuf::int32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_tavern_2eproto();
  friend void protobuf_AssignDesc_tavern_2eproto();
  friend void protobuf_ShutdownFile_tavern_2eproto();
  
  void InitAsDefaultInstance();
  static Tavern* default_instance_;
};
// -------------------------------------------------------------------

class TavernHero : public ::google::protobuf::Message {
 public:
  TavernHero();
  virtual ~TavernHero();
  
  TavernHero(const TavernHero& from);
  
  inline TavernHero& operator=(const TavernHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TavernHero& default_instance();
  
  void Swap(TavernHero* other);
  
  // implements Message ----------------------------------------------
  
  TavernHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TavernHero& from);
  void MergeFrom(const TavernHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 heroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);
  
  // required int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);
  
  // required int32 heroLv = 3;
  inline bool has_herolv() const;
  inline void clear_herolv();
  static const int kHeroLvFieldNumber = 3;
  inline ::google::protobuf::int32 herolv() const;
  inline void set_herolv(::google::protobuf::int32 value);
  
  // required string playerId = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 4;
  inline const ::std::string& playerid() const;
  inline void set_playerid(const ::std::string& value);
  inline void set_playerid(const char* value);
  inline void set_playerid(const char* value, size_t size);
  inline ::std::string* mutable_playerid();
  inline ::std::string* release_playerid();
  
  // @@protoc_insertion_point(class_scope:protobuf.tavern.TavernHero)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_herolv();
  inline void clear_has_herolv();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 star_;
  ::std::string* playerid_;
  ::google::protobuf::int32 herolv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tavern_2eproto();
  friend void protobuf_AssignDesc_tavern_2eproto();
  friend void protobuf_ShutdownFile_tavern_2eproto();
  
  void InitAsDefaultInstance();
  static TavernHero* default_instance_;
};
// -------------------------------------------------------------------

class StartTavern : public ::google::protobuf::Message {
 public:
  StartTavern();
  virtual ~StartTavern();
  
  StartTavern(const StartTavern& from);
  
  inline StartTavern& operator=(const StartTavern& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartTavern& default_instance();
  
  void Swap(StartTavern* other);
  
  // implements Message ----------------------------------------------
  
  StartTavern* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartTavern& from);
  void MergeFrom(const StartTavern& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated .protobuf.tavern.TavernHero hero = 2;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 2;
  inline const ::protobuf::tavern::TavernHero& hero(int index) const;
  inline ::protobuf::tavern::TavernHero* mutable_hero(int index);
  inline ::protobuf::tavern::TavernHero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >*
      mutable_hero();
  
  // @@protoc_insertion_point(class_scope:protobuf.tavern.StartTavern)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero > hero_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tavern_2eproto();
  friend void protobuf_AssignDesc_tavern_2eproto();
  friend void protobuf_ShutdownFile_tavern_2eproto();
  
  void InitAsDefaultInstance();
  static StartTavern* default_instance_;
};
// ===================================================================


// ===================================================================

// TavernList

// repeated .protobuf.tavern.Tavern tavern = 1;
inline int TavernList::tavern_size() const {
  return tavern_.size();
}
inline void TavernList::clear_tavern() {
  tavern_.Clear();
}
inline const ::protobuf::tavern::Tavern& TavernList::tavern(int index) const {
  return tavern_.Get(index);
}
inline ::protobuf::tavern::Tavern* TavernList::mutable_tavern(int index) {
  return tavern_.Mutable(index);
}
inline ::protobuf::tavern::Tavern* TavernList::add_tavern() {
  return tavern_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::Tavern >&
TavernList::tavern() const {
  return tavern_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::Tavern >*
TavernList::mutable_tavern() {
  return &tavern_;
}

// optional int64 time = 2;
inline bool TavernList::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TavernList::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TavernList::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TavernList::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 TavernList::time() const {
  return time_;
}
inline void TavernList::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// repeated .protobuf.tavern.TaskEnd playerTaskNum = 3;
inline int TavernList::playertasknum_size() const {
  return playertasknum_.size();
}
inline void TavernList::clear_playertasknum() {
  playertasknum_.Clear();
}
inline const ::protobuf::tavern::TaskEnd& TavernList::playertasknum(int index) const {
  return playertasknum_.Get(index);
}
inline ::protobuf::tavern::TaskEnd* TavernList::mutable_playertasknum(int index) {
  return playertasknum_.Mutable(index);
}
inline ::protobuf::tavern::TaskEnd* TavernList::add_playertasknum() {
  return playertasknum_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >&
TavernList::playertasknum() const {
  return playertasknum_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >*
TavernList::mutable_playertasknum() {
  return &playertasknum_;
}

// repeated .protobuf.tavern.TaskEnd groupTaskNum = 4;
inline int TavernList::grouptasknum_size() const {
  return grouptasknum_.size();
}
inline void TavernList::clear_grouptasknum() {
  grouptasknum_.Clear();
}
inline const ::protobuf::tavern::TaskEnd& TavernList::grouptasknum(int index) const {
  return grouptasknum_.Get(index);
}
inline ::protobuf::tavern::TaskEnd* TavernList::mutable_grouptasknum(int index) {
  return grouptasknum_.Mutable(index);
}
inline ::protobuf::tavern::TaskEnd* TavernList::add_grouptasknum() {
  return grouptasknum_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >&
TavernList::grouptasknum() const {
  return grouptasknum_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TaskEnd >*
TavernList::mutable_grouptasknum() {
  return &grouptasknum_;
}

// optional int32 tavernLv = 5;
inline bool TavernList::has_tavernlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TavernList::set_has_tavernlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TavernList::clear_has_tavernlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TavernList::clear_tavernlv() {
  tavernlv_ = 0;
  clear_has_tavernlv();
}
inline ::google::protobuf::int32 TavernList::tavernlv() const {
  return tavernlv_;
}
inline void TavernList::set_tavernlv(::google::protobuf::int32 value) {
  set_has_tavernlv();
  tavernlv_ = value;
}

// -------------------------------------------------------------------

// TaskEnd

// optional int32 taskStarNum = 1;
inline bool TaskEnd::has_taskstarnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskEnd::set_has_taskstarnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskEnd::clear_has_taskstarnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskEnd::clear_taskstarnum() {
  taskstarnum_ = 0;
  clear_has_taskstarnum();
}
inline ::google::protobuf::int32 TaskEnd::taskstarnum() const {
  return taskstarnum_;
}
inline void TaskEnd::set_taskstarnum(::google::protobuf::int32 value) {
  set_has_taskstarnum();
  taskstarnum_ = value;
}

// optional int32 endTaskNum = 2;
inline bool TaskEnd::has_endtasknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskEnd::set_has_endtasknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskEnd::clear_has_endtasknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskEnd::clear_endtasknum() {
  endtasknum_ = 0;
  clear_has_endtasknum();
}
inline ::google::protobuf::int32 TaskEnd::endtasknum() const {
  return endtasknum_;
}
inline void TaskEnd::set_endtasknum(::google::protobuf::int32 value) {
  set_has_endtasknum();
  endtasknum_ = value;
}

// -------------------------------------------------------------------

// Tavern

// required int32 id = 1;
inline bool Tavern::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tavern::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tavern::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tavern::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Tavern::id() const {
  return id_;
}
inline void Tavern::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 state = 2;
inline bool Tavern::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tavern::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tavern::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tavern::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Tavern::state() const {
  return state_;
}
inline void Tavern::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int64 finishTime = 3;
inline bool Tavern::has_finishtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tavern::set_has_finishtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tavern::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tavern::clear_finishtime() {
  finishtime_ = GOOGLE_LONGLONG(0);
  clear_has_finishtime();
}
inline ::google::protobuf::int64 Tavern::finishtime() const {
  return finishtime_;
}
inline void Tavern::set_finishtime(::google::protobuf::int64 value) {
  set_has_finishtime();
  finishtime_ = value;
}

// required int32 star = 4;
inline bool Tavern::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Tavern::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Tavern::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Tavern::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Tavern::star() const {
  return star_;
}
inline void Tavern::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// repeated .protobuf.common.KVint3264 items = 5;
inline int Tavern::items_size() const {
  return items_.size();
}
inline void Tavern::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& Tavern::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* Tavern::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* Tavern::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
Tavern::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
Tavern::mutable_items() {
  return &items_;
}

// repeated .protobuf.tavern.TavernHero hero = 6;
inline int Tavern::hero_size() const {
  return hero_.size();
}
inline void Tavern::clear_hero() {
  hero_.Clear();
}
inline const ::protobuf::tavern::TavernHero& Tavern::hero(int index) const {
  return hero_.Get(index);
}
inline ::protobuf::tavern::TavernHero* Tavern::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::protobuf::tavern::TavernHero* Tavern::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >&
Tavern::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >*
Tavern::mutable_hero() {
  return &hero_;
}

// optional int32 name = 7;
inline bool Tavern::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Tavern::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Tavern::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Tavern::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::google::protobuf::int32 Tavern::name() const {
  return name_;
}
inline void Tavern::set_name(::google::protobuf::int32 value) {
  set_has_name();
  name_ = value;
}

// required int32 index = 8;
inline bool Tavern::has_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Tavern::set_has_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Tavern::clear_has_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Tavern::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Tavern::index() const {
  return index_;
}
inline void Tavern::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// repeated int32 camp = 9;
inline int Tavern::camp_size() const {
  return camp_.size();
}
inline void Tavern::clear_camp() {
  camp_.Clear();
}
inline ::google::protobuf::int32 Tavern::camp(int index) const {
  return camp_.Get(index);
}
inline void Tavern::set_camp(int index, ::google::protobuf::int32 value) {
  camp_.Set(index, value);
}
inline void Tavern::add_camp(::google::protobuf::int32 value) {
  camp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Tavern::camp() const {
  return camp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Tavern::mutable_camp() {
  return &camp_;
}

// -------------------------------------------------------------------

// TavernHero

// required int32 heroId = 1;
inline bool TavernHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TavernHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TavernHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TavernHero::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 TavernHero::heroid() const {
  return heroid_;
}
inline void TavernHero::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required int32 star = 2;
inline bool TavernHero::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TavernHero::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TavernHero::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TavernHero::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 TavernHero::star() const {
  return star_;
}
inline void TavernHero::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 heroLv = 3;
inline bool TavernHero::has_herolv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TavernHero::set_has_herolv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TavernHero::clear_has_herolv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TavernHero::clear_herolv() {
  herolv_ = 0;
  clear_has_herolv();
}
inline ::google::protobuf::int32 TavernHero::herolv() const {
  return herolv_;
}
inline void TavernHero::set_herolv(::google::protobuf::int32 value) {
  set_has_herolv();
  herolv_ = value;
}

// required string playerId = 4;
inline bool TavernHero::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TavernHero::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TavernHero::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TavernHero::clear_playerid() {
  if (playerid_ != &::google::protobuf::internal::kEmptyString) {
    playerid_->clear();
  }
  clear_has_playerid();
}
inline const ::std::string& TavernHero::playerid() const {
  return *playerid_;
}
inline void TavernHero::set_playerid(const ::std::string& value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void TavernHero::set_playerid(const char* value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void TavernHero::set_playerid(const char* value, size_t size) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TavernHero::mutable_playerid() {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  return playerid_;
}
inline ::std::string* TavernHero::release_playerid() {
  clear_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playerid_;
    playerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// StartTavern

// required int32 id = 1;
inline bool StartTavern::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartTavern::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartTavern::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartTavern::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 StartTavern::id() const {
  return id_;
}
inline void StartTavern::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .protobuf.tavern.TavernHero hero = 2;
inline int StartTavern::hero_size() const {
  return hero_.size();
}
inline void StartTavern::clear_hero() {
  hero_.Clear();
}
inline const ::protobuf::tavern::TavernHero& StartTavern::hero(int index) const {
  return hero_.Get(index);
}
inline ::protobuf::tavern::TavernHero* StartTavern::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::protobuf::tavern::TavernHero* StartTavern::add_hero() {
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >&
StartTavern::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::tavern::TavernHero >*
StartTavern::mutable_hero() {
  return &hero_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tavern
}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tavern_2eproto__INCLUDED
