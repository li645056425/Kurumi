// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

#ifndef PROTOBUF_activity_2eproto__INCLUDED
#define PROTOBUF_activity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace activity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_activity_2eproto();
void protobuf_AssignDesc_activity_2eproto();
void protobuf_ShutdownFile_activity_2eproto();

class Wonderful;
class ChargePage;
class LimitActivity;
class Activity;
class ActivityGood;
class ReplyChargeGoods;
class VideoSeeReply;
class iconinfo;
class BattleGuess;
class ReplyEntryGuess;
class SetLineup;
class Record;
class OneRecord;
class ActivityExchange;
class KingEventRequest;
class SigninToTal;
class KingEventReply;
class FirstChargeMsgReply;

// ===================================================================

class Wonderful : public ::google::protobuf::Message {
 public:
  Wonderful();
  virtual ~Wonderful();
  
  Wonderful(const Wonderful& from);
  
  inline Wonderful& operator=(const Wonderful& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Wonderful& default_instance();
  
  void Swap(Wonderful* other);
  
  // implements Message ----------------------------------------------
  
  Wonderful* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Wonderful& from);
  void MergeFrom(const Wonderful& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 checkinid = 1;
  inline bool has_checkinid() const;
  inline void clear_checkinid();
  static const int kCheckinidFieldNumber = 1;
  inline ::google::protobuf::int32 checkinid() const;
  inline void set_checkinid(::google::protobuf::int32 value);
  
  // optional int32 checkinidLogin = 2;
  inline bool has_checkinidlogin() const;
  inline void clear_checkinidlogin();
  static const int kCheckinidLoginFieldNumber = 2;
  inline ::google::protobuf::int32 checkinidlogin() const;
  inline void set_checkinidlogin(::google::protobuf::int32 value);
  
  // optional int32 checkinidGot = 3;
  inline bool has_checkinidgot() const;
  inline void clear_checkinidgot();
  static const int kCheckinidGotFieldNumber = 3;
  inline ::google::protobuf::int32 checkinidgot() const;
  inline void set_checkinidgot(::google::protobuf::int32 value);
  
  // optional int64 checkinNexttime = 4;
  inline bool has_checkinnexttime() const;
  inline void clear_checkinnexttime();
  static const int kCheckinNexttimeFieldNumber = 4;
  inline ::google::protobuf::int64 checkinnexttime() const;
  inline void set_checkinnexttime(::google::protobuf::int64 value);
  
  // optional int32 monthlastdays = 5;
  inline bool has_monthlastdays() const;
  inline void clear_monthlastdays();
  static const int kMonthlastdaysFieldNumber = 5;
  inline ::google::protobuf::int32 monthlastdays() const;
  inline void set_monthlastdays(::google::protobuf::int32 value);
  
  // optional int32 month1lastdays = 6;
  inline bool has_month1lastdays() const;
  inline void clear_month1lastdays();
  static const int kMonth1LastdaysFieldNumber = 6;
  inline ::google::protobuf::int32 month1lastdays() const;
  inline void set_month1lastdays(::google::protobuf::int32 value);
  
  // optional .protobuf.activity.LimitActivity giftweekmonth = 7;
  inline bool has_giftweekmonth() const;
  inline void clear_giftweekmonth();
  static const int kGiftweekmonthFieldNumber = 7;
  inline const ::protobuf::activity::LimitActivity& giftweekmonth() const;
  inline ::protobuf::activity::LimitActivity* mutable_giftweekmonth();
  inline ::protobuf::activity::LimitActivity* release_giftweekmonth();
  
  // optional .protobuf.common.KVint3232 checkinItem = 8;
  inline bool has_checkinitem() const;
  inline void clear_checkinitem();
  static const int kCheckinItemFieldNumber = 8;
  inline const ::protobuf::common::KVint3232& checkinitem() const;
  inline ::protobuf::common::KVint3232* mutable_checkinitem();
  inline ::protobuf::common::KVint3232* release_checkinitem();
  
  // optional int32 vipExtraAward = 9;
  inline bool has_vipextraaward() const;
  inline void clear_vipextraaward();
  static const int kVipExtraAwardFieldNumber = 9;
  inline ::google::protobuf::int32 vipextraaward() const;
  inline void set_vipextraaward(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.Wonderful)
 private:
  inline void set_has_checkinid();
  inline void clear_has_checkinid();
  inline void set_has_checkinidlogin();
  inline void clear_has_checkinidlogin();
  inline void set_has_checkinidgot();
  inline void clear_has_checkinidgot();
  inline void set_has_checkinnexttime();
  inline void clear_has_checkinnexttime();
  inline void set_has_monthlastdays();
  inline void clear_has_monthlastdays();
  inline void set_has_month1lastdays();
  inline void clear_has_month1lastdays();
  inline void set_has_giftweekmonth();
  inline void clear_has_giftweekmonth();
  inline void set_has_checkinitem();
  inline void clear_has_checkinitem();
  inline void set_has_vipextraaward();
  inline void clear_has_vipextraaward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 checkinid_;
  ::google::protobuf::int32 checkinidlogin_;
  ::google::protobuf::int64 checkinnexttime_;
  ::google::protobuf::int32 checkinidgot_;
  ::google::protobuf::int32 monthlastdays_;
  ::protobuf::activity::LimitActivity* giftweekmonth_;
  ::google::protobuf::int32 month1lastdays_;
  ::google::protobuf::int32 vipextraaward_;
  ::protobuf::common::KVint3232* checkinitem_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static Wonderful* default_instance_;
};
// -------------------------------------------------------------------

class ChargePage : public ::google::protobuf::Message {
 public:
  ChargePage();
  virtual ~ChargePage();
  
  ChargePage(const ChargePage& from);
  
  inline ChargePage& operator=(const ChargePage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargePage& default_instance();
  
  void Swap(ChargePage* other);
  
  // implements Message ----------------------------------------------
  
  ChargePage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargePage& from);
  void MergeFrom(const ChargePage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 monthlastdays = 1;
  inline bool has_monthlastdays() const;
  inline void clear_monthlastdays();
  static const int kMonthlastdaysFieldNumber = 1;
  inline ::google::protobuf::int32 monthlastdays() const;
  inline void set_monthlastdays(::google::protobuf::int32 value);
  
  // optional int32 month1lastdays = 2;
  inline bool has_month1lastdays() const;
  inline void clear_month1lastdays();
  static const int kMonth1LastdaysFieldNumber = 2;
  inline ::google::protobuf::int32 month1lastdays() const;
  inline void set_month1lastdays(::google::protobuf::int32 value);
  
  // repeated int32 isBuyed = 3;
  inline int isbuyed_size() const;
  inline void clear_isbuyed();
  static const int kIsBuyedFieldNumber = 3;
  inline ::google::protobuf::int32 isbuyed(int index) const;
  inline void set_isbuyed(int index, ::google::protobuf::int32 value);
  inline void add_isbuyed(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isbuyed() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isbuyed();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.ChargePage)
 private:
  inline void set_has_monthlastdays();
  inline void clear_has_monthlastdays();
  inline void set_has_month1lastdays();
  inline void clear_has_month1lastdays();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 monthlastdays_;
  ::google::protobuf::int32 month1lastdays_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isbuyed_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static ChargePage* default_instance_;
};
// -------------------------------------------------------------------

class LimitActivity : public ::google::protobuf::Message {
 public:
  LimitActivity();
  virtual ~LimitActivity();
  
  LimitActivity(const LimitActivity& from);
  
  inline LimitActivity& operator=(const LimitActivity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitActivity& default_instance();
  
  void Swap(LimitActivity* other);
  
  // implements Message ----------------------------------------------
  
  LimitActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitActivity& from);
  void MergeFrom(const LimitActivity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.activity.Activity activitys = 1;
  inline int activitys_size() const;
  inline void clear_activitys();
  static const int kActivitysFieldNumber = 1;
  inline const ::protobuf::activity::Activity& activitys(int index) const;
  inline ::protobuf::activity::Activity* mutable_activitys(int index);
  inline ::protobuf::activity::Activity* add_activitys();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::Activity >&
      activitys() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::Activity >*
      mutable_activitys();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.LimitActivity)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::activity::Activity > activitys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static LimitActivity* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();
  
  Activity(const Activity& from);
  
  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();
  
  void Swap(Activity* other);
  
  // implements Message ----------------------------------------------
  
  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
  // repeated .protobuf.activity.ActivityGood goods = 3;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 3;
  inline const ::protobuf::activity::ActivityGood& goods(int index) const;
  inline ::protobuf::activity::ActivityGood* mutable_goods(int index);
  inline ::protobuf::activity::ActivityGood* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::ActivityGood >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::ActivityGood >*
      mutable_goods();
  
  // optional int64 rewardendtime = 4;
  inline bool has_rewardendtime() const;
  inline void clear_rewardendtime();
  static const int kRewardendtimeFieldNumber = 4;
  inline ::google::protobuf::int64 rewardendtime() const;
  inline void set_rewardendtime(::google::protobuf::int64 value);
  
  // required int32 name = 10;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 10;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);
  
  // required int32 desc = 11;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 11;
  inline ::google::protobuf::int32 desc() const;
  inline void set_desc(::google::protobuf::int32 value);
  
  // required string icon = 12;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 12;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // required string img = 13;
  inline bool has_img() const;
  inline void clear_img();
  static const int kImgFieldNumber = 13;
  inline const ::std::string& img() const;
  inline void set_img(const ::std::string& value);
  inline void set_img(const char* value);
  inline void set_img(const char* value, size_t size);
  inline ::std::string* mutable_img();
  inline ::std::string* release_img();
  
  // repeated .protobuf.common.KVint3232 limitGoods = 14;
  inline int limitgoods_size() const;
  inline void clear_limitgoods();
  static const int kLimitGoodsFieldNumber = 14;
  inline const ::protobuf::common::KVint3232& limitgoods(int index) const;
  inline ::protobuf::common::KVint3232* mutable_limitgoods(int index);
  inline ::protobuf::common::KVint3232* add_limitgoods();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      limitgoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_limitgoods();
  
  // required int32 type = 15;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 15;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int32 extraDropid = 16;
  inline bool has_extradropid() const;
  inline void clear_extradropid();
  static const int kExtraDropidFieldNumber = 16;
  inline ::google::protobuf::int32 extradropid() const;
  inline void set_extradropid(::google::protobuf::int32 value);
  
  // optional int32 bossId = 17;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 17;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);
  
  // optional .protobuf.activity.BattleGuess guess = 18;
  inline bool has_guess() const;
  inline void clear_guess();
  static const int kGuessFieldNumber = 18;
  inline const ::protobuf::activity::BattleGuess& guess() const;
  inline ::protobuf::activity::BattleGuess* mutable_guess();
  inline ::protobuf::activity::BattleGuess* release_guess();
  
  // optional int32 round = 19;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 19;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);
  
  // optional int32 curRound = 20;
  inline bool has_curround() const;
  inline void clear_curround();
  static const int kCurRoundFieldNumber = 20;
  inline ::google::protobuf::int32 curround() const;
  inline void set_curround(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.Activity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_rewardendtime();
  inline void clear_has_rewardendtime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_img();
  inline void clear_has_img();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_extradropid();
  inline void clear_has_extradropid();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_guess();
  inline void clear_has_guess();
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_curround();
  inline void clear_has_curround();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 time_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::activity::ActivityGood > goods_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int64 rewardendtime_;
  ::std::string* icon_;
  ::std::string* img_;
  ::google::protobuf::int32 desc_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > limitgoods_;
  ::google::protobuf::int32 extradropid_;
  ::google::protobuf::int32 bossid_;
  ::protobuf::activity::BattleGuess* guess_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::int32 curround_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class ActivityGood : public ::google::protobuf::Message {
 public:
  ActivityGood();
  virtual ~ActivityGood();
  
  ActivityGood(const ActivityGood& from);
  
  inline ActivityGood& operator=(const ActivityGood& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityGood& default_instance();
  
  void Swap(ActivityGood* other);
  
  // implements Message ----------------------------------------------
  
  ActivityGood* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityGood& from);
  void MergeFrom(const ActivityGood& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 goodId = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);
  
  // required int32 finish = 2;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 2;
  inline ::google::protobuf::int32 finish() const;
  inline void set_finish(::google::protobuf::int32 value);
  
  // optional int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // required int32 taskValue = 10;
  inline bool has_taskvalue() const;
  inline void clear_taskvalue();
  static const int kTaskValueFieldNumber = 10;
  inline ::google::protobuf::int32 taskvalue() const;
  inline void set_taskvalue(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3232 goods = 11;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 11;
  inline const ::protobuf::common::KVint3232& goods(int index) const;
  inline ::protobuf::common::KVint3232* mutable_goods(int index);
  inline ::protobuf::common::KVint3232* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_goods();
  
  // required int32 name = 12;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 12;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);
  
  // required int32 limit = 13;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 13;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);
  
  // required int32 taskvice = 14;
  inline bool has_taskvice() const;
  inline void clear_taskvice();
  static const int kTaskviceFieldNumber = 14;
  inline ::google::protobuf::int32 taskvice() const;
  inline void set_taskvice(::google::protobuf::int32 value);
  
  // required int32 chargeid = 15;
  inline bool has_chargeid() const;
  inline void clear_chargeid();
  static const int kChargeidFieldNumber = 15;
  inline ::google::protobuf::int32 chargeid() const;
  inline void set_chargeid(::google::protobuf::int32 value);
  
  // required int32 lastdays = 16;
  inline bool has_lastdays() const;
  inline void clear_lastdays();
  static const int kLastdaysFieldNumber = 16;
  inline ::google::protobuf::int32 lastdays() const;
  inline void set_lastdays(::google::protobuf::int32 value);
  
  // required int32 goActive = 17;
  inline bool has_goactive() const;
  inline void clear_goactive();
  static const int kGoActiveFieldNumber = 17;
  inline ::google::protobuf::int32 goactive() const;
  inline void set_goactive(::google::protobuf::int32 value);
  
  // required int32 goSystem = 18;
  inline bool has_gosystem() const;
  inline void clear_gosystem();
  static const int kGoSystemFieldNumber = 18;
  inline ::google::protobuf::int32 gosystem() const;
  inline void set_gosystem(::google::protobuf::int32 value);
  
  // optional string priceRMB = 19;
  inline bool has_pricermb() const;
  inline void clear_pricermb();
  static const int kPriceRMBFieldNumber = 19;
  inline const ::std::string& pricermb() const;
  inline void set_pricermb(const ::std::string& value);
  inline void set_pricermb(const char* value);
  inline void set_pricermb(const char* value, size_t size);
  inline ::std::string* mutable_pricermb();
  inline ::std::string* release_pricermb();
  
  // optional string priceDol = 20;
  inline bool has_pricedol() const;
  inline void clear_pricedol();
  static const int kPriceDolFieldNumber = 20;
  inline const ::std::string& pricedol() const;
  inline void set_pricedol(const ::std::string& value);
  inline void set_pricedol(const char* value);
  inline void set_pricedol(const char* value, size_t size);
  inline ::std::string* mutable_pricedol();
  inline ::std::string* release_pricedol();
  
  // optional string speGoods = 21;
  inline bool has_spegoods() const;
  inline void clear_spegoods();
  static const int kSpeGoodsFieldNumber = 21;
  inline const ::std::string& spegoods() const;
  inline void set_spegoods(const ::std::string& value);
  inline void set_spegoods(const char* value);
  inline void set_spegoods(const char* value, size_t size);
  inline ::std::string* mutable_spegoods();
  inline ::std::string* release_spegoods();
  
  // optional int32 taskEvent = 22;
  inline bool has_taskevent() const;
  inline void clear_taskevent();
  static const int kTaskEventFieldNumber = 22;
  inline ::google::protobuf::int32 taskevent() const;
  inline void set_taskevent(::google::protobuf::int32 value);
  
  // optional int32 firstChargeMoney = 23;
  inline bool has_firstchargemoney() const;
  inline void clear_firstchargemoney();
  static const int kFirstChargeMoneyFieldNumber = 23;
  inline ::google::protobuf::int32 firstchargemoney() const;
  inline void set_firstchargemoney(::google::protobuf::int32 value);
  
  // optional int32 firstChargeNext = 24;
  inline bool has_firstchargenext() const;
  inline void clear_firstchargenext();
  static const int kFirstChargeNextFieldNumber = 24;
  inline ::google::protobuf::int32 firstchargenext() const;
  inline void set_firstchargenext(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.ActivityGood)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_taskvalue();
  inline void clear_has_taskvalue();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_taskvice();
  inline void clear_has_taskvice();
  inline void set_has_chargeid();
  inline void clear_has_chargeid();
  inline void set_has_lastdays();
  inline void clear_has_lastdays();
  inline void set_has_goactive();
  inline void clear_has_goactive();
  inline void set_has_gosystem();
  inline void clear_has_gosystem();
  inline void set_has_pricermb();
  inline void clear_has_pricermb();
  inline void set_has_pricedol();
  inline void clear_has_pricedol();
  inline void set_has_spegoods();
  inline void clear_has_spegoods();
  inline void set_has_taskevent();
  inline void clear_has_taskevent();
  inline void set_has_firstchargemoney();
  inline void clear_has_firstchargemoney();
  inline void set_has_firstchargenext();
  inline void clear_has_firstchargenext();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 goodid_;
  ::google::protobuf::int32 finish_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 taskvalue_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > goods_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 taskvice_;
  ::google::protobuf::int32 chargeid_;
  ::google::protobuf::int32 lastdays_;
  ::google::protobuf::int32 goactive_;
  ::std::string* pricermb_;
  ::std::string* pricedol_;
  ::google::protobuf::int32 gosystem_;
  ::google::protobuf::int32 taskevent_;
  ::std::string* spegoods_;
  ::google::protobuf::int32 firstchargemoney_;
  ::google::protobuf::int32 firstchargenext_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static ActivityGood* default_instance_;
};
// -------------------------------------------------------------------

class ReplyChargeGoods : public ::google::protobuf::Message {
 public:
  ReplyChargeGoods();
  virtual ~ReplyChargeGoods();
  
  ReplyChargeGoods(const ReplyChargeGoods& from);
  
  inline ReplyChargeGoods& operator=(const ReplyChargeGoods& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyChargeGoods& default_instance();
  
  void Swap(ReplyChargeGoods* other);
  
  // implements Message ----------------------------------------------
  
  ReplyChargeGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyChargeGoods& from);
  void MergeFrom(const ReplyChargeGoods& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string orderId = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIdFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  
  // repeated .protobuf.common.KVint3264 items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.ReplyChargeGoods)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* orderid_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static ReplyChargeGoods* default_instance_;
};
// -------------------------------------------------------------------

class VideoSeeReply : public ::google::protobuf::Message {
 public:
  VideoSeeReply();
  virtual ~VideoSeeReply();
  
  VideoSeeReply(const VideoSeeReply& from);
  
  inline VideoSeeReply& operator=(const VideoSeeReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoSeeReply& default_instance();
  
  void Swap(VideoSeeReply* other);
  
  // implements Message ----------------------------------------------
  
  VideoSeeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VideoSeeReply& from);
  void MergeFrom(const VideoSeeReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 canSee = 1;
  inline bool has_cansee() const;
  inline void clear_cansee();
  static const int kCanSeeFieldNumber = 1;
  inline ::google::protobuf::int32 cansee() const;
  inline void set_cansee(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3264 items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.VideoSeeReply)
 private:
  inline void set_has_cansee();
  inline void clear_has_cansee();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  ::google::protobuf::int32 cansee_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static VideoSeeReply* default_instance_;
};
// -------------------------------------------------------------------

class iconinfo : public ::google::protobuf::Message {
 public:
  iconinfo();
  virtual ~iconinfo();
  
  iconinfo(const iconinfo& from);
  
  inline iconinfo& operator=(const iconinfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const iconinfo& default_instance();
  
  void Swap(iconinfo* other);
  
  // implements Message ----------------------------------------------
  
  iconinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const iconinfo& from);
  void MergeFrom(const iconinfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required string head = 3;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 3;
  inline const ::std::string& head() const;
  inline void set_head(const ::std::string& value);
  inline void set_head(const char* value);
  inline void set_head(const char* value, size_t size);
  inline ::std::string* mutable_head();
  inline ::std::string* release_head();
  
  // optional string serverName = 4;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServerNameFieldNumber = 4;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  
  // optional string playerid = 5;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 5;
  inline const ::std::string& playerid() const;
  inline void set_playerid(const ::std::string& value);
  inline void set_playerid(const char* value);
  inline void set_playerid(const char* value, size_t size);
  inline ::std::string* mutable_playerid();
  inline ::std::string* release_playerid();
  
  // optional int32 headFrame = 6;
  inline bool has_headframe() const;
  inline void clear_headframe();
  static const int kHeadFrameFieldNumber = 6;
  inline ::google::protobuf::int32 headframe() const;
  inline void set_headframe(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.iconinfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_headframe();
  inline void clear_has_headframe();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* head_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 headframe_;
  ::std::string* servername_;
  ::std::string* playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static iconinfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleGuess : public ::google::protobuf::Message {
 public:
  BattleGuess();
  virtual ~BattleGuess();
  
  BattleGuess(const BattleGuess& from);
  
  inline BattleGuess& operator=(const BattleGuess& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleGuess& default_instance();
  
  void Swap(BattleGuess* other);
  
  // implements Message ----------------------------------------------
  
  BattleGuess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleGuess& from);
  void MergeFrom(const BattleGuess& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool isJoin = 1;
  inline bool has_isjoin() const;
  inline void clear_isjoin();
  static const int kIsJoinFieldNumber = 1;
  inline bool isjoin() const;
  inline void set_isjoin(bool value);
  
  // required int32 wheel = 2;
  inline bool has_wheel() const;
  inline void clear_wheel();
  static const int kWheelFieldNumber = 2;
  inline ::google::protobuf::int32 wheel() const;
  inline void set_wheel(::google::protobuf::int32 value);
  
  // required int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);
  
  // repeated .protobuf.activity.iconinfo player = 4;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 4;
  inline const ::protobuf::activity::iconinfo& player(int index) const;
  inline ::protobuf::activity::iconinfo* mutable_player(int index);
  inline ::protobuf::activity::iconinfo* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::iconinfo >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::iconinfo >*
      mutable_player();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.BattleGuess)
 private:
  inline void set_has_isjoin();
  inline void clear_has_isjoin();
  inline void set_has_wheel();
  inline void clear_has_wheel();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isjoin_;
  ::google::protobuf::int32 wheel_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::activity::iconinfo > player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static BattleGuess* default_instance_;
};
// -------------------------------------------------------------------

class ReplyEntryGuess : public ::google::protobuf::Message {
 public:
  ReplyEntryGuess();
  virtual ~ReplyEntryGuess();
  
  ReplyEntryGuess(const ReplyEntryGuess& from);
  
  inline ReplyEntryGuess& operator=(const ReplyEntryGuess& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyEntryGuess& default_instance();
  
  void Swap(ReplyEntryGuess* other);
  
  // implements Message ----------------------------------------------
  
  ReplyEntryGuess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyEntryGuess& from);
  void MergeFrom(const ReplyEntryGuess& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // required bool isEnd = 2;
  inline bool has_isend() const;
  inline void clear_isend();
  static const int kIsEndFieldNumber = 2;
  inline bool isend() const;
  inline void set_isend(bool value);
  
  // required int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.ReplyEntryGuess)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_isend();
  inline void clear_has_isend();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 state_;
  bool isend_;
  ::google::protobuf::int64 endtime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static ReplyEntryGuess* default_instance_;
};
// -------------------------------------------------------------------

class SetLineup : public ::google::protobuf::Message {
 public:
  SetLineup();
  virtual ~SetLineup();
  
  SetLineup(const SetLineup& from);
  
  inline SetLineup& operator=(const SetLineup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLineup& default_instance();
  
  void Swap(SetLineup* other);
  
  // implements Message ----------------------------------------------
  
  SetLineup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetLineup& from);
  void MergeFrom(const SetLineup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.common.LineupTemplate lineup = 1;
  inline int lineup_size() const;
  inline void clear_lineup();
  static const int kLineupFieldNumber = 1;
  inline const ::protobuf::common::LineupTemplate& lineup(int index) const;
  inline ::protobuf::common::LineupTemplate* mutable_lineup(int index);
  inline ::protobuf::common::LineupTemplate* add_lineup();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::LineupTemplate >&
      lineup() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::LineupTemplate >*
      mutable_lineup();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.SetLineup)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::LineupTemplate > lineup_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static SetLineup* default_instance_;
};
// -------------------------------------------------------------------

class Record : public ::google::protobuf::Message {
 public:
  Record();
  virtual ~Record();
  
  Record(const Record& from);
  
  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Record& default_instance();
  
  void Swap(Record* other);
  
  // implements Message ----------------------------------------------
  
  Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Record& from);
  void MergeFrom(const Record& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // repeated .protobuf.activity.OneRecord player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::protobuf::activity::OneRecord& player(int index) const;
  inline ::protobuf::activity::OneRecord* mutable_player(int index);
  inline ::protobuf::activity::OneRecord* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::OneRecord >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::OneRecord >*
      mutable_player();
  
  // required int32 wheel = 3;
  inline bool has_wheel() const;
  inline void clear_wheel();
  static const int kWheelFieldNumber = 3;
  inline ::google::protobuf::int32 wheel() const;
  inline void set_wheel(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.Record)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_wheel();
  inline void clear_has_wheel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::activity::OneRecord > player_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 wheel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static Record* default_instance_;
};
// -------------------------------------------------------------------

class OneRecord : public ::google::protobuf::Message {
 public:
  OneRecord();
  virtual ~OneRecord();
  
  OneRecord(const OneRecord& from);
  
  inline OneRecord& operator=(const OneRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OneRecord& default_instance();
  
  void Swap(OneRecord* other);
  
  // implements Message ----------------------------------------------
  
  OneRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneRecord& from);
  void MergeFrom(const OneRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .protobuf.activity.iconinfo attack = 1;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 1;
  inline const ::protobuf::activity::iconinfo& attack() const;
  inline ::protobuf::activity::iconinfo* mutable_attack();
  inline ::protobuf::activity::iconinfo* release_attack();
  
  // required .protobuf.activity.iconinfo defense = 2;
  inline bool has_defense() const;
  inline void clear_defense();
  static const int kDefenseFieldNumber = 2;
  inline const ::protobuf::activity::iconinfo& defense() const;
  inline ::protobuf::activity::iconinfo* mutable_defense();
  inline ::protobuf::activity::iconinfo* release_defense();
  
  // repeated bool oneVictory = 3;
  inline int onevictory_size() const;
  inline void clear_onevictory();
  static const int kOneVictoryFieldNumber = 3;
  inline bool onevictory(int index) const;
  inline void set_onevictory(int index, bool value);
  inline void add_onevictory(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      onevictory() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_onevictory();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.OneRecord)
 private:
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defense();
  inline void clear_has_defense();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::protobuf::activity::iconinfo* attack_;
  ::protobuf::activity::iconinfo* defense_;
  ::google::protobuf::RepeatedField< bool > onevictory_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static OneRecord* default_instance_;
};
// -------------------------------------------------------------------

class ActivityExchange : public ::google::protobuf::Message {
 public:
  ActivityExchange();
  virtual ~ActivityExchange();
  
  ActivityExchange(const ActivityExchange& from);
  
  inline ActivityExchange& operator=(const ActivityExchange& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityExchange& default_instance();
  
  void Swap(ActivityExchange* other);
  
  // implements Message ----------------------------------------------
  
  ActivityExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityExchange& from);
  void MergeFrom(const ActivityExchange& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 goodId = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3232 items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::protobuf::common::KVint3232& items(int index) const;
  inline ::protobuf::common::KVint3232* mutable_items(int index);
  inline ::protobuf::common::KVint3232* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_items();
  
  // optional .protobuf.common.Hero hero = 3;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 3;
  inline const ::protobuf::common::Hero& hero() const;
  inline ::protobuf::common::Hero* mutable_hero();
  inline ::protobuf::common::Hero* release_hero();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.ActivityExchange)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_hero();
  inline void clear_has_hero();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > items_;
  ::protobuf::common::Hero* hero_;
  ::google::protobuf::int32 goodid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static ActivityExchange* default_instance_;
};
// -------------------------------------------------------------------

class KingEventRequest : public ::google::protobuf::Message {
 public:
  KingEventRequest();
  virtual ~KingEventRequest();
  
  KingEventRequest(const KingEventRequest& from);
  
  inline KingEventRequest& operator=(const KingEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KingEventRequest& default_instance();
  
  void Swap(KingEventRequest* other);
  
  // implements Message ----------------------------------------------
  
  KingEventRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KingEventRequest& from);
  void MergeFrom(const KingEventRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 goodId = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);
  
  // repeated int32 heros = 2;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 2;
  inline ::google::protobuf::int32 heros(int index) const;
  inline void set_heros(int index, ::google::protobuf::int32 value);
  inline void add_heros(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      heros() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_heros();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.KingEventRequest)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heros_;
  ::google::protobuf::int32 goodid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static KingEventRequest* default_instance_;
};
// -------------------------------------------------------------------

class SigninToTal : public ::google::protobuf::Message {
 public:
  SigninToTal();
  virtual ~SigninToTal();
  
  SigninToTal(const SigninToTal& from);
  
  inline SigninToTal& operator=(const SigninToTal& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SigninToTal& default_instance();
  
  void Swap(SigninToTal* other);
  
  // implements Message ----------------------------------------------
  
  SigninToTal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SigninToTal& from);
  void MergeFrom(const SigninToTal& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 alreadyReceivedId = 1;
  inline bool has_alreadyreceivedid() const;
  inline void clear_alreadyreceivedid();
  static const int kAlreadyReceivedIdFieldNumber = 1;
  inline ::google::protobuf::int32 alreadyreceivedid() const;
  inline void set_alreadyreceivedid(::google::protobuf::int32 value);
  
  // optional int32 alreadyReceivedNumber = 2;
  inline bool has_alreadyreceivednumber() const;
  inline void clear_alreadyreceivednumber();
  static const int kAlreadyReceivedNumberFieldNumber = 2;
  inline ::google::protobuf::int32 alreadyreceivednumber() const;
  inline void set_alreadyreceivednumber(::google::protobuf::int32 value);
  
  // optional int32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.SigninToTal)
 private:
  inline void set_has_alreadyreceivedid();
  inline void clear_has_alreadyreceivedid();
  inline void set_has_alreadyreceivednumber();
  inline void clear_has_alreadyreceivednumber();
  inline void set_has_number();
  inline void clear_has_number();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 alreadyreceivedid_;
  ::google::protobuf::int32 alreadyreceivednumber_;
  ::google::protobuf::int32 number_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static SigninToTal* default_instance_;
};
// -------------------------------------------------------------------

class KingEventReply : public ::google::protobuf::Message {
 public:
  KingEventReply();
  virtual ~KingEventReply();
  
  KingEventReply(const KingEventReply& from);
  
  inline KingEventReply& operator=(const KingEventReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KingEventReply& default_instance();
  
  void Swap(KingEventReply* other);
  
  // implements Message ----------------------------------------------
  
  KingEventReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KingEventReply& from);
  void MergeFrom(const KingEventReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.common.KVint3264 items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // repeated .protobuf.common.KVint3264 heroItems = 2;
  inline int heroitems_size() const;
  inline void clear_heroitems();
  static const int kHeroItemsFieldNumber = 2;
  inline const ::protobuf::common::KVint3264& heroitems(int index) const;
  inline ::protobuf::common::KVint3264* mutable_heroitems(int index);
  inline ::protobuf::common::KVint3264* add_heroitems();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      heroitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_heroitems();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.KingEventReply)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > heroitems_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static KingEventReply* default_instance_;
};
// -------------------------------------------------------------------

class FirstChargeMsgReply : public ::google::protobuf::Message {
 public:
  FirstChargeMsgReply();
  virtual ~FirstChargeMsgReply();
  
  FirstChargeMsgReply(const FirstChargeMsgReply& from);
  
  inline FirstChargeMsgReply& operator=(const FirstChargeMsgReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstChargeMsgReply& default_instance();
  
  void Swap(FirstChargeMsgReply* other);
  
  // implements Message ----------------------------------------------
  
  FirstChargeMsgReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstChargeMsgReply& from);
  void MergeFrom(const FirstChargeMsgReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 goodId = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);
  
  // optional int32 haveChargePrice = 2;
  inline bool has_havechargeprice() const;
  inline void clear_havechargeprice();
  static const int kHaveChargePriceFieldNumber = 2;
  inline ::google::protobuf::int32 havechargeprice() const;
  inline void set_havechargeprice(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3264 items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:protobuf.activity.FirstChargeMsgReply)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_havechargeprice();
  inline void clear_has_havechargeprice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 goodid_;
  ::google::protobuf::int32 havechargeprice_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();
  
  void InitAsDefaultInstance();
  static FirstChargeMsgReply* default_instance_;
};
// ===================================================================


// ===================================================================

// Wonderful

// optional int32 checkinid = 1;
inline bool Wonderful::has_checkinid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wonderful::set_has_checkinid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wonderful::clear_has_checkinid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wonderful::clear_checkinid() {
  checkinid_ = 0;
  clear_has_checkinid();
}
inline ::google::protobuf::int32 Wonderful::checkinid() const {
  return checkinid_;
}
inline void Wonderful::set_checkinid(::google::protobuf::int32 value) {
  set_has_checkinid();
  checkinid_ = value;
}

// optional int32 checkinidLogin = 2;
inline bool Wonderful::has_checkinidlogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Wonderful::set_has_checkinidlogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Wonderful::clear_has_checkinidlogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Wonderful::clear_checkinidlogin() {
  checkinidlogin_ = 0;
  clear_has_checkinidlogin();
}
inline ::google::protobuf::int32 Wonderful::checkinidlogin() const {
  return checkinidlogin_;
}
inline void Wonderful::set_checkinidlogin(::google::protobuf::int32 value) {
  set_has_checkinidlogin();
  checkinidlogin_ = value;
}

// optional int32 checkinidGot = 3;
inline bool Wonderful::has_checkinidgot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Wonderful::set_has_checkinidgot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Wonderful::clear_has_checkinidgot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Wonderful::clear_checkinidgot() {
  checkinidgot_ = 0;
  clear_has_checkinidgot();
}
inline ::google::protobuf::int32 Wonderful::checkinidgot() const {
  return checkinidgot_;
}
inline void Wonderful::set_checkinidgot(::google::protobuf::int32 value) {
  set_has_checkinidgot();
  checkinidgot_ = value;
}

// optional int64 checkinNexttime = 4;
inline bool Wonderful::has_checkinnexttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Wonderful::set_has_checkinnexttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Wonderful::clear_has_checkinnexttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Wonderful::clear_checkinnexttime() {
  checkinnexttime_ = GOOGLE_LONGLONG(0);
  clear_has_checkinnexttime();
}
inline ::google::protobuf::int64 Wonderful::checkinnexttime() const {
  return checkinnexttime_;
}
inline void Wonderful::set_checkinnexttime(::google::protobuf::int64 value) {
  set_has_checkinnexttime();
  checkinnexttime_ = value;
}

// optional int32 monthlastdays = 5;
inline bool Wonderful::has_monthlastdays() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Wonderful::set_has_monthlastdays() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Wonderful::clear_has_monthlastdays() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Wonderful::clear_monthlastdays() {
  monthlastdays_ = 0;
  clear_has_monthlastdays();
}
inline ::google::protobuf::int32 Wonderful::monthlastdays() const {
  return monthlastdays_;
}
inline void Wonderful::set_monthlastdays(::google::protobuf::int32 value) {
  set_has_monthlastdays();
  monthlastdays_ = value;
}

// optional int32 month1lastdays = 6;
inline bool Wonderful::has_month1lastdays() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Wonderful::set_has_month1lastdays() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Wonderful::clear_has_month1lastdays() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Wonderful::clear_month1lastdays() {
  month1lastdays_ = 0;
  clear_has_month1lastdays();
}
inline ::google::protobuf::int32 Wonderful::month1lastdays() const {
  return month1lastdays_;
}
inline void Wonderful::set_month1lastdays(::google::protobuf::int32 value) {
  set_has_month1lastdays();
  month1lastdays_ = value;
}

// optional .protobuf.activity.LimitActivity giftweekmonth = 7;
inline bool Wonderful::has_giftweekmonth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Wonderful::set_has_giftweekmonth() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Wonderful::clear_has_giftweekmonth() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Wonderful::clear_giftweekmonth() {
  if (giftweekmonth_ != NULL) giftweekmonth_->::protobuf::activity::LimitActivity::Clear();
  clear_has_giftweekmonth();
}
inline const ::protobuf::activity::LimitActivity& Wonderful::giftweekmonth() const {
  return giftweekmonth_ != NULL ? *giftweekmonth_ : *default_instance_->giftweekmonth_;
}
inline ::protobuf::activity::LimitActivity* Wonderful::mutable_giftweekmonth() {
  set_has_giftweekmonth();
  if (giftweekmonth_ == NULL) giftweekmonth_ = new ::protobuf::activity::LimitActivity;
  return giftweekmonth_;
}
inline ::protobuf::activity::LimitActivity* Wonderful::release_giftweekmonth() {
  clear_has_giftweekmonth();
  ::protobuf::activity::LimitActivity* temp = giftweekmonth_;
  giftweekmonth_ = NULL;
  return temp;
}

// optional .protobuf.common.KVint3232 checkinItem = 8;
inline bool Wonderful::has_checkinitem() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Wonderful::set_has_checkinitem() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Wonderful::clear_has_checkinitem() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Wonderful::clear_checkinitem() {
  if (checkinitem_ != NULL) checkinitem_->::protobuf::common::KVint3232::Clear();
  clear_has_checkinitem();
}
inline const ::protobuf::common::KVint3232& Wonderful::checkinitem() const {
  return checkinitem_ != NULL ? *checkinitem_ : *default_instance_->checkinitem_;
}
inline ::protobuf::common::KVint3232* Wonderful::mutable_checkinitem() {
  set_has_checkinitem();
  if (checkinitem_ == NULL) checkinitem_ = new ::protobuf::common::KVint3232;
  return checkinitem_;
}
inline ::protobuf::common::KVint3232* Wonderful::release_checkinitem() {
  clear_has_checkinitem();
  ::protobuf::common::KVint3232* temp = checkinitem_;
  checkinitem_ = NULL;
  return temp;
}

// optional int32 vipExtraAward = 9;
inline bool Wonderful::has_vipextraaward() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Wonderful::set_has_vipextraaward() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Wonderful::clear_has_vipextraaward() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Wonderful::clear_vipextraaward() {
  vipextraaward_ = 0;
  clear_has_vipextraaward();
}
inline ::google::protobuf::int32 Wonderful::vipextraaward() const {
  return vipextraaward_;
}
inline void Wonderful::set_vipextraaward(::google::protobuf::int32 value) {
  set_has_vipextraaward();
  vipextraaward_ = value;
}

// -------------------------------------------------------------------

// ChargePage

// optional int32 monthlastdays = 1;
inline bool ChargePage::has_monthlastdays() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChargePage::set_has_monthlastdays() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChargePage::clear_has_monthlastdays() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChargePage::clear_monthlastdays() {
  monthlastdays_ = 0;
  clear_has_monthlastdays();
}
inline ::google::protobuf::int32 ChargePage::monthlastdays() const {
  return monthlastdays_;
}
inline void ChargePage::set_monthlastdays(::google::protobuf::int32 value) {
  set_has_monthlastdays();
  monthlastdays_ = value;
}

// optional int32 month1lastdays = 2;
inline bool ChargePage::has_month1lastdays() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChargePage::set_has_month1lastdays() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChargePage::clear_has_month1lastdays() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChargePage::clear_month1lastdays() {
  month1lastdays_ = 0;
  clear_has_month1lastdays();
}
inline ::google::protobuf::int32 ChargePage::month1lastdays() const {
  return month1lastdays_;
}
inline void ChargePage::set_month1lastdays(::google::protobuf::int32 value) {
  set_has_month1lastdays();
  month1lastdays_ = value;
}

// repeated int32 isBuyed = 3;
inline int ChargePage::isbuyed_size() const {
  return isbuyed_.size();
}
inline void ChargePage::clear_isbuyed() {
  isbuyed_.Clear();
}
inline ::google::protobuf::int32 ChargePage::isbuyed(int index) const {
  return isbuyed_.Get(index);
}
inline void ChargePage::set_isbuyed(int index, ::google::protobuf::int32 value) {
  isbuyed_.Set(index, value);
}
inline void ChargePage::add_isbuyed(::google::protobuf::int32 value) {
  isbuyed_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChargePage::isbuyed() const {
  return isbuyed_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChargePage::mutable_isbuyed() {
  return &isbuyed_;
}

// -------------------------------------------------------------------

// LimitActivity

// repeated .protobuf.activity.Activity activitys = 1;
inline int LimitActivity::activitys_size() const {
  return activitys_.size();
}
inline void LimitActivity::clear_activitys() {
  activitys_.Clear();
}
inline const ::protobuf::activity::Activity& LimitActivity::activitys(int index) const {
  return activitys_.Get(index);
}
inline ::protobuf::activity::Activity* LimitActivity::mutable_activitys(int index) {
  return activitys_.Mutable(index);
}
inline ::protobuf::activity::Activity* LimitActivity::add_activitys() {
  return activitys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::Activity >&
LimitActivity::activitys() const {
  return activitys_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::Activity >*
LimitActivity::mutable_activitys() {
  return &activitys_;
}

// -------------------------------------------------------------------

// Activity

// required int32 id = 1;
inline bool Activity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Activity::id() const {
  return id_;
}
inline void Activity::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 time = 2;
inline bool Activity::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 Activity::time() const {
  return time_;
}
inline void Activity::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// repeated .protobuf.activity.ActivityGood goods = 3;
inline int Activity::goods_size() const {
  return goods_.size();
}
inline void Activity::clear_goods() {
  goods_.Clear();
}
inline const ::protobuf::activity::ActivityGood& Activity::goods(int index) const {
  return goods_.Get(index);
}
inline ::protobuf::activity::ActivityGood* Activity::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::protobuf::activity::ActivityGood* Activity::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::ActivityGood >&
Activity::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::ActivityGood >*
Activity::mutable_goods() {
  return &goods_;
}

// optional int64 rewardendtime = 4;
inline bool Activity::has_rewardendtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity::set_has_rewardendtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity::clear_has_rewardendtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity::clear_rewardendtime() {
  rewardendtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardendtime();
}
inline ::google::protobuf::int64 Activity::rewardendtime() const {
  return rewardendtime_;
}
inline void Activity::set_rewardendtime(::google::protobuf::int64 value) {
  set_has_rewardendtime();
  rewardendtime_ = value;
}

// required int32 name = 10;
inline bool Activity::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Activity::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Activity::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Activity::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::google::protobuf::int32 Activity::name() const {
  return name_;
}
inline void Activity::set_name(::google::protobuf::int32 value) {
  set_has_name();
  name_ = value;
}

// required int32 desc = 11;
inline bool Activity::has_desc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Activity::set_has_desc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Activity::clear_has_desc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Activity::clear_desc() {
  desc_ = 0;
  clear_has_desc();
}
inline ::google::protobuf::int32 Activity::desc() const {
  return desc_;
}
inline void Activity::set_desc(::google::protobuf::int32 value) {
  set_has_desc();
  desc_ = value;
}

// required string icon = 12;
inline bool Activity::has_icon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Activity::set_has_icon() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Activity::clear_has_icon() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Activity::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& Activity::icon() const {
  return *icon_;
}
inline void Activity::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void Activity::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void Activity::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* Activity::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string img = 13;
inline bool Activity::has_img() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Activity::set_has_img() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Activity::clear_has_img() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Activity::clear_img() {
  if (img_ != &::google::protobuf::internal::kEmptyString) {
    img_->clear();
  }
  clear_has_img();
}
inline const ::std::string& Activity::img() const {
  return *img_;
}
inline void Activity::set_img(const ::std::string& value) {
  set_has_img();
  if (img_ == &::google::protobuf::internal::kEmptyString) {
    img_ = new ::std::string;
  }
  img_->assign(value);
}
inline void Activity::set_img(const char* value) {
  set_has_img();
  if (img_ == &::google::protobuf::internal::kEmptyString) {
    img_ = new ::std::string;
  }
  img_->assign(value);
}
inline void Activity::set_img(const char* value, size_t size) {
  set_has_img();
  if (img_ == &::google::protobuf::internal::kEmptyString) {
    img_ = new ::std::string;
  }
  img_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_img() {
  set_has_img();
  if (img_ == &::google::protobuf::internal::kEmptyString) {
    img_ = new ::std::string;
  }
  return img_;
}
inline ::std::string* Activity::release_img() {
  clear_has_img();
  if (img_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = img_;
    img_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .protobuf.common.KVint3232 limitGoods = 14;
inline int Activity::limitgoods_size() const {
  return limitgoods_.size();
}
inline void Activity::clear_limitgoods() {
  limitgoods_.Clear();
}
inline const ::protobuf::common::KVint3232& Activity::limitgoods(int index) const {
  return limitgoods_.Get(index);
}
inline ::protobuf::common::KVint3232* Activity::mutable_limitgoods(int index) {
  return limitgoods_.Mutable(index);
}
inline ::protobuf::common::KVint3232* Activity::add_limitgoods() {
  return limitgoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
Activity::limitgoods() const {
  return limitgoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
Activity::mutable_limitgoods() {
  return &limitgoods_;
}

// required int32 type = 15;
inline bool Activity::has_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Activity::set_has_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Activity::clear_has_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Activity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Activity::type() const {
  return type_;
}
inline void Activity::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 extraDropid = 16;
inline bool Activity::has_extradropid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Activity::set_has_extradropid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Activity::clear_has_extradropid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Activity::clear_extradropid() {
  extradropid_ = 0;
  clear_has_extradropid();
}
inline ::google::protobuf::int32 Activity::extradropid() const {
  return extradropid_;
}
inline void Activity::set_extradropid(::google::protobuf::int32 value) {
  set_has_extradropid();
  extradropid_ = value;
}

// optional int32 bossId = 17;
inline bool Activity::has_bossid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Activity::set_has_bossid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Activity::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Activity::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 Activity::bossid() const {
  return bossid_;
}
inline void Activity::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional .protobuf.activity.BattleGuess guess = 18;
inline bool Activity::has_guess() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Activity::set_has_guess() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Activity::clear_has_guess() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Activity::clear_guess() {
  if (guess_ != NULL) guess_->::protobuf::activity::BattleGuess::Clear();
  clear_has_guess();
}
inline const ::protobuf::activity::BattleGuess& Activity::guess() const {
  return guess_ != NULL ? *guess_ : *default_instance_->guess_;
}
inline ::protobuf::activity::BattleGuess* Activity::mutable_guess() {
  set_has_guess();
  if (guess_ == NULL) guess_ = new ::protobuf::activity::BattleGuess;
  return guess_;
}
inline ::protobuf::activity::BattleGuess* Activity::release_guess() {
  clear_has_guess();
  ::protobuf::activity::BattleGuess* temp = guess_;
  guess_ = NULL;
  return temp;
}

// optional int32 round = 19;
inline bool Activity::has_round() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Activity::set_has_round() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Activity::clear_has_round() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Activity::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 Activity::round() const {
  return round_;
}
inline void Activity::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
}

// optional int32 curRound = 20;
inline bool Activity::has_curround() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Activity::set_has_curround() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Activity::clear_has_curround() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Activity::clear_curround() {
  curround_ = 0;
  clear_has_curround();
}
inline ::google::protobuf::int32 Activity::curround() const {
  return curround_;
}
inline void Activity::set_curround(::google::protobuf::int32 value) {
  set_has_curround();
  curround_ = value;
}

// -------------------------------------------------------------------

// ActivityGood

// required int32 goodId = 1;
inline bool ActivityGood::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityGood::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityGood::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityGood::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 ActivityGood::goodid() const {
  return goodid_;
}
inline void ActivityGood::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// required int32 finish = 2;
inline bool ActivityGood::has_finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityGood::set_has_finish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityGood::clear_has_finish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityGood::clear_finish() {
  finish_ = 0;
  clear_has_finish();
}
inline ::google::protobuf::int32 ActivityGood::finish() const {
  return finish_;
}
inline void ActivityGood::set_finish(::google::protobuf::int32 value) {
  set_has_finish();
  finish_ = value;
}

// optional int32 value = 3;
inline bool ActivityGood::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityGood::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityGood::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityGood::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ActivityGood::value() const {
  return value_;
}
inline void ActivityGood::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// required int32 taskValue = 10;
inline bool ActivityGood::has_taskvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityGood::set_has_taskvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityGood::clear_has_taskvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityGood::clear_taskvalue() {
  taskvalue_ = 0;
  clear_has_taskvalue();
}
inline ::google::protobuf::int32 ActivityGood::taskvalue() const {
  return taskvalue_;
}
inline void ActivityGood::set_taskvalue(::google::protobuf::int32 value) {
  set_has_taskvalue();
  taskvalue_ = value;
}

// repeated .protobuf.common.KVint3232 goods = 11;
inline int ActivityGood::goods_size() const {
  return goods_.size();
}
inline void ActivityGood::clear_goods() {
  goods_.Clear();
}
inline const ::protobuf::common::KVint3232& ActivityGood::goods(int index) const {
  return goods_.Get(index);
}
inline ::protobuf::common::KVint3232* ActivityGood::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::protobuf::common::KVint3232* ActivityGood::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
ActivityGood::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
ActivityGood::mutable_goods() {
  return &goods_;
}

// required int32 name = 12;
inline bool ActivityGood::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActivityGood::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActivityGood::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActivityGood::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::google::protobuf::int32 ActivityGood::name() const {
  return name_;
}
inline void ActivityGood::set_name(::google::protobuf::int32 value) {
  set_has_name();
  name_ = value;
}

// required int32 limit = 13;
inline bool ActivityGood::has_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActivityGood::set_has_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActivityGood::clear_has_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActivityGood::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 ActivityGood::limit() const {
  return limit_;
}
inline void ActivityGood::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}

// required int32 taskvice = 14;
inline bool ActivityGood::has_taskvice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActivityGood::set_has_taskvice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActivityGood::clear_has_taskvice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActivityGood::clear_taskvice() {
  taskvice_ = 0;
  clear_has_taskvice();
}
inline ::google::protobuf::int32 ActivityGood::taskvice() const {
  return taskvice_;
}
inline void ActivityGood::set_taskvice(::google::protobuf::int32 value) {
  set_has_taskvice();
  taskvice_ = value;
}

// required int32 chargeid = 15;
inline bool ActivityGood::has_chargeid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActivityGood::set_has_chargeid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActivityGood::clear_has_chargeid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActivityGood::clear_chargeid() {
  chargeid_ = 0;
  clear_has_chargeid();
}
inline ::google::protobuf::int32 ActivityGood::chargeid() const {
  return chargeid_;
}
inline void ActivityGood::set_chargeid(::google::protobuf::int32 value) {
  set_has_chargeid();
  chargeid_ = value;
}

// required int32 lastdays = 16;
inline bool ActivityGood::has_lastdays() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActivityGood::set_has_lastdays() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActivityGood::clear_has_lastdays() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActivityGood::clear_lastdays() {
  lastdays_ = 0;
  clear_has_lastdays();
}
inline ::google::protobuf::int32 ActivityGood::lastdays() const {
  return lastdays_;
}
inline void ActivityGood::set_lastdays(::google::protobuf::int32 value) {
  set_has_lastdays();
  lastdays_ = value;
}

// required int32 goActive = 17;
inline bool ActivityGood::has_goactive() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ActivityGood::set_has_goactive() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ActivityGood::clear_has_goactive() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ActivityGood::clear_goactive() {
  goactive_ = 0;
  clear_has_goactive();
}
inline ::google::protobuf::int32 ActivityGood::goactive() const {
  return goactive_;
}
inline void ActivityGood::set_goactive(::google::protobuf::int32 value) {
  set_has_goactive();
  goactive_ = value;
}

// required int32 goSystem = 18;
inline bool ActivityGood::has_gosystem() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ActivityGood::set_has_gosystem() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ActivityGood::clear_has_gosystem() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ActivityGood::clear_gosystem() {
  gosystem_ = 0;
  clear_has_gosystem();
}
inline ::google::protobuf::int32 ActivityGood::gosystem() const {
  return gosystem_;
}
inline void ActivityGood::set_gosystem(::google::protobuf::int32 value) {
  set_has_gosystem();
  gosystem_ = value;
}

// optional string priceRMB = 19;
inline bool ActivityGood::has_pricermb() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ActivityGood::set_has_pricermb() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ActivityGood::clear_has_pricermb() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ActivityGood::clear_pricermb() {
  if (pricermb_ != &::google::protobuf::internal::kEmptyString) {
    pricermb_->clear();
  }
  clear_has_pricermb();
}
inline const ::std::string& ActivityGood::pricermb() const {
  return *pricermb_;
}
inline void ActivityGood::set_pricermb(const ::std::string& value) {
  set_has_pricermb();
  if (pricermb_ == &::google::protobuf::internal::kEmptyString) {
    pricermb_ = new ::std::string;
  }
  pricermb_->assign(value);
}
inline void ActivityGood::set_pricermb(const char* value) {
  set_has_pricermb();
  if (pricermb_ == &::google::protobuf::internal::kEmptyString) {
    pricermb_ = new ::std::string;
  }
  pricermb_->assign(value);
}
inline void ActivityGood::set_pricermb(const char* value, size_t size) {
  set_has_pricermb();
  if (pricermb_ == &::google::protobuf::internal::kEmptyString) {
    pricermb_ = new ::std::string;
  }
  pricermb_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActivityGood::mutable_pricermb() {
  set_has_pricermb();
  if (pricermb_ == &::google::protobuf::internal::kEmptyString) {
    pricermb_ = new ::std::string;
  }
  return pricermb_;
}
inline ::std::string* ActivityGood::release_pricermb() {
  clear_has_pricermb();
  if (pricermb_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pricermb_;
    pricermb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string priceDol = 20;
inline bool ActivityGood::has_pricedol() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ActivityGood::set_has_pricedol() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ActivityGood::clear_has_pricedol() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ActivityGood::clear_pricedol() {
  if (pricedol_ != &::google::protobuf::internal::kEmptyString) {
    pricedol_->clear();
  }
  clear_has_pricedol();
}
inline const ::std::string& ActivityGood::pricedol() const {
  return *pricedol_;
}
inline void ActivityGood::set_pricedol(const ::std::string& value) {
  set_has_pricedol();
  if (pricedol_ == &::google::protobuf::internal::kEmptyString) {
    pricedol_ = new ::std::string;
  }
  pricedol_->assign(value);
}
inline void ActivityGood::set_pricedol(const char* value) {
  set_has_pricedol();
  if (pricedol_ == &::google::protobuf::internal::kEmptyString) {
    pricedol_ = new ::std::string;
  }
  pricedol_->assign(value);
}
inline void ActivityGood::set_pricedol(const char* value, size_t size) {
  set_has_pricedol();
  if (pricedol_ == &::google::protobuf::internal::kEmptyString) {
    pricedol_ = new ::std::string;
  }
  pricedol_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActivityGood::mutable_pricedol() {
  set_has_pricedol();
  if (pricedol_ == &::google::protobuf::internal::kEmptyString) {
    pricedol_ = new ::std::string;
  }
  return pricedol_;
}
inline ::std::string* ActivityGood::release_pricedol() {
  clear_has_pricedol();
  if (pricedol_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pricedol_;
    pricedol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string speGoods = 21;
inline bool ActivityGood::has_spegoods() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ActivityGood::set_has_spegoods() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ActivityGood::clear_has_spegoods() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ActivityGood::clear_spegoods() {
  if (spegoods_ != &::google::protobuf::internal::kEmptyString) {
    spegoods_->clear();
  }
  clear_has_spegoods();
}
inline const ::std::string& ActivityGood::spegoods() const {
  return *spegoods_;
}
inline void ActivityGood::set_spegoods(const ::std::string& value) {
  set_has_spegoods();
  if (spegoods_ == &::google::protobuf::internal::kEmptyString) {
    spegoods_ = new ::std::string;
  }
  spegoods_->assign(value);
}
inline void ActivityGood::set_spegoods(const char* value) {
  set_has_spegoods();
  if (spegoods_ == &::google::protobuf::internal::kEmptyString) {
    spegoods_ = new ::std::string;
  }
  spegoods_->assign(value);
}
inline void ActivityGood::set_spegoods(const char* value, size_t size) {
  set_has_spegoods();
  if (spegoods_ == &::google::protobuf::internal::kEmptyString) {
    spegoods_ = new ::std::string;
  }
  spegoods_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActivityGood::mutable_spegoods() {
  set_has_spegoods();
  if (spegoods_ == &::google::protobuf::internal::kEmptyString) {
    spegoods_ = new ::std::string;
  }
  return spegoods_;
}
inline ::std::string* ActivityGood::release_spegoods() {
  clear_has_spegoods();
  if (spegoods_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = spegoods_;
    spegoods_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 taskEvent = 22;
inline bool ActivityGood::has_taskevent() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ActivityGood::set_has_taskevent() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ActivityGood::clear_has_taskevent() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ActivityGood::clear_taskevent() {
  taskevent_ = 0;
  clear_has_taskevent();
}
inline ::google::protobuf::int32 ActivityGood::taskevent() const {
  return taskevent_;
}
inline void ActivityGood::set_taskevent(::google::protobuf::int32 value) {
  set_has_taskevent();
  taskevent_ = value;
}

// optional int32 firstChargeMoney = 23;
inline bool ActivityGood::has_firstchargemoney() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ActivityGood::set_has_firstchargemoney() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ActivityGood::clear_has_firstchargemoney() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ActivityGood::clear_firstchargemoney() {
  firstchargemoney_ = 0;
  clear_has_firstchargemoney();
}
inline ::google::protobuf::int32 ActivityGood::firstchargemoney() const {
  return firstchargemoney_;
}
inline void ActivityGood::set_firstchargemoney(::google::protobuf::int32 value) {
  set_has_firstchargemoney();
  firstchargemoney_ = value;
}

// optional int32 firstChargeNext = 24;
inline bool ActivityGood::has_firstchargenext() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ActivityGood::set_has_firstchargenext() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ActivityGood::clear_has_firstchargenext() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ActivityGood::clear_firstchargenext() {
  firstchargenext_ = 0;
  clear_has_firstchargenext();
}
inline ::google::protobuf::int32 ActivityGood::firstchargenext() const {
  return firstchargenext_;
}
inline void ActivityGood::set_firstchargenext(::google::protobuf::int32 value) {
  set_has_firstchargenext();
  firstchargenext_ = value;
}

// -------------------------------------------------------------------

// ReplyChargeGoods

// required string orderId = 1;
inline bool ReplyChargeGoods::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyChargeGoods::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyChargeGoods::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyChargeGoods::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& ReplyChargeGoods::orderid() const {
  return *orderid_;
}
inline void ReplyChargeGoods::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void ReplyChargeGoods::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void ReplyChargeGoods::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReplyChargeGoods::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  return orderid_;
}
inline ::std::string* ReplyChargeGoods::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .protobuf.common.KVint3264 items = 2;
inline int ReplyChargeGoods::items_size() const {
  return items_.size();
}
inline void ReplyChargeGoods::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& ReplyChargeGoods::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* ReplyChargeGoods::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* ReplyChargeGoods::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
ReplyChargeGoods::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
ReplyChargeGoods::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// VideoSeeReply

// required int32 canSee = 1;
inline bool VideoSeeReply::has_cansee() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VideoSeeReply::set_has_cansee() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VideoSeeReply::clear_has_cansee() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VideoSeeReply::clear_cansee() {
  cansee_ = 0;
  clear_has_cansee();
}
inline ::google::protobuf::int32 VideoSeeReply::cansee() const {
  return cansee_;
}
inline void VideoSeeReply::set_cansee(::google::protobuf::int32 value) {
  set_has_cansee();
  cansee_ = value;
}

// repeated .protobuf.common.KVint3264 items = 2;
inline int VideoSeeReply::items_size() const {
  return items_.size();
}
inline void VideoSeeReply::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& VideoSeeReply::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* VideoSeeReply::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* VideoSeeReply::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
VideoSeeReply::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
VideoSeeReply::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// iconinfo

// required int32 level = 1;
inline bool iconinfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void iconinfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void iconinfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void iconinfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 iconinfo::level() const {
  return level_;
}
inline void iconinfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required string name = 2;
inline bool iconinfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void iconinfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void iconinfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void iconinfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& iconinfo::name() const {
  return *name_;
}
inline void iconinfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void iconinfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void iconinfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* iconinfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* iconinfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string head = 3;
inline bool iconinfo::has_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void iconinfo::set_has_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void iconinfo::clear_has_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void iconinfo::clear_head() {
  if (head_ != &::google::protobuf::internal::kEmptyString) {
    head_->clear();
  }
  clear_has_head();
}
inline const ::std::string& iconinfo::head() const {
  return *head_;
}
inline void iconinfo::set_head(const ::std::string& value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::kEmptyString) {
    head_ = new ::std::string;
  }
  head_->assign(value);
}
inline void iconinfo::set_head(const char* value) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::kEmptyString) {
    head_ = new ::std::string;
  }
  head_->assign(value);
}
inline void iconinfo::set_head(const char* value, size_t size) {
  set_has_head();
  if (head_ == &::google::protobuf::internal::kEmptyString) {
    head_ = new ::std::string;
  }
  head_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* iconinfo::mutable_head() {
  set_has_head();
  if (head_ == &::google::protobuf::internal::kEmptyString) {
    head_ = new ::std::string;
  }
  return head_;
}
inline ::std::string* iconinfo::release_head() {
  clear_has_head();
  if (head_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = head_;
    head_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string serverName = 4;
inline bool iconinfo::has_servername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void iconinfo::set_has_servername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void iconinfo::clear_has_servername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void iconinfo::clear_servername() {
  if (servername_ != &::google::protobuf::internal::kEmptyString) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& iconinfo::servername() const {
  return *servername_;
}
inline void iconinfo::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::kEmptyString) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
}
inline void iconinfo::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::kEmptyString) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
}
inline void iconinfo::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::kEmptyString) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* iconinfo::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::kEmptyString) {
    servername_ = new ::std::string;
  }
  return servername_;
}
inline ::std::string* iconinfo::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string playerid = 5;
inline bool iconinfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void iconinfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void iconinfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void iconinfo::clear_playerid() {
  if (playerid_ != &::google::protobuf::internal::kEmptyString) {
    playerid_->clear();
  }
  clear_has_playerid();
}
inline const ::std::string& iconinfo::playerid() const {
  return *playerid_;
}
inline void iconinfo::set_playerid(const ::std::string& value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void iconinfo::set_playerid(const char* value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void iconinfo::set_playerid(const char* value, size_t size) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* iconinfo::mutable_playerid() {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  return playerid_;
}
inline ::std::string* iconinfo::release_playerid() {
  clear_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playerid_;
    playerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 headFrame = 6;
inline bool iconinfo::has_headframe() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void iconinfo::set_has_headframe() {
  _has_bits_[0] |= 0x00000020u;
}
inline void iconinfo::clear_has_headframe() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void iconinfo::clear_headframe() {
  headframe_ = 0;
  clear_has_headframe();
}
inline ::google::protobuf::int32 iconinfo::headframe() const {
  return headframe_;
}
inline void iconinfo::set_headframe(::google::protobuf::int32 value) {
  set_has_headframe();
  headframe_ = value;
}

// -------------------------------------------------------------------

// BattleGuess

// required bool isJoin = 1;
inline bool BattleGuess::has_isjoin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleGuess::set_has_isjoin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleGuess::clear_has_isjoin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleGuess::clear_isjoin() {
  isjoin_ = false;
  clear_has_isjoin();
}
inline bool BattleGuess::isjoin() const {
  return isjoin_;
}
inline void BattleGuess::set_isjoin(bool value) {
  set_has_isjoin();
  isjoin_ = value;
}

// required int32 wheel = 2;
inline bool BattleGuess::has_wheel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleGuess::set_has_wheel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleGuess::clear_has_wheel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleGuess::clear_wheel() {
  wheel_ = 0;
  clear_has_wheel();
}
inline ::google::protobuf::int32 BattleGuess::wheel() const {
  return wheel_;
}
inline void BattleGuess::set_wheel(::google::protobuf::int32 value) {
  set_has_wheel();
  wheel_ = value;
}

// required int64 endTime = 3;
inline bool BattleGuess::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleGuess::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleGuess::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleGuess::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 BattleGuess::endtime() const {
  return endtime_;
}
inline void BattleGuess::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .protobuf.activity.iconinfo player = 4;
inline int BattleGuess::player_size() const {
  return player_.size();
}
inline void BattleGuess::clear_player() {
  player_.Clear();
}
inline const ::protobuf::activity::iconinfo& BattleGuess::player(int index) const {
  return player_.Get(index);
}
inline ::protobuf::activity::iconinfo* BattleGuess::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::protobuf::activity::iconinfo* BattleGuess::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::iconinfo >&
BattleGuess::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::iconinfo >*
BattleGuess::mutable_player() {
  return &player_;
}

// -------------------------------------------------------------------

// ReplyEntryGuess

// required int32 state = 1;
inline bool ReplyEntryGuess::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyEntryGuess::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyEntryGuess::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyEntryGuess::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ReplyEntryGuess::state() const {
  return state_;
}
inline void ReplyEntryGuess::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required bool isEnd = 2;
inline bool ReplyEntryGuess::has_isend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyEntryGuess::set_has_isend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyEntryGuess::clear_has_isend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyEntryGuess::clear_isend() {
  isend_ = false;
  clear_has_isend();
}
inline bool ReplyEntryGuess::isend() const {
  return isend_;
}
inline void ReplyEntryGuess::set_isend(bool value) {
  set_has_isend();
  isend_ = value;
}

// required int64 endTime = 3;
inline bool ReplyEntryGuess::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplyEntryGuess::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplyEntryGuess::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplyEntryGuess::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 ReplyEntryGuess::endtime() const {
  return endtime_;
}
inline void ReplyEntryGuess::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// SetLineup

// repeated .protobuf.common.LineupTemplate lineup = 1;
inline int SetLineup::lineup_size() const {
  return lineup_.size();
}
inline void SetLineup::clear_lineup() {
  lineup_.Clear();
}
inline const ::protobuf::common::LineupTemplate& SetLineup::lineup(int index) const {
  return lineup_.Get(index);
}
inline ::protobuf::common::LineupTemplate* SetLineup::mutable_lineup(int index) {
  return lineup_.Mutable(index);
}
inline ::protobuf::common::LineupTemplate* SetLineup::add_lineup() {
  return lineup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::LineupTemplate >&
SetLineup::lineup() const {
  return lineup_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::LineupTemplate >*
SetLineup::mutable_lineup() {
  return &lineup_;
}

// -------------------------------------------------------------------

// Record

// required int32 state = 1;
inline bool Record::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Record::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Record::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Record::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Record::state() const {
  return state_;
}
inline void Record::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated .protobuf.activity.OneRecord player = 2;
inline int Record::player_size() const {
  return player_.size();
}
inline void Record::clear_player() {
  player_.Clear();
}
inline const ::protobuf::activity::OneRecord& Record::player(int index) const {
  return player_.Get(index);
}
inline ::protobuf::activity::OneRecord* Record::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::protobuf::activity::OneRecord* Record::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::activity::OneRecord >&
Record::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::activity::OneRecord >*
Record::mutable_player() {
  return &player_;
}

// required int32 wheel = 3;
inline bool Record::has_wheel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Record::set_has_wheel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Record::clear_has_wheel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Record::clear_wheel() {
  wheel_ = 0;
  clear_has_wheel();
}
inline ::google::protobuf::int32 Record::wheel() const {
  return wheel_;
}
inline void Record::set_wheel(::google::protobuf::int32 value) {
  set_has_wheel();
  wheel_ = value;
}

// -------------------------------------------------------------------

// OneRecord

// required .protobuf.activity.iconinfo attack = 1;
inline bool OneRecord::has_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneRecord::set_has_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneRecord::clear_has_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneRecord::clear_attack() {
  if (attack_ != NULL) attack_->::protobuf::activity::iconinfo::Clear();
  clear_has_attack();
}
inline const ::protobuf::activity::iconinfo& OneRecord::attack() const {
  return attack_ != NULL ? *attack_ : *default_instance_->attack_;
}
inline ::protobuf::activity::iconinfo* OneRecord::mutable_attack() {
  set_has_attack();
  if (attack_ == NULL) attack_ = new ::protobuf::activity::iconinfo;
  return attack_;
}
inline ::protobuf::activity::iconinfo* OneRecord::release_attack() {
  clear_has_attack();
  ::protobuf::activity::iconinfo* temp = attack_;
  attack_ = NULL;
  return temp;
}

// required .protobuf.activity.iconinfo defense = 2;
inline bool OneRecord::has_defense() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneRecord::set_has_defense() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneRecord::clear_has_defense() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneRecord::clear_defense() {
  if (defense_ != NULL) defense_->::protobuf::activity::iconinfo::Clear();
  clear_has_defense();
}
inline const ::protobuf::activity::iconinfo& OneRecord::defense() const {
  return defense_ != NULL ? *defense_ : *default_instance_->defense_;
}
inline ::protobuf::activity::iconinfo* OneRecord::mutable_defense() {
  set_has_defense();
  if (defense_ == NULL) defense_ = new ::protobuf::activity::iconinfo;
  return defense_;
}
inline ::protobuf::activity::iconinfo* OneRecord::release_defense() {
  clear_has_defense();
  ::protobuf::activity::iconinfo* temp = defense_;
  defense_ = NULL;
  return temp;
}

// repeated bool oneVictory = 3;
inline int OneRecord::onevictory_size() const {
  return onevictory_.size();
}
inline void OneRecord::clear_onevictory() {
  onevictory_.Clear();
}
inline bool OneRecord::onevictory(int index) const {
  return onevictory_.Get(index);
}
inline void OneRecord::set_onevictory(int index, bool value) {
  onevictory_.Set(index, value);
}
inline void OneRecord::add_onevictory(bool value) {
  onevictory_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
OneRecord::onevictory() const {
  return onevictory_;
}
inline ::google::protobuf::RepeatedField< bool >*
OneRecord::mutable_onevictory() {
  return &onevictory_;
}

// -------------------------------------------------------------------

// ActivityExchange

// required int32 goodId = 1;
inline bool ActivityExchange::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityExchange::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityExchange::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityExchange::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 ActivityExchange::goodid() const {
  return goodid_;
}
inline void ActivityExchange::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// repeated .protobuf.common.KVint3232 items = 2;
inline int ActivityExchange::items_size() const {
  return items_.size();
}
inline void ActivityExchange::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3232& ActivityExchange::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3232* ActivityExchange::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3232* ActivityExchange::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
ActivityExchange::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
ActivityExchange::mutable_items() {
  return &items_;
}

// optional .protobuf.common.Hero hero = 3;
inline bool ActivityExchange::has_hero() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityExchange::set_has_hero() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityExchange::clear_has_hero() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityExchange::clear_hero() {
  if (hero_ != NULL) hero_->::protobuf::common::Hero::Clear();
  clear_has_hero();
}
inline const ::protobuf::common::Hero& ActivityExchange::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::protobuf::common::Hero* ActivityExchange::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::protobuf::common::Hero;
  return hero_;
}
inline ::protobuf::common::Hero* ActivityExchange::release_hero() {
  clear_has_hero();
  ::protobuf::common::Hero* temp = hero_;
  hero_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// KingEventRequest

// required int32 goodId = 1;
inline bool KingEventRequest::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KingEventRequest::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KingEventRequest::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KingEventRequest::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 KingEventRequest::goodid() const {
  return goodid_;
}
inline void KingEventRequest::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// repeated int32 heros = 2;
inline int KingEventRequest::heros_size() const {
  return heros_.size();
}
inline void KingEventRequest::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::int32 KingEventRequest::heros(int index) const {
  return heros_.Get(index);
}
inline void KingEventRequest::set_heros(int index, ::google::protobuf::int32 value) {
  heros_.Set(index, value);
}
inline void KingEventRequest::add_heros(::google::protobuf::int32 value) {
  heros_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
KingEventRequest::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
KingEventRequest::mutable_heros() {
  return &heros_;
}

// -------------------------------------------------------------------

// SigninToTal

// optional int32 alreadyReceivedId = 1;
inline bool SigninToTal::has_alreadyreceivedid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SigninToTal::set_has_alreadyreceivedid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SigninToTal::clear_has_alreadyreceivedid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SigninToTal::clear_alreadyreceivedid() {
  alreadyreceivedid_ = 0;
  clear_has_alreadyreceivedid();
}
inline ::google::protobuf::int32 SigninToTal::alreadyreceivedid() const {
  return alreadyreceivedid_;
}
inline void SigninToTal::set_alreadyreceivedid(::google::protobuf::int32 value) {
  set_has_alreadyreceivedid();
  alreadyreceivedid_ = value;
}

// optional int32 alreadyReceivedNumber = 2;
inline bool SigninToTal::has_alreadyreceivednumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SigninToTal::set_has_alreadyreceivednumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SigninToTal::clear_has_alreadyreceivednumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SigninToTal::clear_alreadyreceivednumber() {
  alreadyreceivednumber_ = 0;
  clear_has_alreadyreceivednumber();
}
inline ::google::protobuf::int32 SigninToTal::alreadyreceivednumber() const {
  return alreadyreceivednumber_;
}
inline void SigninToTal::set_alreadyreceivednumber(::google::protobuf::int32 value) {
  set_has_alreadyreceivednumber();
  alreadyreceivednumber_ = value;
}

// optional int32 number = 3;
inline bool SigninToTal::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SigninToTal::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SigninToTal::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SigninToTal::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 SigninToTal::number() const {
  return number_;
}
inline void SigninToTal::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// KingEventReply

// repeated .protobuf.common.KVint3264 items = 1;
inline int KingEventReply::items_size() const {
  return items_.size();
}
inline void KingEventReply::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& KingEventReply::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* KingEventReply::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* KingEventReply::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
KingEventReply::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
KingEventReply::mutable_items() {
  return &items_;
}

// repeated .protobuf.common.KVint3264 heroItems = 2;
inline int KingEventReply::heroitems_size() const {
  return heroitems_.size();
}
inline void KingEventReply::clear_heroitems() {
  heroitems_.Clear();
}
inline const ::protobuf::common::KVint3264& KingEventReply::heroitems(int index) const {
  return heroitems_.Get(index);
}
inline ::protobuf::common::KVint3264* KingEventReply::mutable_heroitems(int index) {
  return heroitems_.Mutable(index);
}
inline ::protobuf::common::KVint3264* KingEventReply::add_heroitems() {
  return heroitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
KingEventReply::heroitems() const {
  return heroitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
KingEventReply::mutable_heroitems() {
  return &heroitems_;
}

// -------------------------------------------------------------------

// FirstChargeMsgReply

// optional int32 goodId = 1;
inline bool FirstChargeMsgReply::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FirstChargeMsgReply::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FirstChargeMsgReply::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FirstChargeMsgReply::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 FirstChargeMsgReply::goodid() const {
  return goodid_;
}
inline void FirstChargeMsgReply::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// optional int32 haveChargePrice = 2;
inline bool FirstChargeMsgReply::has_havechargeprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FirstChargeMsgReply::set_has_havechargeprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FirstChargeMsgReply::clear_has_havechargeprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FirstChargeMsgReply::clear_havechargeprice() {
  havechargeprice_ = 0;
  clear_has_havechargeprice();
}
inline ::google::protobuf::int32 FirstChargeMsgReply::havechargeprice() const {
  return havechargeprice_;
}
inline void FirstChargeMsgReply::set_havechargeprice(::google::protobuf::int32 value) {
  set_has_havechargeprice();
  havechargeprice_ = value;
}

// repeated .protobuf.common.KVint3264 items = 3;
inline int FirstChargeMsgReply::items_size() const {
  return items_.size();
}
inline void FirstChargeMsgReply::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& FirstChargeMsgReply::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* FirstChargeMsgReply::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* FirstChargeMsgReply::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
FirstChargeMsgReply::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
FirstChargeMsgReply::mutable_items() {
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace activity
}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_activity_2eproto__INCLUDED
