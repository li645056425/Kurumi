// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class Null;
class Boolean;
class Id32;
class opId32;
class Id64;
class IdString;
class GuideString;
class ListId32;
class KVint32string;
class KVstringstring;
class KVint3232;
class KVint3233;
class KVint3264;
class KVint6464;
class KVint32List32;
class KVint64ListKVint3232;
class KVint32ListKVint3232;
class KVint32ListKVint3264;
class KVint32List64;
class KVint32ListStr;
class ListKVint3232;
class ReplyAddItems;
class Hero;
class Equipment;
class Artifact;
class Pet;
class LineupDetail;
class KVint3234;
class LineupTemplate;
class MainPageInfo;

// ===================================================================

class Null : public ::google::protobuf::Message {
 public:
  Null();
  virtual ~Null();
  
  Null(const Null& from);
  
  inline Null& operator=(const Null& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Null& default_instance();
  
  void Swap(Null* other);
  
  // implements Message ----------------------------------------------
  
  Null* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Null& from);
  void MergeFrom(const Null& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Null)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Null* default_instance_;
};
// -------------------------------------------------------------------

class Boolean : public ::google::protobuf::Message {
 public:
  Boolean();
  virtual ~Boolean();
  
  Boolean(const Boolean& from);
  
  inline Boolean& operator=(const Boolean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Boolean& default_instance();
  
  void Swap(Boolean* other);
  
  // implements Message ----------------------------------------------
  
  Boolean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Boolean& from);
  void MergeFrom(const Boolean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool b = 1;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 1;
  inline bool b() const;
  inline void set_b(bool value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Boolean)
 private:
  inline void set_has_b();
  inline void clear_has_b();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool b_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Boolean* default_instance_;
};
// -------------------------------------------------------------------

class Id32 : public ::google::protobuf::Message {
 public:
  Id32();
  virtual ~Id32();
  
  Id32(const Id32& from);
  
  inline Id32& operator=(const Id32& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Id32& default_instance();
  
  void Swap(Id32* other);
  
  // implements Message ----------------------------------------------
  
  Id32* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Id32& from);
  void MergeFrom(const Id32& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string guidev = 3;
  inline bool has_guidev() const;
  inline void clear_guidev();
  static const int kGuidevFieldNumber = 3;
  inline const ::std::string& guidev() const;
  inline void set_guidev(const ::std::string& value);
  inline void set_guidev(const char* value);
  inline void set_guidev(const char* value, size_t size);
  inline ::std::string* mutable_guidev();
  inline ::std::string* release_guidev();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Id32)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_guidev();
  inline void clear_has_guidev();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guidev_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Id32* default_instance_;
};
// -------------------------------------------------------------------

class opId32 : public ::google::protobuf::Message {
 public:
  opId32();
  virtual ~opId32();
  
  opId32(const opId32& from);
  
  inline opId32& operator=(const opId32& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const opId32& default_instance();
  
  void Swap(opId32* other);
  
  // implements Message ----------------------------------------------
  
  opId32* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const opId32& from);
  void MergeFrom(const opId32& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.opId32)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static opId32* default_instance_;
};
// -------------------------------------------------------------------

class Id64 : public ::google::protobuf::Message {
 public:
  Id64();
  virtual ~Id64();
  
  Id64(const Id64& from);
  
  inline Id64& operator=(const Id64& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Id64& default_instance();
  
  void Swap(Id64* other);
  
  // implements Message ----------------------------------------------
  
  Id64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Id64& from);
  void MergeFrom(const Id64& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Id64)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Id64* default_instance_;
};
// -------------------------------------------------------------------

class IdString : public ::google::protobuf::Message {
 public:
  IdString();
  virtual ~IdString();
  
  IdString(const IdString& from);
  
  inline IdString& operator=(const IdString& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdString& default_instance();
  
  void Swap(IdString* other);
  
  // implements Message ----------------------------------------------
  
  IdString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdString& from);
  void MergeFrom(const IdString& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  
  // optional int32 serverId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);
  
  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.IdString)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* id_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static IdString* default_instance_;
};
// -------------------------------------------------------------------

class GuideString : public ::google::protobuf::Message {
 public:
  GuideString();
  virtual ~GuideString();
  
  GuideString(const GuideString& from);
  
  inline GuideString& operator=(const GuideString& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideString& default_instance();
  
  void Swap(GuideString* other);
  
  // implements Message ----------------------------------------------
  
  GuideString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideString& from);
  void MergeFrom(const GuideString& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string guidev = 3;
  inline bool has_guidev() const;
  inline void clear_guidev();
  static const int kGuidevFieldNumber = 3;
  inline const ::std::string& guidev() const;
  inline void set_guidev(const ::std::string& value);
  inline void set_guidev(const char* value);
  inline void set_guidev(const char* value, size_t size);
  inline ::std::string* mutable_guidev();
  inline ::std::string* release_guidev();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.GuideString)
 private:
  inline void set_has_guidev();
  inline void clear_has_guidev();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guidev_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static GuideString* default_instance_;
};
// -------------------------------------------------------------------

class ListId32 : public ::google::protobuf::Message {
 public:
  ListId32();
  virtual ~ListId32();
  
  ListId32(const ListId32& from);
  
  inline ListId32& operator=(const ListId32& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListId32& default_instance();
  
  void Swap(ListId32* other);
  
  // implements Message ----------------------------------------------
  
  ListId32* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListId32& from);
  void MergeFrom(const ListId32& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();
  
  // optional string guidev = 3;
  inline bool has_guidev() const;
  inline void clear_guidev();
  static const int kGuidevFieldNumber = 3;
  inline const ::std::string& guidev() const;
  inline void set_guidev(const ::std::string& value);
  inline void set_guidev(const char* value);
  inline void set_guidev(const char* value, size_t size);
  inline ::std::string* mutable_guidev();
  inline ::std::string* release_guidev();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.ListId32)
 private:
  inline void set_has_guidev();
  inline void clear_has_guidev();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::std::string* guidev_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static ListId32* default_instance_;
};
// -------------------------------------------------------------------

class KVint32string : public ::google::protobuf::Message {
 public:
  KVint32string();
  virtual ~KVint32string();
  
  KVint32string(const KVint32string& from);
  
  inline KVint32string& operator=(const KVint32string& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32string& default_instance();
  
  void Swap(KVint32string* other);
  
  // implements Message ----------------------------------------------
  
  KVint32string* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32string& from);
  void MergeFrom(const KVint32string& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // optional int32 serverId = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32string)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* value_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 serverid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32string* default_instance_;
};
// -------------------------------------------------------------------

class KVstringstring : public ::google::protobuf::Message {
 public:
  KVstringstring();
  virtual ~KVstringstring();
  
  KVstringstring(const KVstringstring& from);
  
  inline KVstringstring& operator=(const KVstringstring& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVstringstring& default_instance();
  
  void Swap(KVstringstring* other);
  
  // implements Message ----------------------------------------------
  
  KVstringstring* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVstringstring& from);
  void MergeFrom(const KVstringstring& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVstringstring)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* id_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVstringstring* default_instance_;
};
// -------------------------------------------------------------------

class KVint3232 : public ::google::protobuf::Message {
 public:
  KVint3232();
  virtual ~KVint3232();
  
  KVint3232(const KVint3232& from);
  
  inline KVint3232& operator=(const KVint3232& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint3232& default_instance();
  
  void Swap(KVint3232* other);
  
  // implements Message ----------------------------------------------
  
  KVint3232* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint3232& from);
  void MergeFrom(const KVint3232& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint3232)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint3232* default_instance_;
};
// -------------------------------------------------------------------

class KVint3233 : public ::google::protobuf::Message {
 public:
  KVint3233();
  virtual ~KVint3233();
  
  KVint3233(const KVint3233& from);
  
  inline KVint3233& operator=(const KVint3233& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint3233& default_instance();
  
  void Swap(KVint3233* other);
  
  // implements Message ----------------------------------------------
  
  KVint3233* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint3233& from);
  void MergeFrom(const KVint3233& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // required int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 sit = 4;
  inline bool has_sit() const;
  inline void clear_sit();
  static const int kSitFieldNumber = 4;
  inline ::google::protobuf::int32 sit() const;
  inline void set_sit(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint3233)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sit();
  inline void clear_has_sit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 sit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint3233* default_instance_;
};
// -------------------------------------------------------------------

class KVint3264 : public ::google::protobuf::Message {
 public:
  KVint3264();
  virtual ~KVint3264();
  
  KVint3264(const KVint3264& from);
  
  inline KVint3264& operator=(const KVint3264& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint3264& default_instance();
  
  void Swap(KVint3264* other);
  
  // implements Message ----------------------------------------------
  
  KVint3264* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint3264& from);
  void MergeFrom(const KVint3264& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint3264)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint3264* default_instance_;
};
// -------------------------------------------------------------------

class KVint6464 : public ::google::protobuf::Message {
 public:
  KVint6464();
  virtual ~KVint6464();
  
  KVint6464(const KVint6464& from);
  
  inline KVint6464& operator=(const KVint6464& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint6464& default_instance();
  
  void Swap(KVint6464* other);
  
  // implements Message ----------------------------------------------
  
  KVint6464* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint6464& from);
  void MergeFrom(const KVint6464& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);
  
  // required int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint6464)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 key_;
  ::google::protobuf::int64 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint6464* default_instance_;
};
// -------------------------------------------------------------------

class KVint32List32 : public ::google::protobuf::Message {
 public:
  KVint32List32();
  virtual ~KVint32List32();
  
  KVint32List32(const KVint32List32& from);
  
  inline KVint32List32& operator=(const KVint32List32& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32List32& default_instance();
  
  void Swap(KVint32List32* other);
  
  // implements Message ----------------------------------------------
  
  KVint32List32* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32List32& from);
  void MergeFrom(const KVint32List32& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // repeated int32 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline ::google::protobuf::int32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::int32 value);
  inline void add_values(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();
  
  // optional string guidev = 3;
  inline bool has_guidev() const;
  inline void clear_guidev();
  static const int kGuidevFieldNumber = 3;
  inline const ::std::string& guidev() const;
  inline void set_guidev(const ::std::string& value);
  inline void set_guidev(const char* value);
  inline void set_guidev(const char* value, size_t size);
  inline ::std::string* mutable_guidev();
  inline ::std::string* release_guidev();
  
  // optional bool isOpen = 10;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 10;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32List32)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_guidev();
  inline void clear_has_guidev();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  ::google::protobuf::int32 key_;
  bool isopen_;
  ::std::string* guidev_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32List32* default_instance_;
};
// -------------------------------------------------------------------

class KVint64ListKVint3232 : public ::google::protobuf::Message {
 public:
  KVint64ListKVint3232();
  virtual ~KVint64ListKVint3232();
  
  KVint64ListKVint3232(const KVint64ListKVint3232& from);
  
  inline KVint64ListKVint3232& operator=(const KVint64ListKVint3232& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint64ListKVint3232& default_instance();
  
  void Swap(KVint64ListKVint3232* other);
  
  // implements Message ----------------------------------------------
  
  KVint64ListKVint3232* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint64ListKVint3232& from);
  void MergeFrom(const KVint64ListKVint3232& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);
  
  // repeated .protobuf.common.KVint3232 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::protobuf::common::KVint3232& values(int index) const;
  inline ::protobuf::common::KVint3232* mutable_values(int index);
  inline ::protobuf::common::KVint3232* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint64ListKVint3232)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 key_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint64ListKVint3232* default_instance_;
};
// -------------------------------------------------------------------

class KVint32ListKVint3232 : public ::google::protobuf::Message {
 public:
  KVint32ListKVint3232();
  virtual ~KVint32ListKVint3232();
  
  KVint32ListKVint3232(const KVint32ListKVint3232& from);
  
  inline KVint32ListKVint3232& operator=(const KVint32ListKVint3232& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32ListKVint3232& default_instance();
  
  void Swap(KVint32ListKVint3232* other);
  
  // implements Message ----------------------------------------------
  
  KVint32ListKVint3232* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32ListKVint3232& from);
  void MergeFrom(const KVint32ListKVint3232& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3232 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::protobuf::common::KVint3232& values(int index) const;
  inline ::protobuf::common::KVint3232* mutable_values(int index);
  inline ::protobuf::common::KVint3232* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32ListKVint3232)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > values_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32ListKVint3232* default_instance_;
};
// -------------------------------------------------------------------

class KVint32ListKVint3264 : public ::google::protobuf::Message {
 public:
  KVint32ListKVint3264();
  virtual ~KVint32ListKVint3264();
  
  KVint32ListKVint3264(const KVint32ListKVint3264& from);
  
  inline KVint32ListKVint3264& operator=(const KVint32ListKVint3264& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32ListKVint3264& default_instance();
  
  void Swap(KVint32ListKVint3264* other);
  
  // implements Message ----------------------------------------------
  
  KVint32ListKVint3264* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32ListKVint3264& from);
  void MergeFrom(const KVint32ListKVint3264& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint3264 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::protobuf::common::KVint3264& values(int index) const;
  inline ::protobuf::common::KVint3264* mutable_values(int index);
  inline ::protobuf::common::KVint3264* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32ListKVint3264)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > values_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32ListKVint3264* default_instance_;
};
// -------------------------------------------------------------------

class KVint32List64 : public ::google::protobuf::Message {
 public:
  KVint32List64();
  virtual ~KVint32List64();
  
  KVint32List64(const KVint32List64& from);
  
  inline KVint32List64& operator=(const KVint32List64& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32List64& default_instance();
  
  void Swap(KVint32List64* other);
  
  // implements Message ----------------------------------------------
  
  KVint32List64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32List64& from);
  void MergeFrom(const KVint32List64& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // repeated int64 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline ::google::protobuf::int64 values(int index) const;
  inline void set_values(int index, ::google::protobuf::int64 value);
  inline void add_values(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32List64)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > values_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32List64* default_instance_;
};
// -------------------------------------------------------------------

class KVint32ListStr : public ::google::protobuf::Message {
 public:
  KVint32ListStr();
  virtual ~KVint32ListStr();
  
  KVint32ListStr(const KVint32ListStr& from);
  
  inline KVint32ListStr& operator=(const KVint32ListStr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint32ListStr& default_instance();
  
  void Swap(KVint32ListStr* other);
  
  // implements Message ----------------------------------------------
  
  KVint32ListStr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint32ListStr& from);
  void MergeFrom(const KVint32ListStr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // repeated string values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::std::string& values(int index) const;
  inline ::std::string* mutable_values(int index);
  inline void set_values(int index, const ::std::string& value);
  inline void set_values(int index, const char* value);
  inline void set_values(int index, const char* value, size_t size);
  inline ::std::string* add_values();
  inline void add_values(const ::std::string& value);
  inline void add_values(const char* value);
  inline void add_values(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint32ListStr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint32ListStr* default_instance_;
};
// -------------------------------------------------------------------

class ListKVint3232 : public ::google::protobuf::Message {
 public:
  ListKVint3232();
  virtual ~ListKVint3232();
  
  ListKVint3232(const ListKVint3232& from);
  
  inline ListKVint3232& operator=(const ListKVint3232& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListKVint3232& default_instance();
  
  void Swap(ListKVint3232* other);
  
  // implements Message ----------------------------------------------
  
  ListKVint3232* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListKVint3232& from);
  void MergeFrom(const ListKVint3232& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.common.KVint3232 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::protobuf::common::KVint3232& id(int index) const;
  inline ::protobuf::common::KVint3232* mutable_id(int index);
  inline ::protobuf::common::KVint3232* add_id();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      id() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_id();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.ListKVint3232)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static ListKVint3232* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAddItems : public ::google::protobuf::Message {
 public:
  ReplyAddItems();
  virtual ~ReplyAddItems();
  
  ReplyAddItems(const ReplyAddItems& from);
  
  inline ReplyAddItems& operator=(const ReplyAddItems& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAddItems& default_instance();
  
  void Swap(ReplyAddItems* other);
  
  // implements Message ----------------------------------------------
  
  ReplyAddItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAddItems& from);
  void MergeFrom(const ReplyAddItems& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.common.KVint3264 items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::protobuf::common::KVint3264& items(int index) const;
  inline ::protobuf::common::KVint3264* mutable_items(int index);
  inline ::protobuf::common::KVint3264* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.ReplyAddItems)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static ReplyAddItems* default_instance_;
};
// -------------------------------------------------------------------

class Hero : public ::google::protobuf::Message {
 public:
  Hero();
  virtual ~Hero();
  
  Hero(const Hero& from);
  
  inline Hero& operator=(const Hero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Hero& default_instance();
  
  void Swap(Hero* other);
  
  // implements Message ----------------------------------------------
  
  Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hero& from);
  void MergeFrom(const Hero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 heroId = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);
  
  // required int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);
  
  // required int32 tier = 5;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 5;
  inline ::google::protobuf::int32 tier() const;
  inline void set_tier(::google::protobuf::int32 value);
  
  // optional .protobuf.common.Equipment equipment = 6;
  inline bool has_equipment() const;
  inline void clear_equipment();
  static const int kEquipmentFieldNumber = 6;
  inline const ::protobuf::common::Equipment& equipment() const;
  inline ::protobuf::common::Equipment* mutable_equipment();
  inline ::protobuf::common::Equipment* release_equipment();
  
  // optional bool lock = 7;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 7;
  inline bool lock() const;
  inline void set_lock(bool value);
  
  // optional int32 lastHp = 8;
  inline bool has_lasthp() const;
  inline void clear_lasthp();
  static const int kLastHpFieldNumber = 8;
  inline ::google::protobuf::int32 lasthp() const;
  inline void set_lasthp(::google::protobuf::int32 value);
  
  // optional int32 skin = 9;
  inline bool has_skin() const;
  inline void clear_skin();
  static const int kSkinFieldNumber = 9;
  inline ::google::protobuf::int32 skin() const;
  inline void set_skin(::google::protobuf::int32 value);
  
  // optional bool isHideSkin = 10;
  inline bool has_ishideskin() const;
  inline void clear_ishideskin();
  static const int kIsHideSkinFieldNumber = 10;
  inline bool ishideskin() const;
  inline void set_ishideskin(bool value);
  
  // optional int32 resonanceLv = 11;
  inline bool has_resonancelv() const;
  inline void clear_resonancelv();
  static const int kResonanceLvFieldNumber = 11;
  inline ::google::protobuf::int32 resonancelv() const;
  inline void set_resonancelv(::google::protobuf::int32 value);
  
  // optional int32 lastEnergy = 12;
  inline bool has_lastenergy() const;
  inline void clear_lastenergy();
  static const int kLastEnergyFieldNumber = 12;
  inline ::google::protobuf::int32 lastenergy() const;
  inline void set_lastenergy(::google::protobuf::int32 value);
  
  // optional bool isHelpHero = 13;
  inline bool has_ishelphero() const;
  inline void clear_ishelphero();
  static const int kIsHelpHeroFieldNumber = 13;
  inline bool ishelphero() const;
  inline void set_ishelphero(bool value);
  
  // optional int32 power = 14;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 14;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Hero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_equipment();
  inline void clear_has_equipment();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_lasthp();
  inline void clear_has_lasthp();
  inline void set_has_skin();
  inline void clear_has_skin();
  inline void set_has_ishideskin();
  inline void clear_has_ishideskin();
  inline void set_has_resonancelv();
  inline void clear_has_resonancelv();
  inline void set_has_lastenergy();
  inline void clear_has_lastenergy();
  inline void set_has_ishelphero();
  inline void clear_has_ishelphero();
  inline void set_has_power();
  inline void clear_has_power();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 tier_;
  ::protobuf::common::Equipment* equipment_;
  ::google::protobuf::int32 lasthp_;
  ::google::protobuf::int32 skin_;
  bool lock_;
  bool ishideskin_;
  bool ishelphero_;
  ::google::protobuf::int32 resonancelv_;
  ::google::protobuf::int32 lastenergy_;
  ::google::protobuf::int32 power_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Hero* default_instance_;
};
// -------------------------------------------------------------------

class Equipment : public ::google::protobuf::Message {
 public:
  Equipment();
  virtual ~Equipment();
  
  Equipment(const Equipment& from);
  
  inline Equipment& operator=(const Equipment& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Equipment& default_instance();
  
  void Swap(Equipment* other);
  
  // implements Message ----------------------------------------------
  
  Equipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Equipment& from);
  void MergeFrom(const Equipment& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 part_1 = 1;
  inline bool has_part_1() const;
  inline void clear_part_1();
  static const int kPart1FieldNumber = 1;
  inline ::google::protobuf::int32 part_1() const;
  inline void set_part_1(::google::protobuf::int32 value);
  
  // required int32 part_2 = 2;
  inline bool has_part_2() const;
  inline void clear_part_2();
  static const int kPart2FieldNumber = 2;
  inline ::google::protobuf::int32 part_2() const;
  inline void set_part_2(::google::protobuf::int32 value);
  
  // required int32 part_3 = 3;
  inline bool has_part_3() const;
  inline void clear_part_3();
  static const int kPart3FieldNumber = 3;
  inline ::google::protobuf::int32 part_3() const;
  inline void set_part_3(::google::protobuf::int32 value);
  
  // required int32 part_4 = 4;
  inline bool has_part_4() const;
  inline void clear_part_4();
  static const int kPart4FieldNumber = 4;
  inline ::google::protobuf::int32 part_4() const;
  inline void set_part_4(::google::protobuf::int32 value);
  
  // required int32 part_5 = 5;
  inline bool has_part_5() const;
  inline void clear_part_5();
  static const int kPart5FieldNumber = 5;
  inline ::google::protobuf::int32 part_5() const;
  inline void set_part_5(::google::protobuf::int32 value);
  
  // required int32 part_6 = 6;
  inline bool has_part_6() const;
  inline void clear_part_6();
  static const int kPart6FieldNumber = 6;
  inline ::google::protobuf::int32 part_6() const;
  inline void set_part_6(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.Artifact artifact = 9;
  inline int artifact_size() const;
  inline void clear_artifact();
  static const int kArtifactFieldNumber = 9;
  inline const ::protobuf::common::Artifact& artifact(int index) const;
  inline ::protobuf::common::Artifact* mutable_artifact(int index);
  inline ::protobuf::common::Artifact* add_artifact();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::Artifact >&
      artifact() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::Artifact >*
      mutable_artifact();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Equipment)
 private:
  inline void set_has_part_1();
  inline void clear_has_part_1();
  inline void set_has_part_2();
  inline void clear_has_part_2();
  inline void set_has_part_3();
  inline void clear_has_part_3();
  inline void set_has_part_4();
  inline void clear_has_part_4();
  inline void set_has_part_5();
  inline void clear_has_part_5();
  inline void set_has_part_6();
  inline void clear_has_part_6();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 part_1_;
  ::google::protobuf::int32 part_2_;
  ::google::protobuf::int32 part_3_;
  ::google::protobuf::int32 part_4_;
  ::google::protobuf::int32 part_5_;
  ::google::protobuf::int32 part_6_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::Artifact > artifact_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Equipment* default_instance_;
};
// -------------------------------------------------------------------

class Artifact : public ::google::protobuf::Message {
 public:
  Artifact();
  virtual ~Artifact();
  
  Artifact(const Artifact& from);
  
  inline Artifact& operator=(const Artifact& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Artifact& default_instance();
  
  void Swap(Artifact* other);
  
  // implements Message ----------------------------------------------
  
  Artifact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Artifact& from);
  void MergeFrom(const Artifact& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required int32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);
  
  // repeated .protobuf.common.KVint32string attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::protobuf::common::KVint32string& attribute(int index) const;
  inline ::protobuf::common::KVint32string* mutable_attribute(int index);
  inline ::protobuf::common::KVint32string* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint32string >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint32string >*
      mutable_attribute();
  
  // required int32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Artifact)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_lv();
  inline void clear_has_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint32string > attribute_;
  ::google::protobuf::int32 lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Artifact* default_instance_;
};
// -------------------------------------------------------------------

class Pet : public ::google::protobuf::Message {
 public:
  Pet();
  virtual ~Pet();
  
  Pet(const Pet& from);
  
  inline Pet& operator=(const Pet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pet& default_instance();
  
  void Swap(Pet* other);
  
  // implements Message ----------------------------------------------
  
  Pet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pet& from);
  void MergeFrom(const Pet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 tier = 2;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 2;
  inline ::google::protobuf::int32 tier() const;
  inline void set_tier(::google::protobuf::int32 value);
  
  // required int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);
  
  // repeated int32 skillLv = 4;
  inline int skilllv_size() const;
  inline void clear_skilllv();
  static const int kSkillLvFieldNumber = 4;
  inline ::google::protobuf::int32 skilllv(int index) const;
  inline void set_skilllv(int index, ::google::protobuf::int32 value);
  inline void add_skilllv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skilllv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skilllv();
  
  // @@protoc_insertion_point(class_scope:protobuf.common.Pet)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_lv();
  inline void clear_has_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 tier_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skilllv_;
  ::google::protobuf::int32 lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static Pet* default_instance_;
};
// -------------------------------------------------------------------

class LineupDetail : public ::google::protobuf::Message {
 public:
  LineupDetail();
  virtual ~LineupDetail();
  
  LineupDetail(const LineupDetail& from);
  
  inline LineupDetail& operator=(const LineupDetail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LineupDetail& default_instance();
  
  void Swap(LineupDetail* other);
  
  // implements Message ----------------------------------------------
  
  LineupDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineupDetail& from);
  void MergeFrom(const LineupDetail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.common.Hero heros = 1;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 1;
  inline const ::protobuf::common::Hero& heros(int index) const;
  inline ::protobuf::common::Hero* mutable_heros(int index);
  inline ::protobuf::common::Hero* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::Hero >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::Hero >*
      mutable_heros();
  
  // repeated .protobuf.common.KVint3232 science = 2;
  inline int science_size() const;
  inline void clear_science();
  static const int kScienceFieldNumber = 2;
  inline const ::protobuf::common::KVint3232& science(int index) const;
  inline ::protobuf::common::KVint3232* mutable_science(int index);
  inline ::protobuf::common::KVint3232* add_science();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
      science() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
      mutable_science();
  
  // optional int32 power = 5;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 5;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.LineupDetail)
 private:
  inline void set_has_power();
  inline void clear_has_power();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::Hero > heros_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 > science_;
  ::google::protobuf::int32 power_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static LineupDetail* default_instance_;
};
// -------------------------------------------------------------------

class KVint3234 : public ::google::protobuf::Message {
 public:
  KVint3234();
  virtual ~KVint3234();
  
  KVint3234(const KVint3234& from);
  
  inline KVint3234& operator=(const KVint3234& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KVint3234& default_instance();
  
  void Swap(KVint3234* other);
  
  // implements Message ----------------------------------------------
  
  KVint3234* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVint3234& from);
  void MergeFrom(const KVint3234& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 percent = 3;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 3;
  inline ::google::protobuf::int32 percent() const;
  inline void set_percent(::google::protobuf::int32 value);
  
  // required int32 isguide = 4;
  inline bool has_isguide() const;
  inline void clear_isguide();
  static const int kIsguideFieldNumber = 4;
  inline ::google::protobuf::int32 isguide() const;
  inline void set_isguide(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.KVint3234)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_isguide();
  inline void clear_has_isguide();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 percent_;
  ::google::protobuf::int32 isguide_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static KVint3234* default_instance_;
};
// -------------------------------------------------------------------

class LineupTemplate : public ::google::protobuf::Message {
 public:
  LineupTemplate();
  virtual ~LineupTemplate();
  
  LineupTemplate(const LineupTemplate& from);
  
  inline LineupTemplate& operator=(const LineupTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LineupTemplate& default_instance();
  
  void Swap(LineupTemplate* other);
  
  // implements Message ----------------------------------------------
  
  LineupTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineupTemplate& from);
  void MergeFrom(const LineupTemplate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated int32 heros = 2;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 2;
  inline ::google::protobuf::int32 heros(int index) const;
  inline void set_heros(int index, ::google::protobuf::int32 value);
  inline void add_heros(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      heros() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_heros();
  
  // required int32 power = 4;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 4;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);
  
  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.LineupTemplate)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heros_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static LineupTemplate* default_instance_;
};
// -------------------------------------------------------------------

class MainPageInfo : public ::google::protobuf::Message {
 public:
  MainPageInfo();
  virtual ~MainPageInfo();
  
  MainPageInfo(const MainPageInfo& from);
  
  inline MainPageInfo& operator=(const MainPageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MainPageInfo& default_instance();
  
  void Swap(MainPageInfo* other);
  
  // implements Message ----------------------------------------------
  
  MainPageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainPageInfo& from);
  void MergeFrom(const MainPageInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.common.MainPageInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();
  
  void InitAsDefaultInstance();
  static MainPageInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// Null

// -------------------------------------------------------------------

// Boolean

// required bool b = 1;
inline bool Boolean::has_b() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Boolean::set_has_b() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Boolean::clear_has_b() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Boolean::clear_b() {
  b_ = false;
  clear_has_b();
}
inline bool Boolean::b() const {
  return b_;
}
inline void Boolean::set_b(bool value) {
  set_has_b();
  b_ = value;
}

// -------------------------------------------------------------------

// Id32

// required int32 id = 1;
inline bool Id32::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Id32::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Id32::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Id32::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Id32::id() const {
  return id_;
}
inline void Id32::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string guidev = 3;
inline bool Id32::has_guidev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Id32::set_has_guidev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Id32::clear_has_guidev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Id32::clear_guidev() {
  if (guidev_ != &::google::protobuf::internal::kEmptyString) {
    guidev_->clear();
  }
  clear_has_guidev();
}
inline const ::std::string& Id32::guidev() const {
  return *guidev_;
}
inline void Id32::set_guidev(const ::std::string& value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void Id32::set_guidev(const char* value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void Id32::set_guidev(const char* value, size_t size) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Id32::mutable_guidev() {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  return guidev_;
}
inline ::std::string* Id32::release_guidev() {
  clear_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guidev_;
    guidev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// opId32

// optional int32 id = 1;
inline bool opId32::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void opId32::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void opId32::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void opId32::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 opId32::id() const {
  return id_;
}
inline void opId32::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Id64

// required int64 id = 1;
inline bool Id64::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Id64::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Id64::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Id64::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Id64::id() const {
  return id_;
}
inline void Id64::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// IdString

// required string id = 1;
inline bool IdString::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdString::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IdString::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IdString::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& IdString::id() const {
  return *id_;
}
inline void IdString::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void IdString::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void IdString::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IdString::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* IdString::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 serverId = 2;
inline bool IdString::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IdString::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IdString::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IdString::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 IdString::serverid() const {
  return serverid_;
}
inline void IdString::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// optional int32 type = 3;
inline bool IdString::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IdString::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IdString::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IdString::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 IdString::type() const {
  return type_;
}
inline void IdString::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GuideString

// optional string guidev = 3;
inline bool GuideString::has_guidev() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideString::set_has_guidev() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideString::clear_has_guidev() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideString::clear_guidev() {
  if (guidev_ != &::google::protobuf::internal::kEmptyString) {
    guidev_->clear();
  }
  clear_has_guidev();
}
inline const ::std::string& GuideString::guidev() const {
  return *guidev_;
}
inline void GuideString::set_guidev(const ::std::string& value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void GuideString::set_guidev(const char* value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void GuideString::set_guidev(const char* value, size_t size) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuideString::mutable_guidev() {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  return guidev_;
}
inline ::std::string* GuideString::release_guidev() {
  clear_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guidev_;
    guidev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ListId32

// repeated int32 id = 1;
inline int ListId32::id_size() const {
  return id_.size();
}
inline void ListId32::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 ListId32::id(int index) const {
  return id_.Get(index);
}
inline void ListId32::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void ListId32::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListId32::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListId32::mutable_id() {
  return &id_;
}

// optional string guidev = 3;
inline bool ListId32::has_guidev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ListId32::set_has_guidev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ListId32::clear_has_guidev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ListId32::clear_guidev() {
  if (guidev_ != &::google::protobuf::internal::kEmptyString) {
    guidev_->clear();
  }
  clear_has_guidev();
}
inline const ::std::string& ListId32::guidev() const {
  return *guidev_;
}
inline void ListId32::set_guidev(const ::std::string& value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void ListId32::set_guidev(const char* value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void ListId32::set_guidev(const char* value, size_t size) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ListId32::mutable_guidev() {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  return guidev_;
}
inline ::std::string* ListId32::release_guidev() {
  clear_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guidev_;
    guidev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// KVint32string

// required int32 id = 1;
inline bool KVint32string::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32string::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32string::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32string::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 KVint32string::id() const {
  return id_;
}
inline void KVint32string::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required string value = 2;
inline bool KVint32string::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint32string::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint32string::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint32string::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& KVint32string::value() const {
  return *value_;
}
inline void KVint32string::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KVint32string::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KVint32string::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KVint32string::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* KVint32string::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 serverId = 3;
inline bool KVint32string::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVint32string::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVint32string::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVint32string::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 KVint32string::serverid() const {
  return serverid_;
}
inline void KVint32string::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// KVstringstring

// required string id = 1;
inline bool KVstringstring::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVstringstring::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVstringstring::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVstringstring::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& KVstringstring::id() const {
  return *id_;
}
inline void KVstringstring::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void KVstringstring::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void KVstringstring::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KVstringstring::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* KVstringstring::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string value = 2;
inline bool KVstringstring::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVstringstring::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVstringstring::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVstringstring::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& KVstringstring::value() const {
  return *value_;
}
inline void KVstringstring::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KVstringstring::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KVstringstring::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KVstringstring::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* KVstringstring::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// KVint3232

// required int32 key = 1;
inline bool KVint3232::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint3232::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint3232::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint3232::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint3232::key() const {
  return key_;
}
inline void KVint3232::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 value = 2;
inline bool KVint3232::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint3232::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint3232::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint3232::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 KVint3232::value() const {
  return value_;
}
inline void KVint3232::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// KVint3233

// required int32 key = 1;
inline bool KVint3233::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint3233::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint3233::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint3233::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint3233::key() const {
  return key_;
}
inline void KVint3233::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 value = 2;
inline bool KVint3233::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint3233::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint3233::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint3233::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 KVint3233::value() const {
  return value_;
}
inline void KVint3233::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// required int32 type = 3;
inline bool KVint3233::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVint3233::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVint3233::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVint3233::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 KVint3233::type() const {
  return type_;
}
inline void KVint3233::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 sit = 4;
inline bool KVint3233::has_sit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KVint3233::set_has_sit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KVint3233::clear_has_sit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KVint3233::clear_sit() {
  sit_ = 0;
  clear_has_sit();
}
inline ::google::protobuf::int32 KVint3233::sit() const {
  return sit_;
}
inline void KVint3233::set_sit(::google::protobuf::int32 value) {
  set_has_sit();
  sit_ = value;
}

// -------------------------------------------------------------------

// KVint3264

// required int32 key = 1;
inline bool KVint3264::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint3264::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint3264::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint3264::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint3264::key() const {
  return key_;
}
inline void KVint3264::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int64 value = 2;
inline bool KVint3264::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint3264::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint3264::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint3264::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 KVint3264::value() const {
  return value_;
}
inline void KVint3264::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// KVint6464

// required int64 key = 1;
inline bool KVint6464::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint6464::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint6464::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint6464::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 KVint6464::key() const {
  return key_;
}
inline void KVint6464::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
}

// required int64 value = 2;
inline bool KVint6464::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint6464::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint6464::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint6464::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 KVint6464::value() const {
  return value_;
}
inline void KVint6464::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// KVint32List32

// required int32 key = 1;
inline bool KVint32List32::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32List32::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32List32::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32List32::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint32List32::key() const {
  return key_;
}
inline void KVint32List32::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// repeated int32 values = 2;
inline int KVint32List32::values_size() const {
  return values_.size();
}
inline void KVint32List32::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 KVint32List32::values(int index) const {
  return values_.Get(index);
}
inline void KVint32List32::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
}
inline void KVint32List32::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
KVint32List32::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
KVint32List32::mutable_values() {
  return &values_;
}

// optional string guidev = 3;
inline bool KVint32List32::has_guidev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVint32List32::set_has_guidev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVint32List32::clear_has_guidev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVint32List32::clear_guidev() {
  if (guidev_ != &::google::protobuf::internal::kEmptyString) {
    guidev_->clear();
  }
  clear_has_guidev();
}
inline const ::std::string& KVint32List32::guidev() const {
  return *guidev_;
}
inline void KVint32List32::set_guidev(const ::std::string& value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void KVint32List32::set_guidev(const char* value) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(value);
}
inline void KVint32List32::set_guidev(const char* value, size_t size) {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  guidev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KVint32List32::mutable_guidev() {
  set_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    guidev_ = new ::std::string;
  }
  return guidev_;
}
inline ::std::string* KVint32List32::release_guidev() {
  clear_has_guidev();
  if (guidev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guidev_;
    guidev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool isOpen = 10;
inline bool KVint32List32::has_isopen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KVint32List32::set_has_isopen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KVint32List32::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KVint32List32::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool KVint32List32::isopen() const {
  return isopen_;
}
inline void KVint32List32::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// KVint64ListKVint3232

// required int64 key = 1;
inline bool KVint64ListKVint3232::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint64ListKVint3232::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint64ListKVint3232::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint64ListKVint3232::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 KVint64ListKVint3232::key() const {
  return key_;
}
inline void KVint64ListKVint3232::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
}

// repeated .protobuf.common.KVint3232 values = 2;
inline int KVint64ListKVint3232::values_size() const {
  return values_.size();
}
inline void KVint64ListKVint3232::clear_values() {
  values_.Clear();
}
inline const ::protobuf::common::KVint3232& KVint64ListKVint3232::values(int index) const {
  return values_.Get(index);
}
inline ::protobuf::common::KVint3232* KVint64ListKVint3232::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::protobuf::common::KVint3232* KVint64ListKVint3232::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
KVint64ListKVint3232::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
KVint64ListKVint3232::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// KVint32ListKVint3232

// required int32 key = 1;
inline bool KVint32ListKVint3232::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32ListKVint3232::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32ListKVint3232::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32ListKVint3232::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint32ListKVint3232::key() const {
  return key_;
}
inline void KVint32ListKVint3232::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// repeated .protobuf.common.KVint3232 values = 2;
inline int KVint32ListKVint3232::values_size() const {
  return values_.size();
}
inline void KVint32ListKVint3232::clear_values() {
  values_.Clear();
}
inline const ::protobuf::common::KVint3232& KVint32ListKVint3232::values(int index) const {
  return values_.Get(index);
}
inline ::protobuf::common::KVint3232* KVint32ListKVint3232::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::protobuf::common::KVint3232* KVint32ListKVint3232::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
KVint32ListKVint3232::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
KVint32ListKVint3232::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// KVint32ListKVint3264

// required int32 key = 1;
inline bool KVint32ListKVint3264::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32ListKVint3264::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32ListKVint3264::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32ListKVint3264::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint32ListKVint3264::key() const {
  return key_;
}
inline void KVint32ListKVint3264::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// repeated .protobuf.common.KVint3264 values = 2;
inline int KVint32ListKVint3264::values_size() const {
  return values_.size();
}
inline void KVint32ListKVint3264::clear_values() {
  values_.Clear();
}
inline const ::protobuf::common::KVint3264& KVint32ListKVint3264::values(int index) const {
  return values_.Get(index);
}
inline ::protobuf::common::KVint3264* KVint32ListKVint3264::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::protobuf::common::KVint3264* KVint32ListKVint3264::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
KVint32ListKVint3264::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
KVint32ListKVint3264::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// KVint32List64

// required int32 key = 1;
inline bool KVint32List64::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32List64::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32List64::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32List64::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint32List64::key() const {
  return key_;
}
inline void KVint32List64::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// repeated int64 values = 2;
inline int KVint32List64::values_size() const {
  return values_.size();
}
inline void KVint32List64::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int64 KVint32List64::values(int index) const {
  return values_.Get(index);
}
inline void KVint32List64::set_values(int index, ::google::protobuf::int64 value) {
  values_.Set(index, value);
}
inline void KVint32List64::add_values(::google::protobuf::int64 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
KVint32List64::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
KVint32List64::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// KVint32ListStr

// required int32 key = 1;
inline bool KVint32ListStr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint32ListStr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint32ListStr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint32ListStr::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint32ListStr::key() const {
  return key_;
}
inline void KVint32ListStr::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// repeated string values = 2;
inline int KVint32ListStr::values_size() const {
  return values_.size();
}
inline void KVint32ListStr::clear_values() {
  values_.Clear();
}
inline const ::std::string& KVint32ListStr::values(int index) const {
  return values_.Get(index);
}
inline ::std::string* KVint32ListStr::mutable_values(int index) {
  return values_.Mutable(index);
}
inline void KVint32ListStr::set_values(int index, const ::std::string& value) {
  values_.Mutable(index)->assign(value);
}
inline void KVint32ListStr::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
}
inline void KVint32ListStr::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KVint32ListStr::add_values() {
  return values_.Add();
}
inline void KVint32ListStr::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
}
inline void KVint32ListStr::add_values(const char* value) {
  values_.Add()->assign(value);
}
inline void KVint32ListStr::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
KVint32ListStr::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
KVint32ListStr::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// ListKVint3232

// repeated .protobuf.common.KVint3232 id = 1;
inline int ListKVint3232::id_size() const {
  return id_.size();
}
inline void ListKVint3232::clear_id() {
  id_.Clear();
}
inline const ::protobuf::common::KVint3232& ListKVint3232::id(int index) const {
  return id_.Get(index);
}
inline ::protobuf::common::KVint3232* ListKVint3232::mutable_id(int index) {
  return id_.Mutable(index);
}
inline ::protobuf::common::KVint3232* ListKVint3232::add_id() {
  return id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
ListKVint3232::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
ListKVint3232::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// ReplyAddItems

// repeated .protobuf.common.KVint3264 items = 1;
inline int ReplyAddItems::items_size() const {
  return items_.size();
}
inline void ReplyAddItems::clear_items() {
  items_.Clear();
}
inline const ::protobuf::common::KVint3264& ReplyAddItems::items(int index) const {
  return items_.Get(index);
}
inline ::protobuf::common::KVint3264* ReplyAddItems::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protobuf::common::KVint3264* ReplyAddItems::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >&
ReplyAddItems::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3264 >*
ReplyAddItems::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// Hero

// required int32 id = 1;
inline bool Hero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hero::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Hero::id() const {
  return id_;
}
inline void Hero::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 heroId = 2;
inline bool Hero::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Hero::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Hero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Hero::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 Hero::heroid() const {
  return heroid_;
}
inline void Hero::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required int32 lv = 3;
inline bool Hero::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Hero::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Hero::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Hero::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 Hero::lv() const {
  return lv_;
}
inline void Hero::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// required int32 tier = 5;
inline bool Hero::has_tier() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Hero::set_has_tier() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Hero::clear_has_tier() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Hero::clear_tier() {
  tier_ = 0;
  clear_has_tier();
}
inline ::google::protobuf::int32 Hero::tier() const {
  return tier_;
}
inline void Hero::set_tier(::google::protobuf::int32 value) {
  set_has_tier();
  tier_ = value;
}

// optional .protobuf.common.Equipment equipment = 6;
inline bool Hero::has_equipment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Hero::set_has_equipment() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Hero::clear_has_equipment() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Hero::clear_equipment() {
  if (equipment_ != NULL) equipment_->::protobuf::common::Equipment::Clear();
  clear_has_equipment();
}
inline const ::protobuf::common::Equipment& Hero::equipment() const {
  return equipment_ != NULL ? *equipment_ : *default_instance_->equipment_;
}
inline ::protobuf::common::Equipment* Hero::mutable_equipment() {
  set_has_equipment();
  if (equipment_ == NULL) equipment_ = new ::protobuf::common::Equipment;
  return equipment_;
}
inline ::protobuf::common::Equipment* Hero::release_equipment() {
  clear_has_equipment();
  ::protobuf::common::Equipment* temp = equipment_;
  equipment_ = NULL;
  return temp;
}

// optional bool lock = 7;
inline bool Hero::has_lock() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Hero::set_has_lock() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Hero::clear_has_lock() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Hero::clear_lock() {
  lock_ = false;
  clear_has_lock();
}
inline bool Hero::lock() const {
  return lock_;
}
inline void Hero::set_lock(bool value) {
  set_has_lock();
  lock_ = value;
}

// optional int32 lastHp = 8;
inline bool Hero::has_lasthp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Hero::set_has_lasthp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Hero::clear_has_lasthp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Hero::clear_lasthp() {
  lasthp_ = 0;
  clear_has_lasthp();
}
inline ::google::protobuf::int32 Hero::lasthp() const {
  return lasthp_;
}
inline void Hero::set_lasthp(::google::protobuf::int32 value) {
  set_has_lasthp();
  lasthp_ = value;
}

// optional int32 skin = 9;
inline bool Hero::has_skin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Hero::set_has_skin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Hero::clear_has_skin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Hero::clear_skin() {
  skin_ = 0;
  clear_has_skin();
}
inline ::google::protobuf::int32 Hero::skin() const {
  return skin_;
}
inline void Hero::set_skin(::google::protobuf::int32 value) {
  set_has_skin();
  skin_ = value;
}

// optional bool isHideSkin = 10;
inline bool Hero::has_ishideskin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Hero::set_has_ishideskin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Hero::clear_has_ishideskin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Hero::clear_ishideskin() {
  ishideskin_ = false;
  clear_has_ishideskin();
}
inline bool Hero::ishideskin() const {
  return ishideskin_;
}
inline void Hero::set_ishideskin(bool value) {
  set_has_ishideskin();
  ishideskin_ = value;
}

// optional int32 resonanceLv = 11;
inline bool Hero::has_resonancelv() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Hero::set_has_resonancelv() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Hero::clear_has_resonancelv() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Hero::clear_resonancelv() {
  resonancelv_ = 0;
  clear_has_resonancelv();
}
inline ::google::protobuf::int32 Hero::resonancelv() const {
  return resonancelv_;
}
inline void Hero::set_resonancelv(::google::protobuf::int32 value) {
  set_has_resonancelv();
  resonancelv_ = value;
}

// optional int32 lastEnergy = 12;
inline bool Hero::has_lastenergy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Hero::set_has_lastenergy() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Hero::clear_has_lastenergy() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Hero::clear_lastenergy() {
  lastenergy_ = 0;
  clear_has_lastenergy();
}
inline ::google::protobuf::int32 Hero::lastenergy() const {
  return lastenergy_;
}
inline void Hero::set_lastenergy(::google::protobuf::int32 value) {
  set_has_lastenergy();
  lastenergy_ = value;
}

// optional bool isHelpHero = 13;
inline bool Hero::has_ishelphero() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Hero::set_has_ishelphero() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Hero::clear_has_ishelphero() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Hero::clear_ishelphero() {
  ishelphero_ = false;
  clear_has_ishelphero();
}
inline bool Hero::ishelphero() const {
  return ishelphero_;
}
inline void Hero::set_ishelphero(bool value) {
  set_has_ishelphero();
  ishelphero_ = value;
}

// optional int32 power = 14;
inline bool Hero::has_power() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Hero::set_has_power() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Hero::clear_has_power() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Hero::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 Hero::power() const {
  return power_;
}
inline void Hero::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// -------------------------------------------------------------------

// Equipment

// required int32 part_1 = 1;
inline bool Equipment::has_part_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Equipment::set_has_part_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Equipment::clear_has_part_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Equipment::clear_part_1() {
  part_1_ = 0;
  clear_has_part_1();
}
inline ::google::protobuf::int32 Equipment::part_1() const {
  return part_1_;
}
inline void Equipment::set_part_1(::google::protobuf::int32 value) {
  set_has_part_1();
  part_1_ = value;
}

// required int32 part_2 = 2;
inline bool Equipment::has_part_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Equipment::set_has_part_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Equipment::clear_has_part_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Equipment::clear_part_2() {
  part_2_ = 0;
  clear_has_part_2();
}
inline ::google::protobuf::int32 Equipment::part_2() const {
  return part_2_;
}
inline void Equipment::set_part_2(::google::protobuf::int32 value) {
  set_has_part_2();
  part_2_ = value;
}

// required int32 part_3 = 3;
inline bool Equipment::has_part_3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Equipment::set_has_part_3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Equipment::clear_has_part_3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Equipment::clear_part_3() {
  part_3_ = 0;
  clear_has_part_3();
}
inline ::google::protobuf::int32 Equipment::part_3() const {
  return part_3_;
}
inline void Equipment::set_part_3(::google::protobuf::int32 value) {
  set_has_part_3();
  part_3_ = value;
}

// required int32 part_4 = 4;
inline bool Equipment::has_part_4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Equipment::set_has_part_4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Equipment::clear_has_part_4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Equipment::clear_part_4() {
  part_4_ = 0;
  clear_has_part_4();
}
inline ::google::protobuf::int32 Equipment::part_4() const {
  return part_4_;
}
inline void Equipment::set_part_4(::google::protobuf::int32 value) {
  set_has_part_4();
  part_4_ = value;
}

// required int32 part_5 = 5;
inline bool Equipment::has_part_5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Equipment::set_has_part_5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Equipment::clear_has_part_5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Equipment::clear_part_5() {
  part_5_ = 0;
  clear_has_part_5();
}
inline ::google::protobuf::int32 Equipment::part_5() const {
  return part_5_;
}
inline void Equipment::set_part_5(::google::protobuf::int32 value) {
  set_has_part_5();
  part_5_ = value;
}

// required int32 part_6 = 6;
inline bool Equipment::has_part_6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Equipment::set_has_part_6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Equipment::clear_has_part_6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Equipment::clear_part_6() {
  part_6_ = 0;
  clear_has_part_6();
}
inline ::google::protobuf::int32 Equipment::part_6() const {
  return part_6_;
}
inline void Equipment::set_part_6(::google::protobuf::int32 value) {
  set_has_part_6();
  part_6_ = value;
}

// repeated .protobuf.common.Artifact artifact = 9;
inline int Equipment::artifact_size() const {
  return artifact_.size();
}
inline void Equipment::clear_artifact() {
  artifact_.Clear();
}
inline const ::protobuf::common::Artifact& Equipment::artifact(int index) const {
  return artifact_.Get(index);
}
inline ::protobuf::common::Artifact* Equipment::mutable_artifact(int index) {
  return artifact_.Mutable(index);
}
inline ::protobuf::common::Artifact* Equipment::add_artifact() {
  return artifact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::Artifact >&
Equipment::artifact() const {
  return artifact_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::Artifact >*
Equipment::mutable_artifact() {
  return &artifact_;
}

// -------------------------------------------------------------------

// Artifact

// required int32 key = 1;
inline bool Artifact::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Artifact::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Artifact::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Artifact::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 Artifact::key() const {
  return key_;
}
inline void Artifact::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 itemid = 2;
inline bool Artifact::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Artifact::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Artifact::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Artifact::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Artifact::itemid() const {
  return itemid_;
}
inline void Artifact::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// repeated .protobuf.common.KVint32string attribute = 3;
inline int Artifact::attribute_size() const {
  return attribute_.size();
}
inline void Artifact::clear_attribute() {
  attribute_.Clear();
}
inline const ::protobuf::common::KVint32string& Artifact::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::protobuf::common::KVint32string* Artifact::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::protobuf::common::KVint32string* Artifact::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint32string >&
Artifact::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint32string >*
Artifact::mutable_attribute() {
  return &attribute_;
}

// required int32 lv = 4;
inline bool Artifact::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Artifact::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Artifact::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Artifact::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 Artifact::lv() const {
  return lv_;
}
inline void Artifact::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// Pet

// required int32 id = 1;
inline bool Pet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pet::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Pet::id() const {
  return id_;
}
inline void Pet::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 tier = 2;
inline bool Pet::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pet::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pet::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pet::clear_tier() {
  tier_ = 0;
  clear_has_tier();
}
inline ::google::protobuf::int32 Pet::tier() const {
  return tier_;
}
inline void Pet::set_tier(::google::protobuf::int32 value) {
  set_has_tier();
  tier_ = value;
}

// required int32 lv = 3;
inline bool Pet::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pet::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pet::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pet::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 Pet::lv() const {
  return lv_;
}
inline void Pet::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// repeated int32 skillLv = 4;
inline int Pet::skilllv_size() const {
  return skilllv_.size();
}
inline void Pet::clear_skilllv() {
  skilllv_.Clear();
}
inline ::google::protobuf::int32 Pet::skilllv(int index) const {
  return skilllv_.Get(index);
}
inline void Pet::set_skilllv(int index, ::google::protobuf::int32 value) {
  skilllv_.Set(index, value);
}
inline void Pet::add_skilllv(::google::protobuf::int32 value) {
  skilllv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Pet::skilllv() const {
  return skilllv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Pet::mutable_skilllv() {
  return &skilllv_;
}

// -------------------------------------------------------------------

// LineupDetail

// repeated .protobuf.common.Hero heros = 1;
inline int LineupDetail::heros_size() const {
  return heros_.size();
}
inline void LineupDetail::clear_heros() {
  heros_.Clear();
}
inline const ::protobuf::common::Hero& LineupDetail::heros(int index) const {
  return heros_.Get(index);
}
inline ::protobuf::common::Hero* LineupDetail::mutable_heros(int index) {
  return heros_.Mutable(index);
}
inline ::protobuf::common::Hero* LineupDetail::add_heros() {
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::Hero >&
LineupDetail::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::Hero >*
LineupDetail::mutable_heros() {
  return &heros_;
}

// repeated .protobuf.common.KVint3232 science = 2;
inline int LineupDetail::science_size() const {
  return science_.size();
}
inline void LineupDetail::clear_science() {
  science_.Clear();
}
inline const ::protobuf::common::KVint3232& LineupDetail::science(int index) const {
  return science_.Get(index);
}
inline ::protobuf::common::KVint3232* LineupDetail::mutable_science(int index) {
  return science_.Mutable(index);
}
inline ::protobuf::common::KVint3232* LineupDetail::add_science() {
  return science_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >&
LineupDetail::science() const {
  return science_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::common::KVint3232 >*
LineupDetail::mutable_science() {
  return &science_;
}

// optional int32 power = 5;
inline bool LineupDetail::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LineupDetail::set_has_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LineupDetail::clear_has_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LineupDetail::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 LineupDetail::power() const {
  return power_;
}
inline void LineupDetail::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// -------------------------------------------------------------------

// KVint3234

// required int32 key = 1;
inline bool KVint3234::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVint3234::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVint3234::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVint3234::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KVint3234::key() const {
  return key_;
}
inline void KVint3234::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 type = 2;
inline bool KVint3234::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVint3234::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVint3234::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVint3234::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 KVint3234::type() const {
  return type_;
}
inline void KVint3234::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 percent = 3;
inline bool KVint3234::has_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVint3234::set_has_percent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVint3234::clear_has_percent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVint3234::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline ::google::protobuf::int32 KVint3234::percent() const {
  return percent_;
}
inline void KVint3234::set_percent(::google::protobuf::int32 value) {
  set_has_percent();
  percent_ = value;
}

// required int32 isguide = 4;
inline bool KVint3234::has_isguide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KVint3234::set_has_isguide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KVint3234::clear_has_isguide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KVint3234::clear_isguide() {
  isguide_ = 0;
  clear_has_isguide();
}
inline ::google::protobuf::int32 KVint3234::isguide() const {
  return isguide_;
}
inline void KVint3234::set_isguide(::google::protobuf::int32 value) {
  set_has_isguide();
  isguide_ = value;
}

// -------------------------------------------------------------------

// LineupTemplate

// required int32 id = 1;
inline bool LineupTemplate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineupTemplate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineupTemplate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineupTemplate::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LineupTemplate::id() const {
  return id_;
}
inline void LineupTemplate::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 heros = 2;
inline int LineupTemplate::heros_size() const {
  return heros_.size();
}
inline void LineupTemplate::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::int32 LineupTemplate::heros(int index) const {
  return heros_.Get(index);
}
inline void LineupTemplate::set_heros(int index, ::google::protobuf::int32 value) {
  heros_.Set(index, value);
}
inline void LineupTemplate::add_heros(::google::protobuf::int32 value) {
  heros_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LineupTemplate::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LineupTemplate::mutable_heros() {
  return &heros_;
}

// required int32 power = 4;
inline bool LineupTemplate::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LineupTemplate::set_has_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LineupTemplate::clear_has_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LineupTemplate::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 LineupTemplate::power() const {
  return power_;
}
inline void LineupTemplate::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// optional int32 type = 5;
inline bool LineupTemplate::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LineupTemplate::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LineupTemplate::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LineupTemplate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 LineupTemplate::type() const {
  return type_;
}
inline void LineupTemplate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MainPageInfo

// required int32 id = 1;
inline bool MainPageInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MainPageInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MainPageInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MainPageInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MainPageInfo::id() const {
  return id_;
}
inline void MainPageInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
