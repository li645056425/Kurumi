// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resonance.proto

#ifndef PROTOBUF_resonance_2eproto__INCLUDED
#define PROTOBUF_resonance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace resonance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_resonance_2eproto();
void protobuf_AssignDesc_resonance_2eproto();
void protobuf_ShutdownFile_resonance_2eproto();

class ResonanceInfo;
class HeroInfo;
class ChangeInfo;

// ===================================================================

class ResonanceInfo : public ::google::protobuf::Message {
 public:
  ResonanceInfo();
  virtual ~ResonanceInfo();
  
  ResonanceInfo(const ResonanceInfo& from);
  
  inline ResonanceInfo& operator=(const ResonanceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResonanceInfo& default_instance();
  
  void Swap(ResonanceInfo* other);
  
  // implements Message ----------------------------------------------
  
  ResonanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResonanceInfo& from);
  void MergeFrom(const ResonanceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .protobuf.resonance.HeroInfo stageHero = 1;
  inline int stagehero_size() const;
  inline void clear_stagehero();
  static const int kStageHeroFieldNumber = 1;
  inline const ::protobuf::resonance::HeroInfo& stagehero(int index) const;
  inline ::protobuf::resonance::HeroInfo* mutable_stagehero(int index);
  inline ::protobuf::resonance::HeroInfo* add_stagehero();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >&
      stagehero() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >*
      mutable_stagehero();
  
  // repeated .protobuf.resonance.HeroInfo packageHero = 2;
  inline int packagehero_size() const;
  inline void clear_packagehero();
  static const int kPackageHeroFieldNumber = 2;
  inline const ::protobuf::resonance::HeroInfo& packagehero(int index) const;
  inline ::protobuf::resonance::HeroInfo* mutable_packagehero(int index);
  inline ::protobuf::resonance::HeroInfo* add_packagehero();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >&
      packagehero() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >*
      mutable_packagehero();
  
  // @@protoc_insertion_point(class_scope:protobuf.resonance.ResonanceInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo > stagehero_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo > packagehero_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_resonance_2eproto();
  friend void protobuf_AssignDesc_resonance_2eproto();
  friend void protobuf_ShutdownFile_resonance_2eproto();
  
  void InitAsDefaultInstance();
  static ResonanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroInfo : public ::google::protobuf::Message {
 public:
  HeroInfo();
  virtual ~HeroInfo();
  
  HeroInfo(const HeroInfo& from);
  
  inline HeroInfo& operator=(const HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroInfo& default_instance();
  
  void Swap(HeroInfo* other);
  
  // implements Message ----------------------------------------------
  
  HeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroInfo& from);
  void MergeFrom(const HeroInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 heroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);
  
  // optional int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
  // optional int64 coolTime = 3;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 3;
  inline ::google::protobuf::int64 cooltime() const;
  inline void set_cooltime(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.resonance.HeroInfo)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_cooltime();
  inline void clear_has_cooltime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int64 cooltime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_resonance_2eproto();
  friend void protobuf_AssignDesc_resonance_2eproto();
  friend void protobuf_ShutdownFile_resonance_2eproto();
  
  void InitAsDefaultInstance();
  static HeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChangeInfo : public ::google::protobuf::Message {
 public:
  ChangeInfo();
  virtual ~ChangeInfo();
  
  ChangeInfo(const ChangeInfo& from);
  
  inline ChangeInfo& operator=(const ChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeInfo& default_instance();
  
  void Swap(ChangeInfo* other);
  
  // implements Message ----------------------------------------------
  
  ChangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeInfo& from);
  void MergeFrom(const ChangeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 heroId = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);
  
  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);
  
  // optional int32 beforeLv = 4;
  inline bool has_beforelv() const;
  inline void clear_beforelv();
  static const int kBeforeLvFieldNumber = 4;
  inline ::google::protobuf::int32 beforelv() const;
  inline void set_beforelv(::google::protobuf::int32 value);
  
  // optional int32 sit = 5;
  inline bool has_sit() const;
  inline void clear_sit();
  static const int kSitFieldNumber = 5;
  inline ::google::protobuf::int32 sit() const;
  inline void set_sit(::google::protobuf::int32 value);
  
  // optional int64 coolTime = 6;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 6;
  inline ::google::protobuf::int64 cooltime() const;
  inline void set_cooltime(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protobuf.resonance.ChangeInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_beforelv();
  inline void clear_has_beforelv();
  inline void set_has_sit();
  inline void clear_has_sit();
  inline void set_has_cooltime();
  inline void clear_has_cooltime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 beforelv_;
  ::google::protobuf::int64 cooltime_;
  ::google::protobuf::int32 sit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_resonance_2eproto();
  friend void protobuf_AssignDesc_resonance_2eproto();
  friend void protobuf_ShutdownFile_resonance_2eproto();
  
  void InitAsDefaultInstance();
  static ChangeInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ResonanceInfo

// repeated .protobuf.resonance.HeroInfo stageHero = 1;
inline int ResonanceInfo::stagehero_size() const {
  return stagehero_.size();
}
inline void ResonanceInfo::clear_stagehero() {
  stagehero_.Clear();
}
inline const ::protobuf::resonance::HeroInfo& ResonanceInfo::stagehero(int index) const {
  return stagehero_.Get(index);
}
inline ::protobuf::resonance::HeroInfo* ResonanceInfo::mutable_stagehero(int index) {
  return stagehero_.Mutable(index);
}
inline ::protobuf::resonance::HeroInfo* ResonanceInfo::add_stagehero() {
  return stagehero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >&
ResonanceInfo::stagehero() const {
  return stagehero_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >*
ResonanceInfo::mutable_stagehero() {
  return &stagehero_;
}

// repeated .protobuf.resonance.HeroInfo packageHero = 2;
inline int ResonanceInfo::packagehero_size() const {
  return packagehero_.size();
}
inline void ResonanceInfo::clear_packagehero() {
  packagehero_.Clear();
}
inline const ::protobuf::resonance::HeroInfo& ResonanceInfo::packagehero(int index) const {
  return packagehero_.Get(index);
}
inline ::protobuf::resonance::HeroInfo* ResonanceInfo::mutable_packagehero(int index) {
  return packagehero_.Mutable(index);
}
inline ::protobuf::resonance::HeroInfo* ResonanceInfo::add_packagehero() {
  return packagehero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >&
ResonanceInfo::packagehero() const {
  return packagehero_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::resonance::HeroInfo >*
ResonanceInfo::mutable_packagehero() {
  return &packagehero_;
}

// -------------------------------------------------------------------

// HeroInfo

// required int32 heroId = 1;
inline bool HeroInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroInfo::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 HeroInfo::heroid() const {
  return heroid_;
}
inline void HeroInfo::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional int32 grade = 2;
inline bool HeroInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 HeroInfo::grade() const {
  return grade_;
}
inline void HeroInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional int64 coolTime = 3;
inline bool HeroInfo::has_cooltime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroInfo::set_has_cooltime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroInfo::clear_has_cooltime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroInfo::clear_cooltime() {
  cooltime_ = GOOGLE_LONGLONG(0);
  clear_has_cooltime();
}
inline ::google::protobuf::int64 HeroInfo::cooltime() const {
  return cooltime_;
}
inline void HeroInfo::set_cooltime(::google::protobuf::int64 value) {
  set_has_cooltime();
  cooltime_ = value;
}

// -------------------------------------------------------------------

// ChangeInfo

// optional int32 type = 1;
inline bool ChangeInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ChangeInfo::type() const {
  return type_;
}
inline void ChangeInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 heroId = 2;
inline bool ChangeInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeInfo::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 ChangeInfo::heroid() const {
  return heroid_;
}
inline void ChangeInfo::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional int32 lv = 3;
inline bool ChangeInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 ChangeInfo::lv() const {
  return lv_;
}
inline void ChangeInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 beforeLv = 4;
inline bool ChangeInfo::has_beforelv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeInfo::set_has_beforelv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeInfo::clear_has_beforelv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeInfo::clear_beforelv() {
  beforelv_ = 0;
  clear_has_beforelv();
}
inline ::google::protobuf::int32 ChangeInfo::beforelv() const {
  return beforelv_;
}
inline void ChangeInfo::set_beforelv(::google::protobuf::int32 value) {
  set_has_beforelv();
  beforelv_ = value;
}

// optional int32 sit = 5;
inline bool ChangeInfo::has_sit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeInfo::set_has_sit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeInfo::clear_has_sit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeInfo::clear_sit() {
  sit_ = 0;
  clear_has_sit();
}
inline ::google::protobuf::int32 ChangeInfo::sit() const {
  return sit_;
}
inline void ChangeInfo::set_sit(::google::protobuf::int32 value) {
  set_has_sit();
  sit_ = value;
}

// optional int64 coolTime = 6;
inline bool ChangeInfo::has_cooltime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeInfo::set_has_cooltime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeInfo::clear_has_cooltime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeInfo::clear_cooltime() {
  cooltime_ = GOOGLE_LONGLONG(0);
  clear_has_cooltime();
}
inline ::google::protobuf::int64 ChangeInfo::cooltime() const {
  return cooltime_;
}
inline void ChangeInfo::set_cooltime(::google::protobuf::int64 value) {
  set_has_cooltime();
  cooltime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace resonance
}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_resonance_2eproto__INCLUDED
