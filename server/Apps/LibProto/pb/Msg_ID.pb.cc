// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_ID.proto

#include "Msg_ID.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
bool MessageID_IsValid(int value) {
  switch (value) {
    case 0:
    case 100001:
    case 200001:
    case 200002:
    case 300003:
    case 300004:
    case 300006:
    case 600001:
    case 600002:
    case 800001:
    case 800002:
    case 800003:
    case 800004:
    case 800005:
    case 800006:
    case 800007:
    case 800008:
    case 800009:
    case 800010:
    case 800011:
    case 800012:
    case 800013:
    case 800020:
    case 800021:
    case 800023:
    case 900001:
    case 900002:
    case 900010:
    case 900011:
    case 900101:
    case 900102:
    case 900103:
    case 900104:
    case 900105:
    case 900106:
    case 900200:
    case 900303:
    case 900304:
    case 900305:
    case 900306:
    case 900307:
    case 900308:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> MessageID_strings[42] = {};

static const char MessageID_names[] =
  "MES_CHANGE_TOKEN_NTF"
  "MSG_BEGIN"
  "MSG_CKECK_TOKEN_ACK"
  "MSG_CKECK_TOKEN_REQ"
  "MSG_CREATE_ROLE_ACK"
  "MSG_CREATE_ROLE_REQ"
  "MSG_ENTER_GAME_ACK"
  "MSG_ENTER_GAME_REQ"
  "MSG_EXIT_FIGHT_ACK"
  "MSG_EXIT_FIGHT_REQ"
  "MSG_EXIT_GAME_NTF"
  "MSG_JOIN_FIGHT_ACK"
  "MSG_JOIN_FIGHT_REQ"
  "MSG_LOADING_PERCENT_ACK"
  "MSG_LOADING_PERCENT_REQ"
  "MSG_LOGIN_ACK"
  "MSG_LOGIN_GATE_ACK"
  "MSG_LOGIN_REQ"
  "MSG_MODIFY_ROLE_DATA_ACK"
  "MSG_MODIFY_ROLE_DATA_REQ"
  "MSG_NEW_FIGHT_ACK"
  "MSG_NEW_FIGHT_REQ"
  "MSG_PING_ACK"
  "MSG_PING_REQ"
  "MSG_PLAYER_EXIT_FIGHT_NTF"
  "MSG_PLAYER_READY_NTF"
  "MSG_PUSH_FRAME_BEGIN"
  "MSG_PUSH_FRAME_END"
  "MSG_PUSH_FRAME_INPUT"
  "MSG_PUSH_PING_NTF"
  "MSG_PUSH_ROLE_DATA"
  "MSG_REG_SERVER_NODE_ACK"
  "MSG_REG_SERVER_NODE_REQ"
  "MSG_RUN_NEXT_FRAME_ACK"
  "MSG_RUN_NEXT_FRAME_REQ"
  "MSG_START_FIGHT_NTF"
  "MSG_START_PVE_ACK"
  "MSG_START_PVE_REQ"
  "MSG_START_PVP_ACK"
  "MSG_START_PVP_REQ"
  "MSG_STOP_PVP_ACK"
  "MSG_STOP_PVP_REQ";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry MessageID_entries[] = {
  { {MessageID_names + 0, 20}, 300006 },
  { {MessageID_names + 20, 9}, 0 },
  { {MessageID_names + 29, 19}, 300004 },
  { {MessageID_names + 48, 19}, 300003 },
  { {MessageID_names + 67, 19}, 900304 },
  { {MessageID_names + 86, 19}, 900303 },
  { {MessageID_names + 105, 18}, 900306 },
  { {MessageID_names + 123, 18}, 900305 },
  { {MessageID_names + 141, 18}, 800008 },
  { {MessageID_names + 159, 18}, 800007 },
  { {MessageID_names + 177, 17}, 900010 },
  { {MessageID_names + 194, 18}, 800002 },
  { {MessageID_names + 212, 18}, 800001 },
  { {MessageID_names + 230, 23}, 800010 },
  { {MessageID_names + 253, 23}, 800009 },
  { {MessageID_names + 276, 13}, 900002 },
  { {MessageID_names + 289, 18}, 100001 },
  { {MessageID_names + 307, 13}, 900001 },
  { {MessageID_names + 320, 24}, 900308 },
  { {MessageID_names + 344, 24}, 900307 },
  { {MessageID_names + 368, 17}, 200002 },
  { {MessageID_names + 385, 17}, 200001 },
  { {MessageID_names + 402, 12}, 800021 },
  { {MessageID_names + 414, 12}, 800020 },
  { {MessageID_names + 426, 25}, 800006 },
  { {MessageID_names + 451, 20}, 800005 },
  { {MessageID_names + 471, 20}, 800011 },
  { {MessageID_names + 491, 18}, 800013 },
  { {MessageID_names + 509, 20}, 800012 },
  { {MessageID_names + 529, 17}, 800023 },
  { {MessageID_names + 546, 18}, 900011 },
  { {MessageID_names + 564, 23}, 600002 },
  { {MessageID_names + 587, 23}, 600001 },
  { {MessageID_names + 610, 22}, 800004 },
  { {MessageID_names + 632, 22}, 800003 },
  { {MessageID_names + 654, 19}, 900200 },
  { {MessageID_names + 673, 17}, 900102 },
  { {MessageID_names + 690, 17}, 900101 },
  { {MessageID_names + 707, 17}, 900104 },
  { {MessageID_names + 724, 17}, 900103 },
  { {MessageID_names + 741, 16}, 900106 },
  { {MessageID_names + 757, 16}, 900105 },
};

static const int MessageID_entries_by_number[] = {
  1, // 0 -> MSG_BEGIN
  16, // 100001 -> MSG_LOGIN_GATE_ACK
  21, // 200001 -> MSG_NEW_FIGHT_REQ
  20, // 200002 -> MSG_NEW_FIGHT_ACK
  3, // 300003 -> MSG_CKECK_TOKEN_REQ
  2, // 300004 -> MSG_CKECK_TOKEN_ACK
  0, // 300006 -> MES_CHANGE_TOKEN_NTF
  32, // 600001 -> MSG_REG_SERVER_NODE_REQ
  31, // 600002 -> MSG_REG_SERVER_NODE_ACK
  12, // 800001 -> MSG_JOIN_FIGHT_REQ
  11, // 800002 -> MSG_JOIN_FIGHT_ACK
  34, // 800003 -> MSG_RUN_NEXT_FRAME_REQ
  33, // 800004 -> MSG_RUN_NEXT_FRAME_ACK
  25, // 800005 -> MSG_PLAYER_READY_NTF
  24, // 800006 -> MSG_PLAYER_EXIT_FIGHT_NTF
  9, // 800007 -> MSG_EXIT_FIGHT_REQ
  8, // 800008 -> MSG_EXIT_FIGHT_ACK
  14, // 800009 -> MSG_LOADING_PERCENT_REQ
  13, // 800010 -> MSG_LOADING_PERCENT_ACK
  26, // 800011 -> MSG_PUSH_FRAME_BEGIN
  28, // 800012 -> MSG_PUSH_FRAME_INPUT
  27, // 800013 -> MSG_PUSH_FRAME_END
  23, // 800020 -> MSG_PING_REQ
  22, // 800021 -> MSG_PING_ACK
  29, // 800023 -> MSG_PUSH_PING_NTF
  17, // 900001 -> MSG_LOGIN_REQ
  15, // 900002 -> MSG_LOGIN_ACK
  10, // 900010 -> MSG_EXIT_GAME_NTF
  30, // 900011 -> MSG_PUSH_ROLE_DATA
  37, // 900101 -> MSG_START_PVE_REQ
  36, // 900102 -> MSG_START_PVE_ACK
  39, // 900103 -> MSG_START_PVP_REQ
  38, // 900104 -> MSG_START_PVP_ACK
  41, // 900105 -> MSG_STOP_PVP_REQ
  40, // 900106 -> MSG_STOP_PVP_ACK
  35, // 900200 -> MSG_START_FIGHT_NTF
  5, // 900303 -> MSG_CREATE_ROLE_REQ
  4, // 900304 -> MSG_CREATE_ROLE_ACK
  7, // 900305 -> MSG_ENTER_GAME_REQ
  6, // 900306 -> MSG_ENTER_GAME_ACK
  19, // 900307 -> MSG_MODIFY_ROLE_DATA_REQ
  18, // 900308 -> MSG_MODIFY_ROLE_DATA_ACK
};

const std::string& MessageID_Name(
    MessageID value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          MessageID_entries,
          MessageID_entries_by_number,
          42, MessageID_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      MessageID_entries,
      MessageID_entries_by_number,
      42, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     MessageID_strings[idx].get();
}
bool MessageID_Parse(
    const std::string& name, MessageID* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      MessageID_entries, 42, name, &int_value);
  if (success) {
    *value = static_cast<MessageID>(int_value);
  }
  return success;
}
bool FightType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> FightType_strings[2] = {};

static const char FightType_names[] =
  "FIGHT_PVE"
  "FIGHT_PVP";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry FightType_entries[] = {
  { {FightType_names + 0, 9}, 0 },
  { {FightType_names + 9, 9}, 1 },
};

static const int FightType_entries_by_number[] = {
  0, // 0 -> FIGHT_PVE
  1, // 1 -> FIGHT_PVP
};

const std::string& FightType_Name(
    FightType value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          FightType_entries,
          FightType_entries_by_number,
          2, FightType_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      FightType_entries,
      FightType_entries_by_number,
      2, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     FightType_strings[idx].get();
}
bool FightType_Parse(
    const std::string& name, FightType* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      FightType_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<FightType>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
